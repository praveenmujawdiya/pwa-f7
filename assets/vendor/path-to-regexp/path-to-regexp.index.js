/**
 * Bundled by jsDelivr using Rollup v2.79.2 and Terser v5.39.0.
 * Original file: /npm/path-to-regexp@6.3.0/dist.es2015/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
function e(e,t){void 0===t&&(t={});for(var n=function(e){for(var t=[],n=0;n<e.length;){var r=e[n];if("*"!==r&&"+"!==r&&"?"!==r)if("\\"!==r)if("{"!==r)if("}"!==r)if(":"!==r)if("("!==r)t.push({type:"CHAR",index:n,value:e[n++]});else{var o=1,i="";if("?"===e[c=n+1])throw new TypeError('Pattern cannot start with "?" at '.concat(c));for(;c<e.length;)if("\\"!==e[c]){if(")"===e[c]){if(0==--o){c++;break}}else if("("===e[c]&&(o++,"?"!==e[c+1]))throw new TypeError("Capturing groups are not allowed at ".concat(c));i+=e[c++]}else i+=e[c++]+e[c++];if(o)throw new TypeError("Unbalanced pattern at ".concat(n));if(!i)throw new TypeError("Missing pattern at ".concat(n));t.push({type:"PATTERN",index:n,value:i}),n=c}else{for(var a="",c=n+1;c<e.length;){var f=e.charCodeAt(c);if(!(f>=48&&f<=57||f>=65&&f<=90||f>=97&&f<=122||95===f))break;a+=e[c++]}if(!a)throw new TypeError("Missing parameter name at ".concat(n));t.push({type:"NAME",index:n,value:a}),n=c}else t.push({type:"CLOSE",index:n,value:e[n++]});else t.push({type:"OPEN",index:n,value:e[n++]});else t.push({type:"ESCAPED_CHAR",index:n++,value:e[n++]});else t.push({type:"MODIFIER",index:n,value:e[n++]})}return t.push({type:"END",index:n,value:""}),t}(e),r=t.prefixes,o=void 0===r?"./":r,a=t.delimiter,c=void 0===a?"/#?":a,f=[],u=0,p=0,s="",d=function(e){if(p<n.length&&n[p].type===e)return n[p++].value},v=function(e){var t=d(e);if(void 0!==t)return t;var r=n[p],o=r.type,i=r.index;throw new TypeError("Unexpected ".concat(o," at ").concat(i,", expected ").concat(e))},l=function(){for(var e,t="";e=d("CHAR")||d("ESCAPED_CHAR");)t+=e;return t},h=function(e){var t=f[f.length-1],n=e||(t&&"string"==typeof t?t:"");if(t&&!n)throw new TypeError('Must have text between two parameters, missing text after "'.concat(t.name,'"'));return!n||function(e){for(var t=0,n=c;t<n.length;t++){var r=n[t];if(e.indexOf(r)>-1)return!0}return!1}(n)?"[^".concat(i(c),"]+?"):"(?:(?!".concat(i(n),")[^").concat(i(c),"])+?")};p<n.length;){var x=d("CHAR"),m=d("NAME"),E=d("PATTERN");if(m||E){var y=x||"";-1===o.indexOf(y)&&(s+=y,y=""),s&&(f.push(s),s=""),f.push({name:m||u++,prefix:y,suffix:"",pattern:E||h(y),modifier:d("MODIFIER")||""})}else{var g=x||d("ESCAPED_CHAR");if(g)s+=g;else if(s&&(f.push(s),s=""),d("OPEN")){y=l();var w=d("NAME")||"",A=d("PATTERN")||"",T=l();v("CLOSE"),f.push({name:w||(A?u++:""),pattern:w&&!A?h(y):A,prefix:y,suffix:T,modifier:d("MODIFIER")||""})}else v("END")}}return f}function t(t,r){return n(e(t,r),r)}function n(e,t){void 0===t&&(t={});var n=a(t),r=t.encode,o=void 0===r?function(e){return e}:r,i=t.validate,c=void 0===i||i,f=e.map((function(e){if("object"==typeof e)return new RegExp("^(?:".concat(e.pattern,")$"),n)}));return function(t){for(var n="",r=0;r<e.length;r++){var i=e[r];if("string"!=typeof i){var a=t?t[i.name]:void 0,u="?"===i.modifier||"*"===i.modifier,p="*"===i.modifier||"+"===i.modifier;if(Array.isArray(a)){if(!p)throw new TypeError('Expected "'.concat(i.name,'" to not repeat, but got an array'));if(0===a.length){if(u)continue;throw new TypeError('Expected "'.concat(i.name,'" to not be empty'))}for(var s=0;s<a.length;s++){var d=o(a[s],i);if(c&&!f[r].test(d))throw new TypeError('Expected all "'.concat(i.name,'" to match "').concat(i.pattern,'", but got "').concat(d,'"'));n+=i.prefix+d+i.suffix}}else if("string"!=typeof a&&"number"!=typeof a){if(!u){var v=p?"an array":"a string";throw new TypeError('Expected "'.concat(i.name,'" to be ').concat(v))}}else{d=o(String(a),i);if(c&&!f[r].test(d))throw new TypeError('Expected "'.concat(i.name,'" to match "').concat(i.pattern,'", but got "').concat(d,'"'));n+=i.prefix+d+i.suffix}}else n+=i}return n}}function r(e,t){var n=[];return o(f(e,n,t),n,t)}function o(e,t,n){void 0===n&&(n={});var r=n.decode,o=void 0===r?function(e){return e}:r;return function(n){var r=e.exec(n);if(!r)return!1;for(var i=r[0],a=r.index,c=Object.create(null),f=function(e){if(void 0===r[e])return"continue";var n=t[e-1];"*"===n.modifier||"+"===n.modifier?c[n.name]=r[e].split(n.prefix+n.suffix).map((function(e){return o(e,n)})):c[n.name]=o(r[e],n)},u=1;u<r.length;u++)f(u);return{path:i,index:a,params:c}}}function i(e){return e.replace(/([.+*?=^!:${}()[\]|/\\])/g,"\\$1")}function a(e){return e&&e.sensitive?"":"i"}function c(e,t,n){void 0===n&&(n={});for(var r=n.strict,o=void 0!==r&&r,c=n.start,f=void 0===c||c,u=n.end,p=void 0===u||u,s=n.encode,d=void 0===s?function(e){return e}:s,v=n.delimiter,l=void 0===v?"/#?":v,h=n.endsWith,x="[".concat(i(void 0===h?"":h),"]|$"),m="[".concat(i(l),"]"),E=f?"^":"",y=0,g=e;y<g.length;y++){var w=g[y];if("string"==typeof w)E+=i(d(w));else{var A=i(d(w.prefix)),T=i(d(w.suffix));if(w.pattern)if(t&&t.push(w),A||T)if("+"===w.modifier||"*"===w.modifier){var R="*"===w.modifier?"?":"";E+="(?:".concat(A,"((?:").concat(w.pattern,")(?:").concat(T).concat(A,"(?:").concat(w.pattern,"))*)").concat(T,")").concat(R)}else E+="(?:".concat(A,"(").concat(w.pattern,")").concat(T,")").concat(w.modifier);else{if("+"===w.modifier||"*"===w.modifier)throw new TypeError('Can not repeat "'.concat(w.name,'" without a prefix and suffix'));E+="(".concat(w.pattern,")").concat(w.modifier)}else E+="(?:".concat(A).concat(T,")").concat(w.modifier)}}if(p)o||(E+="".concat(m,"?")),E+=n.endsWith?"(?=".concat(x,")"):"$";else{var C=e[e.length-1],b="string"==typeof C?m.indexOf(C[C.length-1])>-1:void 0===C;o||(E+="(?:".concat(m,"(?=").concat(x,"))?")),b||(E+="(?=".concat(m,"|").concat(x,")"))}return new RegExp(E,a(n))}function f(t,n,r){return t instanceof RegExp?function(e,t){if(!t)return e;for(var n=/\((?:\?<(.*?)>)?(?!\?)/g,r=0,o=n.exec(e.source);o;)t.push({name:o[1]||r++,prefix:"",suffix:"",modifier:"",pattern:""}),o=n.exec(e.source);return e}(t,n):Array.isArray(t)?function(e,t,n){var r=e.map((function(e){return f(e,t,n).source}));return new RegExp("(?:".concat(r.join("|"),")"),a(n))}(t,n,r):function(t,n,r){return c(e(t,r),n,r)}(t,n,r)}export{t as compile,r as match,e as parse,f as pathToRegexp,o as regexpToFunction,n as tokensToFunction,c as tokensToRegexp};export default null;

<?php

use Twig\Environment;
use Twig\Error\LoaderError;
use Twig\Error\RuntimeError;
use Twig\Extension\CoreExtension;
use Twig\Extension\SandboxExtension;
use Twig\Markup;
use Twig\Sandbox\SecurityError;
use Twig\Sandbox\SecurityNotAllowedTagError;
use Twig\Sandbox\SecurityNotAllowedFilterError;
use Twig\Sandbox\SecurityNotAllowedFunctionError;
use Twig\Source;
use Twig\Template;
use Twig\TemplateWrapper;

/* components/Features.html.twig */
class __TwigTemplate_1fb5cbdf94a162448bd258deeed21be9 extends Template
{
    private Source $source;
    /**
     * @var array<string, Template>
     */
    private array $macros = [];

    public function __construct(Environment $env)
    {
        parent::__construct($env);

        $this->source = $this->getSourceContext();

        $this->parent = false;

        $this->blocks = [
        ];
    }

    protected function doDisplay(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        // line 1
        yield "<section ";
        yield $this->env->getRuntime('Twig\Runtime\EscaperRuntime')->escape((isset($context["attributes"]) || array_key_exists("attributes", $context) ? $context["attributes"] : (function () { throw new RuntimeError('Variable "attributes" does not exist.', 1, $this->source); })()), "html", null, true);
        yield ">

    <h2 class=\"block-title block-title-medium\">";
        // line 3
        yield $this->env->getRuntime('Twig\Runtime\EscaperRuntime')->escape($this->extensions['Symfony\Bridge\Twig\Extension\TranslationExtension']->trans("homepage.demo"), "html", null, true);
        yield "</h2>
    <div class=\"list cards-list media-list inset margin-vertical-half\">
        <ul class=\"row align-items-stretch justify-content-flex-start\" style=\"column-gap: var(--f7-grid-gap);\">

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                ";
        // line 8
        $_v0 = $this->env->getRuntime("Symfony\\UX\\TwigComponent\\Twig\\ComponentRuntime");
        $preRendered = $_v0->preRender("Feature", Twig\Extension\CoreExtension::toArray(["available" => "true", "link" => $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("app_feature_installation"), "title" => "Installation", "description" => "Using the beforeinstallprompt event, a native dialog can be displayed to install a web app"]));
        if (null !== $preRendered) {
            yield $preRendered; 
        } else {
            $preRenderEvent = $_v0->startEmbedComponent("Feature", Twig\Extension\CoreExtension::toArray(["available" => "true", "link" => $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("app_feature_installation"), "title" => "Installation", "description" => "Using the beforeinstallprompt event, a native dialog can be displayed to install a web app"]), $context, "components/Features.html.twig", 33086807441);
            $embeddedContext = $preRenderEvent->getVariables();
            $embeddedContext["__parent__"] = $preRenderEvent->getTemplate();
            $embeddedContext["outerBlocks"] ??= new \Symfony\UX\TwigComponent\BlockStack();
            $embeddedBlocks = $embeddedContext["outerBlocks"]->convert($blocks, 33086807441);
            $this->loadTemplate("components/Features.html.twig", "components/Features.html.twig", 8, "33086807441")->display($embeddedContext, $embeddedBlocks);
            $_v0->finishEmbedComponent();
        }
        // line 11
        yield "            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                ";
        // line 14
        $_v1 = $this->env->getRuntime("Symfony\\UX\\TwigComponent\\Twig\\ComponentRuntime");
        $preRendered = $_v1->preRender("Feature", Twig\Extension\CoreExtension::toArray(["available" => "true", "link" => $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("app_feature_offline_support"), "title" => "Offline support", "description" => "The Service Worker enables web apps to work offline"]));
        if (null !== $preRendered) {
            yield $preRendered; 
        } else {
            $preRenderEvent = $_v1->startEmbedComponent("Feature", Twig\Extension\CoreExtension::toArray(["available" => "true", "link" => $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("app_feature_offline_support"), "title" => "Offline support", "description" => "The Service Worker enables web apps to work offline"]), $context, "components/Features.html.twig", 3861542371);
            $embeddedContext = $preRenderEvent->getVariables();
            $embeddedContext["__parent__"] = $preRenderEvent->getTemplate();
            $embeddedContext["outerBlocks"] ??= new \Symfony\UX\TwigComponent\BlockStack();
            $embeddedBlocks = $embeddedContext["outerBlocks"]->convert($blocks, 3861542371);
            $this->loadTemplate("components/Features.html.twig", "components/Features.html.twig", 14, "3861542371")->display($embeddedContext, $embeddedBlocks);
            $_v1->finishEmbedComponent();
        }
        // line 17
        yield "            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                ";
        // line 20
        $_v2 = $this->env->getRuntime("Symfony\\UX\\TwigComponent\\Twig\\ComponentRuntime");
        $preRendered = $_v2->preRender("Feature", Twig\Extension\CoreExtension::toArray(["link" => $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("app_feature_notifications"), "title" => "Notifications", "description" => "The Notifications API enables web apps to display notifications, even when the app is not active."]));
        if (null !== $preRendered) {
            yield $preRendered; 
        } else {
            $preRenderEvent = $_v2->startEmbedComponent("Feature", Twig\Extension\CoreExtension::toArray(["link" => $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("app_feature_notifications"), "title" => "Notifications", "description" => "The Notifications API enables web apps to display notifications, even when the app is not active."]), $context, "components/Features.html.twig", 9943554951);
            $embeddedContext = $preRenderEvent->getVariables();
            $embeddedContext["__parent__"] = $preRenderEvent->getTemplate();
            $embeddedContext["outerBlocks"] ??= new \Symfony\UX\TwigComponent\BlockStack();
            $embeddedBlocks = $embeddedContext["outerBlocks"]->convert($blocks, 9943554951);
            $this->loadTemplate("components/Features.html.twig", "components/Features.html.twig", 20, "9943554951")->display($embeddedContext, $embeddedBlocks);
            $_v2->finishEmbedComponent();
        }
        // line 23
        yield "            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                ";
        // line 26
        $_v3 = $this->env->getRuntime("Symfony\\UX\\TwigComponent\\Twig\\ComponentRuntime");
        $preRendered = $_v3->preRender("Feature", Twig\Extension\CoreExtension::toArray(["available" => "true", "link" => $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("app_feature_shortcuts"), "title" => "Shortcuts", "description" => "Shortcuts provide quick access to pages in your app from the app icon."]));
        if (null !== $preRendered) {
            yield $preRendered; 
        } else {
            $preRenderEvent = $_v3->startEmbedComponent("Feature", Twig\Extension\CoreExtension::toArray(["available" => "true", "link" => $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("app_feature_shortcuts"), "title" => "Shortcuts", "description" => "Shortcuts provide quick access to pages in your app from the app icon."]), $context, "components/Features.html.twig", 35257743541);
            $embeddedContext = $preRenderEvent->getVariables();
            $embeddedContext["__parent__"] = $preRenderEvent->getTemplate();
            $embeddedContext["outerBlocks"] ??= new \Symfony\UX\TwigComponent\BlockStack();
            $embeddedBlocks = $embeddedContext["outerBlocks"]->convert($blocks, 35257743541);
            $this->loadTemplate("components/Features.html.twig", "components/Features.html.twig", 26, "35257743541")->display($embeddedContext, $embeddedBlocks);
            $_v3->finishEmbedComponent();
        }
        // line 29
        yield "            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                ";
        // line 32
        $_v4 = $this->env->getRuntime("Symfony\\UX\\TwigComponent\\Twig\\ComponentRuntime");
        $preRendered = $_v4->preRender("Feature", Twig\Extension\CoreExtension::toArray(["available" => "true", "link" => $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("app_feature_view_transition"), "title" => "View Transitions", "description" => "The View Transitions API enables app-like transitions between pages."]));
        if (null !== $preRendered) {
            yield $preRendered; 
        } else {
            $preRenderEvent = $_v4->startEmbedComponent("Feature", Twig\Extension\CoreExtension::toArray(["available" => "true", "link" => $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("app_feature_view_transition"), "title" => "View Transitions", "description" => "The View Transitions API enables app-like transitions between pages."]), $context, "components/Features.html.twig", 34279242981);
            $embeddedContext = $preRenderEvent->getVariables();
            $embeddedContext["__parent__"] = $preRenderEvent->getTemplate();
            $embeddedContext["outerBlocks"] ??= new \Symfony\UX\TwigComponent\BlockStack();
            $embeddedBlocks = $embeddedContext["outerBlocks"]->convert($blocks, 34279242981);
            $this->loadTemplate("components/Features.html.twig", "components/Features.html.twig", 32, "34279242981")->display($embeddedContext, $embeddedBlocks);
            $_v4->finishEmbedComponent();
        }
        // line 35
        yield "            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                ";
        // line 38
        $_v5 = $this->env->getRuntime("Symfony\\UX\\TwigComponent\\Twig\\ComponentRuntime");
        $preRendered = $_v5->preRender("Feature", Twig\Extension\CoreExtension::toArray(["available" => "true", "link" => $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("app_feature_geolocation"), "title" => "Geolocation", "description" => "The Geolocation API enables users to share their location with web apps."]));
        if (null !== $preRendered) {
            yield $preRendered; 
        } else {
            $preRenderEvent = $_v5->startEmbedComponent("Feature", Twig\Extension\CoreExtension::toArray(["available" => "true", "link" => $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("app_feature_geolocation"), "title" => "Geolocation", "description" => "The Geolocation API enables users to share their location with web apps."]), $context, "components/Features.html.twig", 7468524361);
            $embeddedContext = $preRenderEvent->getVariables();
            $embeddedContext["__parent__"] = $preRenderEvent->getTemplate();
            $embeddedContext["outerBlocks"] ??= new \Symfony\UX\TwigComponent\BlockStack();
            $embeddedBlocks = $embeddedContext["outerBlocks"]->convert($blocks, 7468524361);
            $this->loadTemplate("components/Features.html.twig", "components/Features.html.twig", 38, "7468524361")->display($embeddedContext, $embeddedBlocks);
            $_v5->finishEmbedComponent();
        }
        // line 41
        yield "            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                ";
        // line 44
        $_v6 = $this->env->getRuntime("Symfony\\UX\\TwigComponent\\Twig\\ComponentRuntime");
        $preRendered = $_v6->preRender("Feature", Twig\Extension\CoreExtension::toArray(["available" => "true", "link" => $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("app_feature_media_capture"), "title" => "Media capture", "description" => "Media capture allows web apps to use the camera and microphone of a device"]));
        if (null !== $preRendered) {
            yield $preRendered; 
        } else {
            $preRenderEvent = $_v6->startEmbedComponent("Feature", Twig\Extension\CoreExtension::toArray(["available" => "true", "link" => $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("app_feature_media_capture"), "title" => "Media capture", "description" => "Media capture allows web apps to use the camera and microphone of a device"]), $context, "components/Features.html.twig", 17859734321);
            $embeddedContext = $preRenderEvent->getVariables();
            $embeddedContext["__parent__"] = $preRenderEvent->getTemplate();
            $embeddedContext["outerBlocks"] ??= new \Symfony\UX\TwigComponent\BlockStack();
            $embeddedBlocks = $embeddedContext["outerBlocks"]->convert($blocks, 17859734321);
            $this->loadTemplate("components/Features.html.twig", "components/Features.html.twig", 44, "17859734321")->display($embeddedContext, $embeddedBlocks);
            $_v6->finishEmbedComponent();
        }
        // line 47
        yield "            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-deeporange\">
                ";
        // line 50
        $_v7 = $this->env->getRuntime("Symfony\\UX\\TwigComponent\\Twig\\ComponentRuntime");
        $preRendered = $_v7->preRender("Feature", Twig\Extension\CoreExtension::toArray(["available" => "true", "link" => $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("app_feature_picture_in_picture"), "title" => "Picture-in-picture", "description" => "The Document Picture-in-Picture API makes it possible to open an always-on-top window that can be populated with arbitrary HTML content."]));
        if (null !== $preRendered) {
            yield $preRendered; 
        } else {
            $preRenderEvent = $_v7->startEmbedComponent("Feature", Twig\Extension\CoreExtension::toArray(["available" => "true", "link" => $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("app_feature_picture_in_picture"), "title" => "Picture-in-picture", "description" => "The Document Picture-in-Picture API makes it possible to open an always-on-top window that can be populated with arbitrary HTML content."]), $context, "components/Features.html.twig", 19465010881);
            $embeddedContext = $preRenderEvent->getVariables();
            $embeddedContext["__parent__"] = $preRenderEvent->getTemplate();
            $embeddedContext["outerBlocks"] ??= new \Symfony\UX\TwigComponent\BlockStack();
            $embeddedBlocks = $embeddedContext["outerBlocks"]->convert($blocks, 19465010881);
            $this->loadTemplate("components/Features.html.twig", "components/Features.html.twig", 50, "19465010881")->display($embeddedContext, $embeddedBlocks);
            $_v7->finishEmbedComponent();
        }
        // line 53
        yield "            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                ";
        // line 56
        $_v8 = $this->env->getRuntime("Symfony\\UX\\TwigComponent\\Twig\\ComponentRuntime");
        $preRendered = $_v8->preRender("Feature", Twig\Extension\CoreExtension::toArray(["link" => $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("app_feature_file_system"), "title" => "File System", "description" => "Access to the file system of the user's device"]));
        if (null !== $preRendered) {
            yield $preRendered; 
        } else {
            $preRenderEvent = $_v8->startEmbedComponent("Feature", Twig\Extension\CoreExtension::toArray(["link" => $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("app_feature_file_system"), "title" => "File System", "description" => "Access to the file system of the user's device"]), $context, "components/Features.html.twig", 26407472211);
            $embeddedContext = $preRenderEvent->getVariables();
            $embeddedContext["__parent__"] = $preRenderEvent->getTemplate();
            $embeddedContext["outerBlocks"] ??= new \Symfony\UX\TwigComponent\BlockStack();
            $embeddedBlocks = $embeddedContext["outerBlocks"]->convert($blocks, 26407472211);
            $this->loadTemplate("components/Features.html.twig", "components/Features.html.twig", 56, "26407472211")->display($embeddedContext, $embeddedBlocks);
            $_v8->finishEmbedComponent();
        }
        // line 59
        yield "            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                ";
        // line 62
        $_v9 = $this->env->getRuntime("Symfony\\UX\\TwigComponent\\Twig\\ComponentRuntime");
        $preRendered = $_v9->preRender("Feature", Twig\Extension\CoreExtension::toArray(["link" => $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("app_feature_authentication"), "title" => "Authentication", "description" => "Web Authentication API (WebAuthn) enables passwordless authentication through your device's fingerprint reader or an external USB Security Key."]));
        if (null !== $preRendered) {
            yield $preRendered; 
        } else {
            $preRenderEvent = $_v9->startEmbedComponent("Feature", Twig\Extension\CoreExtension::toArray(["link" => $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("app_feature_authentication"), "title" => "Authentication", "description" => "Web Authentication API (WebAuthn) enables passwordless authentication through your device's fingerprint reader or an external USB Security Key."]), $context, "components/Features.html.twig", 29720609431);
            $embeddedContext = $preRenderEvent->getVariables();
            $embeddedContext["__parent__"] = $preRenderEvent->getTemplate();
            $embeddedContext["outerBlocks"] ??= new \Symfony\UX\TwigComponent\BlockStack();
            $embeddedBlocks = $embeddedContext["outerBlocks"]->convert($blocks, 29720609431);
            $this->loadTemplate("components/Features.html.twig", "components/Features.html.twig", 62, "29720609431")->display($embeddedContext, $embeddedBlocks);
            $_v9->finishEmbedComponent();
        }
        // line 65
        yield "            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                ";
        // line 68
        $_v10 = $this->env->getRuntime("Symfony\\UX\\TwigComponent\\Twig\\ComponentRuntime");
        $preRendered = $_v10->preRender("Feature", Twig\Extension\CoreExtension::toArray(["available" => "true", "link" => $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("app_feature_protocol_handling"), "title" => "Protocol Handling", "description" => "Protocol handling enables web apps to register their ability to open links with particular URL schemes."]));
        if (null !== $preRendered) {
            yield $preRendered; 
        } else {
            $preRenderEvent = $_v10->startEmbedComponent("Feature", Twig\Extension\CoreExtension::toArray(["available" => "true", "link" => $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("app_feature_protocol_handling"), "title" => "Protocol Handling", "description" => "Protocol handling enables web apps to register their ability to open links with particular URL schemes."]), $context, "components/Features.html.twig", 13749381291);
            $embeddedContext = $preRenderEvent->getVariables();
            $embeddedContext["__parent__"] = $preRenderEvent->getTemplate();
            $embeddedContext["outerBlocks"] ??= new \Symfony\UX\TwigComponent\BlockStack();
            $embeddedBlocks = $embeddedContext["outerBlocks"]->convert($blocks, 13749381291);
            $this->loadTemplate("components/Features.html.twig", "components/Features.html.twig", 68, "13749381291")->display($embeddedContext, $embeddedBlocks);
            $_v10->finishEmbedComponent();
        }
        // line 71
        yield "            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                ";
        // line 74
        $_v11 = $this->env->getRuntime("Symfony\\UX\\TwigComponent\\Twig\\ComponentRuntime");
        $preRendered = $_v11->preRender("Feature", Twig\Extension\CoreExtension::toArray(["available" => "true", "link" => $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("app_feature_file_handling"), "title" => "File Handling API", "description" => "The File Handling API enables web apps to register as file handlers with the operating system"]));
        if (null !== $preRendered) {
            yield $preRendered; 
        } else {
            $preRenderEvent = $_v11->startEmbedComponent("Feature", Twig\Extension\CoreExtension::toArray(["available" => "true", "link" => $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("app_feature_file_handling"), "title" => "File Handling API", "description" => "The File Handling API enables web apps to register as file handlers with the operating system"]), $context, "components/Features.html.twig", 10967187151);
            $embeddedContext = $preRenderEvent->getVariables();
            $embeddedContext["__parent__"] = $preRenderEvent->getTemplate();
            $embeddedContext["outerBlocks"] ??= new \Symfony\UX\TwigComponent\BlockStack();
            $embeddedBlocks = $embeddedContext["outerBlocks"]->convert($blocks, 10967187151);
            $this->loadTemplate("components/Features.html.twig", "components/Features.html.twig", 74, "10967187151")->display($embeddedContext, $embeddedBlocks);
            $_v11->finishEmbedComponent();
        }
        // line 77
        yield "            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                ";
        // line 80
        $_v12 = $this->env->getRuntime("Symfony\\UX\\TwigComponent\\Twig\\ComponentRuntime");
        $preRendered = $_v12->preRender("Feature", Twig\Extension\CoreExtension::toArray(["link" => $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("app_feature_contact_picker"), "title" => "Contact picker", "description" => "The Contact Picker API allows web apps to select the user's contacts after permission has been granted."]));
        if (null !== $preRendered) {
            yield $preRendered; 
        } else {
            $preRenderEvent = $_v12->startEmbedComponent("Feature", Twig\Extension\CoreExtension::toArray(["link" => $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("app_feature_contact_picker"), "title" => "Contact picker", "description" => "The Contact Picker API allows web apps to select the user's contacts after permission has been granted."]), $context, "components/Features.html.twig", 32492261571);
            $embeddedContext = $preRenderEvent->getVariables();
            $embeddedContext["__parent__"] = $preRenderEvent->getTemplate();
            $embeddedContext["outerBlocks"] ??= new \Symfony\UX\TwigComponent\BlockStack();
            $embeddedBlocks = $embeddedContext["outerBlocks"]->convert($blocks, 32492261571);
            $this->loadTemplate("components/Features.html.twig", "components/Features.html.twig", 80, "32492261571")->display($embeddedContext, $embeddedBlocks);
            $_v12->finishEmbedComponent();
        }
        // line 83
        yield "            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                ";
        // line 86
        $_v13 = $this->env->getRuntime("Symfony\\UX\\TwigComponent\\Twig\\ComponentRuntime");
        $preRendered = $_v13->preRender("Feature", Twig\Extension\CoreExtension::toArray(["available" => "true", "link" => $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("app_feature_web_share"), "title" => "Web share", "description" => "The Web Share API invokes the native share mechanism of the device and allows users to share text, URLs or files."]));
        if (null !== $preRendered) {
            yield $preRendered; 
        } else {
            $preRenderEvent = $_v13->startEmbedComponent("Feature", Twig\Extension\CoreExtension::toArray(["available" => "true", "link" => $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("app_feature_web_share"), "title" => "Web share", "description" => "The Web Share API invokes the native share mechanism of the device and allows users to share text, URLs or files."]), $context, "components/Features.html.twig", 6842543601);
            $embeddedContext = $preRenderEvent->getVariables();
            $embeddedContext["__parent__"] = $preRenderEvent->getTemplate();
            $embeddedContext["outerBlocks"] ??= new \Symfony\UX\TwigComponent\BlockStack();
            $embeddedBlocks = $embeddedContext["outerBlocks"]->convert($blocks, 6842543601);
            $this->loadTemplate("components/Features.html.twig", "components/Features.html.twig", 86, "6842543601")->display($embeddedContext, $embeddedBlocks);
            $_v13->finishEmbedComponent();
        }
        // line 89
        yield "            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                ";
        // line 92
        $_v14 = $this->env->getRuntime("Symfony\\UX\\TwigComponent\\Twig\\ComponentRuntime");
        $preRendered = $_v14->preRender("Feature", Twig\Extension\CoreExtension::toArray(["link" => $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("app_feature_barcode_detection"), "title" => "Barcode detection", "description" => "The Barcode Detection API detects barcodes and QR codes in images."]));
        if (null !== $preRendered) {
            yield $preRendered; 
        } else {
            $preRenderEvent = $_v14->startEmbedComponent("Feature", Twig\Extension\CoreExtension::toArray(["link" => $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("app_feature_barcode_detection"), "title" => "Barcode detection", "description" => "The Barcode Detection API detects barcodes and QR codes in images."]), $context, "components/Features.html.twig", 9184260481);
            $embeddedContext = $preRenderEvent->getVariables();
            $embeddedContext["__parent__"] = $preRenderEvent->getTemplate();
            $embeddedContext["outerBlocks"] ??= new \Symfony\UX\TwigComponent\BlockStack();
            $embeddedBlocks = $embeddedContext["outerBlocks"]->convert($blocks, 9184260481);
            $this->loadTemplate("components/Features.html.twig", "components/Features.html.twig", 92, "9184260481")->display($embeddedContext, $embeddedBlocks);
            $_v14->finishEmbedComponent();
        }
        // line 95
        yield "            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                ";
        // line 98
        $_v15 = $this->env->getRuntime("Symfony\\UX\\TwigComponent\\Twig\\ComponentRuntime");
        $preRendered = $_v15->preRender("Feature", Twig\Extension\CoreExtension::toArray(["link" => $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("app_feature_face_detection"), "title" => "Face detection", "description" => "The Shape Detection API detects faces in images."]));
        if (null !== $preRendered) {
            yield $preRendered; 
        } else {
            $preRenderEvent = $_v15->startEmbedComponent("Feature", Twig\Extension\CoreExtension::toArray(["link" => $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("app_feature_face_detection"), "title" => "Face detection", "description" => "The Shape Detection API detects faces in images."]), $context, "components/Features.html.twig", 35974002861);
            $embeddedContext = $preRenderEvent->getVariables();
            $embeddedContext["__parent__"] = $preRenderEvent->getTemplate();
            $embeddedContext["outerBlocks"] ??= new \Symfony\UX\TwigComponent\BlockStack();
            $embeddedBlocks = $embeddedContext["outerBlocks"]->convert($blocks, 35974002861);
            $this->loadTemplate("components/Features.html.twig", "components/Features.html.twig", 98, "35974002861")->display($embeddedContext, $embeddedBlocks);
            $_v15->finishEmbedComponent();
        }
        // line 101
        yield "            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                ";
        // line 104
        $_v16 = $this->env->getRuntime("Symfony\\UX\\TwigComponent\\Twig\\ComponentRuntime");
        $preRendered = $_v16->preRender("Feature", Twig\Extension\CoreExtension::toArray(["link" => $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("app_feature_vibration"), "title" => "Vibration", "description" => "The Vibration API enables web apps to make a mobile device vibrate."]));
        if (null !== $preRendered) {
            yield $preRendered; 
        } else {
            $preRenderEvent = $_v16->startEmbedComponent("Feature", Twig\Extension\CoreExtension::toArray(["link" => $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("app_feature_vibration"), "title" => "Vibration", "description" => "The Vibration API enables web apps to make a mobile device vibrate."]), $context, "components/Features.html.twig", 14219562591);
            $embeddedContext = $preRenderEvent->getVariables();
            $embeddedContext["__parent__"] = $preRenderEvent->getTemplate();
            $embeddedContext["outerBlocks"] ??= new \Symfony\UX\TwigComponent\BlockStack();
            $embeddedBlocks = $embeddedContext["outerBlocks"]->convert($blocks, 14219562591);
            $this->loadTemplate("components/Features.html.twig", "components/Features.html.twig", 104, "14219562591")->display($embeddedContext, $embeddedBlocks);
            $_v16->finishEmbedComponent();
        }
        // line 107
        yield "            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                ";
        // line 110
        $_v17 = $this->env->getRuntime("Symfony\\UX\\TwigComponent\\Twig\\ComponentRuntime");
        $preRendered = $_v17->preRender("Feature", Twig\Extension\CoreExtension::toArray(["link" => $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("app_feature_audio_recording"), "title" => "Audio recording", "description" => "Record audio using MediaRecorder and visualize audio using Web Audio API."]));
        if (null !== $preRendered) {
            yield $preRendered; 
        } else {
            $preRenderEvent = $_v17->startEmbedComponent("Feature", Twig\Extension\CoreExtension::toArray(["link" => $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("app_feature_audio_recording"), "title" => "Audio recording", "description" => "Record audio using MediaRecorder and visualize audio using Web Audio API."]), $context, "components/Features.html.twig", 12535485391);
            $embeddedContext = $preRenderEvent->getVariables();
            $embeddedContext["__parent__"] = $preRenderEvent->getTemplate();
            $embeddedContext["outerBlocks"] ??= new \Symfony\UX\TwigComponent\BlockStack();
            $embeddedBlocks = $embeddedContext["outerBlocks"]->convert($blocks, 12535485391);
            $this->loadTemplate("components/Features.html.twig", "components/Features.html.twig", 110, "12535485391")->display($embeddedContext, $embeddedBlocks);
            $_v17->finishEmbedComponent();
        }
        // line 113
        yield "            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                ";
        // line 116
        $_v18 = $this->env->getRuntime("Symfony\\UX\\TwigComponent\\Twig\\ComponentRuntime");
        $preRendered = $_v18->preRender("Feature", Twig\Extension\CoreExtension::toArray(["link" => $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("app_feature_audio"), "title" => "Audio", "description" => "The Media Session API allows web apps to display controls for media playback on a device's lock screen."]));
        if (null !== $preRendered) {
            yield $preRendered; 
        } else {
            $preRenderEvent = $_v18->startEmbedComponent("Feature", Twig\Extension\CoreExtension::toArray(["link" => $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("app_feature_audio"), "title" => "Audio", "description" => "The Media Session API allows web apps to display controls for media playback on a device's lock screen."]), $context, "components/Features.html.twig", 27485810701);
            $embeddedContext = $preRenderEvent->getVariables();
            $embeddedContext["__parent__"] = $preRenderEvent->getTemplate();
            $embeddedContext["outerBlocks"] ??= new \Symfony\UX\TwigComponent\BlockStack();
            $embeddedBlocks = $embeddedContext["outerBlocks"]->convert($blocks, 27485810701);
            $this->loadTemplate("components/Features.html.twig", "components/Features.html.twig", 116, "27485810701")->display($embeddedContext, $embeddedBlocks);
            $_v18->finishEmbedComponent();
        }
        // line 119
        yield "            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                ";
        // line 122
        $_v19 = $this->env->getRuntime("Symfony\\UX\\TwigComponent\\Twig\\ComponentRuntime");
        $preRendered = $_v19->preRender("Feature", Twig\Extension\CoreExtension::toArray(["link" => $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("app_feature_audio_session"), "title" => "Audio Session API", "description" => "The Audio Session API configures how audio from web apps should mix with audio from native apps."]));
        if (null !== $preRendered) {
            yield $preRendered; 
        } else {
            $preRenderEvent = $_v19->startEmbedComponent("Feature", Twig\Extension\CoreExtension::toArray(["link" => $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("app_feature_audio_session"), "title" => "Audio Session API", "description" => "The Audio Session API configures how audio from web apps should mix with audio from native apps."]), $context, "components/Features.html.twig", 24088788681);
            $embeddedContext = $preRenderEvent->getVariables();
            $embeddedContext["__parent__"] = $preRenderEvent->getTemplate();
            $embeddedContext["outerBlocks"] ??= new \Symfony\UX\TwigComponent\BlockStack();
            $embeddedBlocks = $embeddedContext["outerBlocks"]->convert($blocks, 24088788681);
            $this->loadTemplate("components/Features.html.twig", "components/Features.html.twig", 122, "24088788681")->display($embeddedContext, $embeddedBlocks);
            $_v19->finishEmbedComponent();
        }
        // line 125
        yield "            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                ";
        // line 128
        $_v20 = $this->env->getRuntime("Symfony\\UX\\TwigComponent\\Twig\\ComponentRuntime");
        $preRendered = $_v20->preRender("Feature", Twig\Extension\CoreExtension::toArray(["available" => "true", "link" => $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("app_feature_screen_capture"), "title" => "Screen Capturing", "description" => "Capture Handle and Captured Surface Control enable screen capturing web apps to remotely control captured web apps."]));
        if (null !== $preRendered) {
            yield $preRendered; 
        } else {
            $preRenderEvent = $_v20->startEmbedComponent("Feature", Twig\Extension\CoreExtension::toArray(["available" => "true", "link" => $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("app_feature_screen_capture"), "title" => "Screen Capturing", "description" => "Capture Handle and Captured Surface Control enable screen capturing web apps to remotely control captured web apps."]), $context, "components/Features.html.twig", 18665620581);
            $embeddedContext = $preRenderEvent->getVariables();
            $embeddedContext["__parent__"] = $preRenderEvent->getTemplate();
            $embeddedContext["outerBlocks"] ??= new \Symfony\UX\TwigComponent\BlockStack();
            $embeddedBlocks = $embeddedContext["outerBlocks"]->convert($blocks, 18665620581);
            $this->loadTemplate("components/Features.html.twig", "components/Features.html.twig", 128, "18665620581")->display($embeddedContext, $embeddedBlocks);
            $_v20->finishEmbedComponent();
        }
        // line 131
        yield "            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                ";
        // line 134
        $_v21 = $this->env->getRuntime("Symfony\\UX\\TwigComponent\\Twig\\ComponentRuntime");
        $preRendered = $_v21->preRender("Feature", Twig\Extension\CoreExtension::toArray(["available" => "true", "link" => $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("app_feature_element_capture"), "title" => "Element Capture", "description" => "Element Capture enables screen capturing web apps to record specific HTML elements."]));
        if (null !== $preRendered) {
            yield $preRendered; 
        } else {
            $preRenderEvent = $_v21->startEmbedComponent("Feature", Twig\Extension\CoreExtension::toArray(["available" => "true", "link" => $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("app_feature_element_capture"), "title" => "Element Capture", "description" => "Element Capture enables screen capturing web apps to record specific HTML elements."]), $context, "components/Features.html.twig", 21461748161);
            $embeddedContext = $preRenderEvent->getVariables();
            $embeddedContext["__parent__"] = $preRenderEvent->getTemplate();
            $embeddedContext["outerBlocks"] ??= new \Symfony\UX\TwigComponent\BlockStack();
            $embeddedBlocks = $embeddedContext["outerBlocks"]->convert($blocks, 21461748161);
            $this->loadTemplate("components/Features.html.twig", "components/Features.html.twig", 134, "21461748161")->display($embeddedContext, $embeddedBlocks);
            $_v21->finishEmbedComponent();
        }
        // line 137
        yield "            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                ";
        // line 140
        $_v22 = $this->env->getRuntime("Symfony\\UX\\TwigComponent\\Twig\\ComponentRuntime");
        $preRendered = $_v22->preRender("Feature", Twig\Extension\CoreExtension::toArray(["link" => $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("app_feature_background_sync"), "title" => "Background Sync API", "description" => "The Background Sync API enables web apps to defer tasks when it's offline so they can be run when the network connection is restored."]));
        if (null !== $preRendered) {
            yield $preRendered; 
        } else {
            $preRenderEvent = $_v22->startEmbedComponent("Feature", Twig\Extension\CoreExtension::toArray(["link" => $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("app_feature_background_sync"), "title" => "Background Sync API", "description" => "The Background Sync API enables web apps to defer tasks when it's offline so they can be run when the network connection is restored."]), $context, "components/Features.html.twig", 9353517421);
            $embeddedContext = $preRenderEvent->getVariables();
            $embeddedContext["__parent__"] = $preRenderEvent->getTemplate();
            $embeddedContext["outerBlocks"] ??= new \Symfony\UX\TwigComponent\BlockStack();
            $embeddedBlocks = $embeddedContext["outerBlocks"]->convert($blocks, 9353517421);
            $this->loadTemplate("components/Features.html.twig", "components/Features.html.twig", 140, "9353517421")->display($embeddedContext, $embeddedBlocks);
            $_v22->finishEmbedComponent();
        }
        // line 143
        yield "            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                ";
        // line 146
        $_v23 = $this->env->getRuntime("Symfony\\UX\\TwigComponent\\Twig\\ComponentRuntime");
        $preRendered = $_v23->preRender("Feature", Twig\Extension\CoreExtension::toArray(["link" => $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("app_feature_background_fetch"), "title" => "Background Fetch API", "description" => "The Background Fetch API enables web apps to download large files in the background even when the app is not running."]));
        if (null !== $preRendered) {
            yield $preRendered; 
        } else {
            $preRenderEvent = $_v23->startEmbedComponent("Feature", Twig\Extension\CoreExtension::toArray(["link" => $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("app_feature_background_fetch"), "title" => "Background Fetch API", "description" => "The Background Fetch API enables web apps to download large files in the background even when the app is not running."]), $context, "components/Features.html.twig", 37352858991);
            $embeddedContext = $preRenderEvent->getVariables();
            $embeddedContext["__parent__"] = $preRenderEvent->getTemplate();
            $embeddedContext["outerBlocks"] ??= new \Symfony\UX\TwigComponent\BlockStack();
            $embeddedBlocks = $embeddedContext["outerBlocks"]->convert($blocks, 37352858991);
            $this->loadTemplate("components/Features.html.twig", "components/Features.html.twig", 146, "37352858991")->display($embeddedContext, $embeddedBlocks);
            $_v23->finishEmbedComponent();
        }
        // line 149
        yield "            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                ";
        // line 152
        $_v24 = $this->env->getRuntime("Symfony\\UX\\TwigComponent\\Twig\\ComponentRuntime");
        $preRendered = $_v24->preRender("Feature", Twig\Extension\CoreExtension::toArray(["link" => $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("app_feature_storage"), "title" => "Storage API", "description" => "The Storage API enables web apps to persist structured data in the user's browser."]));
        if (null !== $preRendered) {
            yield $preRendered; 
        } else {
            $preRenderEvent = $_v24->startEmbedComponent("Feature", Twig\Extension\CoreExtension::toArray(["link" => $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("app_feature_storage"), "title" => "Storage API", "description" => "The Storage API enables web apps to persist structured data in the user's browser."]), $context, "components/Features.html.twig", 32351861311);
            $embeddedContext = $preRenderEvent->getVariables();
            $embeddedContext["__parent__"] = $preRenderEvent->getTemplate();
            $embeddedContext["outerBlocks"] ??= new \Symfony\UX\TwigComponent\BlockStack();
            $embeddedBlocks = $embeddedContext["outerBlocks"]->convert($blocks, 32351861311);
            $this->loadTemplate("components/Features.html.twig", "components/Features.html.twig", 152, "32351861311")->display($embeddedContext, $embeddedBlocks);
            $_v24->finishEmbedComponent();
        }
        // line 155
        yield "            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                ";
        // line 158
        $_v25 = $this->env->getRuntime("Symfony\\UX\\TwigComponent\\Twig\\ComponentRuntime");
        $preRendered = $_v25->preRender("Feature", Twig\Extension\CoreExtension::toArray(["link" => $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("app_feature_bluetooth"), "title" => "Bluetooth", "description" => "The Web Bluetooth API enables web apps to connect to Bluetooth Low Energy (BLE) devices and read values from or write values to it."]));
        if (null !== $preRendered) {
            yield $preRendered; 
        } else {
            $preRenderEvent = $_v25->startEmbedComponent("Feature", Twig\Extension\CoreExtension::toArray(["link" => $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("app_feature_bluetooth"), "title" => "Bluetooth", "description" => "The Web Bluetooth API enables web apps to connect to Bluetooth Low Energy (BLE) devices and read values from or write values to it."]), $context, "components/Features.html.twig", 5369315331);
            $embeddedContext = $preRenderEvent->getVariables();
            $embeddedContext["__parent__"] = $preRenderEvent->getTemplate();
            $embeddedContext["outerBlocks"] ??= new \Symfony\UX\TwigComponent\BlockStack();
            $embeddedBlocks = $embeddedContext["outerBlocks"]->convert($blocks, 5369315331);
            $this->loadTemplate("components/Features.html.twig", "components/Features.html.twig", 158, "5369315331")->display($embeddedContext, $embeddedBlocks);
            $_v25->finishEmbedComponent();
        }
        // line 161
        yield "            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                ";
        // line 164
        $_v26 = $this->env->getRuntime("Symfony\\UX\\TwigComponent\\Twig\\ComponentRuntime");
        $preRendered = $_v26->preRender("Feature", Twig\Extension\CoreExtension::toArray(["link" => $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("app_feature_nfc"), "title" => "NFC", "description" => "The Web NFC API enables web apps to read and write to NFC tags."]));
        if (null !== $preRendered) {
            yield $preRendered; 
        } else {
            $preRenderEvent = $_v26->startEmbedComponent("Feature", Twig\Extension\CoreExtension::toArray(["link" => $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("app_feature_nfc"), "title" => "NFC", "description" => "The Web NFC API enables web apps to read and write to NFC tags."]), $context, "components/Features.html.twig", 437747571);
            $embeddedContext = $preRenderEvent->getVariables();
            $embeddedContext["__parent__"] = $preRenderEvent->getTemplate();
            $embeddedContext["outerBlocks"] ??= new \Symfony\UX\TwigComponent\BlockStack();
            $embeddedBlocks = $embeddedContext["outerBlocks"]->convert($blocks, 437747571);
            $this->loadTemplate("components/Features.html.twig", "components/Features.html.twig", 164, "437747571")->display($embeddedContext, $embeddedBlocks);
            $_v26->finishEmbedComponent();
        }
        // line 167
        yield "            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                ";
        // line 170
        $_v27 = $this->env->getRuntime("Symfony\\UX\\TwigComponent\\Twig\\ComponentRuntime");
        $preRendered = $_v27->preRender("Feature", Twig\Extension\CoreExtension::toArray(["link" => $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("app_feature_ar_vr"), "title" => "AR/VR", "description" => "Augmented reality enables web apps to place virtual objects in reality."]));
        if (null !== $preRendered) {
            yield $preRendered; 
        } else {
            $preRenderEvent = $_v27->startEmbedComponent("Feature", Twig\Extension\CoreExtension::toArray(["link" => $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("app_feature_ar_vr"), "title" => "AR/VR", "description" => "Augmented reality enables web apps to place virtual objects in reality."]), $context, "components/Features.html.twig", 4852957411);
            $embeddedContext = $preRenderEvent->getVariables();
            $embeddedContext["__parent__"] = $preRenderEvent->getTemplate();
            $embeddedContext["outerBlocks"] ??= new \Symfony\UX\TwigComponent\BlockStack();
            $embeddedBlocks = $embeddedContext["outerBlocks"]->convert($blocks, 4852957411);
            $this->loadTemplate("components/Features.html.twig", "components/Features.html.twig", 170, "4852957411")->display($embeddedContext, $embeddedBlocks);
            $_v27->finishEmbedComponent();
        }
        // line 173
        yield "            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                ";
        // line 176
        $_v28 = $this->env->getRuntime("Symfony\\UX\\TwigComponent\\Twig\\ComponentRuntime");
        $preRendered = $_v28->preRender("Feature", Twig\Extension\CoreExtension::toArray(["link" => $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("app_feature_payment"), "title" => "Payment", "description" => "The Payment Request API provides a browser-based method to enable users to make payments on the web, using a credit card, Apple Pay or Google Pay."]));
        if (null !== $preRendered) {
            yield $preRendered; 
        } else {
            $preRenderEvent = $_v28->startEmbedComponent("Feature", Twig\Extension\CoreExtension::toArray(["link" => $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("app_feature_payment"), "title" => "Payment", "description" => "The Payment Request API provides a browser-based method to enable users to make payments on the web, using a credit card, Apple Pay or Google Pay."]), $context, "components/Features.html.twig", 41197658321);
            $embeddedContext = $preRenderEvent->getVariables();
            $embeddedContext["__parent__"] = $preRenderEvent->getTemplate();
            $embeddedContext["outerBlocks"] ??= new \Symfony\UX\TwigComponent\BlockStack();
            $embeddedBlocks = $embeddedContext["outerBlocks"]->convert($blocks, 41197658321);
            $this->loadTemplate("components/Features.html.twig", "components/Features.html.twig", 176, "41197658321")->display($embeddedContext, $embeddedBlocks);
            $_v28->finishEmbedComponent();
        }
        // line 179
        yield "            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                ";
        // line 182
        $_v29 = $this->env->getRuntime("Symfony\\UX\\TwigComponent\\Twig\\ComponentRuntime");
        $preRendered = $_v29->preRender("Feature", Twig\Extension\CoreExtension::toArray(["available" => "true", "link" => $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("app_feature_wake_lock"), "title" => "Wake lock", "description" => "The Screen Wake Lock API enables web apps to prevent devices from dimming or locking the screen when the app needs to keep running."]));
        if (null !== $preRendered) {
            yield $preRendered; 
        } else {
            $preRenderEvent = $_v29->startEmbedComponent("Feature", Twig\Extension\CoreExtension::toArray(["available" => "true", "link" => $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("app_feature_wake_lock"), "title" => "Wake lock", "description" => "The Screen Wake Lock API enables web apps to prevent devices from dimming or locking the screen when the app needs to keep running."]), $context, "components/Features.html.twig", 19710268461);
            $embeddedContext = $preRenderEvent->getVariables();
            $embeddedContext["__parent__"] = $preRenderEvent->getTemplate();
            $embeddedContext["outerBlocks"] ??= new \Symfony\UX\TwigComponent\BlockStack();
            $embeddedBlocks = $embeddedContext["outerBlocks"]->convert($blocks, 19710268461);
            $this->loadTemplate("components/Features.html.twig", "components/Features.html.twig", 182, "19710268461")->display($embeddedContext, $embeddedBlocks);
            $_v29->finishEmbedComponent();
        }
        // line 185
        yield "            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                ";
        // line 188
        $_v30 = $this->env->getRuntime("Symfony\\UX\\TwigComponent\\Twig\\ComponentRuntime");
        $preRendered = $_v30->preRender("Feature", Twig\Extension\CoreExtension::toArray(["available" => "true", "link" => $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("app_feature_orientation"), "title" => "Orientation", "description" => "The DeviceOrientationEvent gives information about the physical orientation of the user's device."]));
        if (null !== $preRendered) {
            yield $preRendered; 
        } else {
            $preRenderEvent = $_v30->startEmbedComponent("Feature", Twig\Extension\CoreExtension::toArray(["available" => "true", "link" => $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("app_feature_orientation"), "title" => "Orientation", "description" => "The DeviceOrientationEvent gives information about the physical orientation of the user's device."]), $context, "components/Features.html.twig", 25112459521);
            $embeddedContext = $preRenderEvent->getVariables();
            $embeddedContext["__parent__"] = $preRenderEvent->getTemplate();
            $embeddedContext["outerBlocks"] ??= new \Symfony\UX\TwigComponent\BlockStack();
            $embeddedBlocks = $embeddedContext["outerBlocks"]->convert($blocks, 25112459521);
            $this->loadTemplate("components/Features.html.twig", "components/Features.html.twig", 188, "25112459521")->display($embeddedContext, $embeddedBlocks);
            $_v30->finishEmbedComponent();
        }
        // line 191
        yield "            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                ";
        // line 194
        $_v31 = $this->env->getRuntime("Symfony\\UX\\TwigComponent\\Twig\\ComponentRuntime");
        $preRendered = $_v31->preRender("Feature", Twig\Extension\CoreExtension::toArray(["available" => "true", "link" => $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("app_feature_device_motion"), "title" => "Motion", "description" => "The DeviceMotionEvent gives information about the speed of changes for the position and orientation of the user's device."]));
        if (null !== $preRendered) {
            yield $preRendered; 
        } else {
            $preRenderEvent = $_v31->startEmbedComponent("Feature", Twig\Extension\CoreExtension::toArray(["available" => "true", "link" => $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("app_feature_device_motion"), "title" => "Motion", "description" => "The DeviceMotionEvent gives information about the speed of changes for the position and orientation of the user's device."]), $context, "components/Features.html.twig", 22316277541);
            $embeddedContext = $preRenderEvent->getVariables();
            $embeddedContext["__parent__"] = $preRenderEvent->getTemplate();
            $embeddedContext["outerBlocks"] ??= new \Symfony\UX\TwigComponent\BlockStack();
            $embeddedBlocks = $embeddedContext["outerBlocks"]->convert($blocks, 22316277541);
            $this->loadTemplate("components/Features.html.twig", "components/Features.html.twig", 194, "22316277541")->display($embeddedContext, $embeddedBlocks);
            $_v31->finishEmbedComponent();
        }
        // line 197
        yield "            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                ";
        // line 200
        $_v32 = $this->env->getRuntime("Symfony\\UX\\TwigComponent\\Twig\\ComponentRuntime");
        $preRendered = $_v32->preRender("Feature", Twig\Extension\CoreExtension::toArray(["available" => "true", "link" => $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("app_feature_network_info"), "title" => "Network info", "description" => "The NetworkInformation API provides information about the connection of a device, allowing web apps to adapt functionality based on network quality."]));
        if (null !== $preRendered) {
            yield $preRendered; 
        } else {
            $preRenderEvent = $_v32->startEmbedComponent("Feature", Twig\Extension\CoreExtension::toArray(["available" => "true", "link" => $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("app_feature_network_info"), "title" => "Network info", "description" => "The NetworkInformation API provides information about the connection of a device, allowing web apps to adapt functionality based on network quality."]), $context, "components/Features.html.twig", 13743019231);
            $embeddedContext = $preRenderEvent->getVariables();
            $embeddedContext["__parent__"] = $preRenderEvent->getTemplate();
            $embeddedContext["outerBlocks"] ??= new \Symfony\UX\TwigComponent\BlockStack();
            $embeddedBlocks = $embeddedContext["outerBlocks"]->convert($blocks, 13743019231);
            $this->loadTemplate("components/Features.html.twig", "components/Features.html.twig", 200, "13743019231")->display($embeddedContext, $embeddedBlocks);
            $_v32->finishEmbedComponent();
        }
        // line 203
        yield "            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                ";
        // line 206
        $_v33 = $this->env->getRuntime("Symfony\\UX\\TwigComponent\\Twig\\ComponentRuntime");
        $preRendered = $_v33->preRender("Feature", Twig\Extension\CoreExtension::toArray(["link" => $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("app_feature_speech_synthesis"), "title" => "Speech synthesis", "description" => "Speech synthesis provides text-to-speech and allows programs to read out their text content."]));
        if (null !== $preRendered) {
            yield $preRendered; 
        } else {
            $preRenderEvent = $_v33->startEmbedComponent("Feature", Twig\Extension\CoreExtension::toArray(["link" => $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("app_feature_speech_synthesis"), "title" => "Speech synthesis", "description" => "Speech synthesis provides text-to-speech and allows programs to read out their text content."]), $context, "components/Features.html.twig", 30960219741);
            $embeddedContext = $preRenderEvent->getVariables();
            $embeddedContext["__parent__"] = $preRenderEvent->getTemplate();
            $embeddedContext["outerBlocks"] ??= new \Symfony\UX\TwigComponent\BlockStack();
            $embeddedBlocks = $embeddedContext["outerBlocks"]->convert($blocks, 30960219741);
            $this->loadTemplate("components/Features.html.twig", "components/Features.html.twig", 206, "30960219741")->display($embeddedContext, $embeddedBlocks);
            $_v33->finishEmbedComponent();
        }
        // line 209
        yield "            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                ";
        // line 212
        $_v34 = $this->env->getRuntime("Symfony\\UX\\TwigComponent\\Twig\\ComponentRuntime");
        $preRendered = $_v34->preRender("Feature", Twig\Extension\CoreExtension::toArray(["link" => $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("app_feature_speech_recognition"), "title" => "Speech recognition", "description" => "Speech recognition is part of the Web Speech API and provides the ability to recognize voice context from an audio input."]));
        if (null !== $preRendered) {
            yield $preRendered; 
        } else {
            $preRenderEvent = $_v34->startEmbedComponent("Feature", Twig\Extension\CoreExtension::toArray(["link" => $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("app_feature_speech_recognition"), "title" => "Speech recognition", "description" => "Speech recognition is part of the Web Speech API and provides the ability to recognize voice context from an audio input."]), $context, "components/Features.html.twig", 28017619341);
            $embeddedContext = $preRenderEvent->getVariables();
            $embeddedContext["__parent__"] = $preRenderEvent->getTemplate();
            $embeddedContext["outerBlocks"] ??= new \Symfony\UX\TwigComponent\BlockStack();
            $embeddedBlocks = $embeddedContext["outerBlocks"]->convert($blocks, 28017619341);
            $this->loadTemplate("components/Features.html.twig", "components/Features.html.twig", 212, "28017619341")->display($embeddedContext, $embeddedBlocks);
            $_v34->finishEmbedComponent();
        }
        // line 215
        yield "            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                ";
        // line 218
        $_v35 = $this->env->getRuntime("Symfony\\UX\\TwigComponent\\Twig\\ComponentRuntime");
        $preRendered = $_v35->preRender("Feature", Twig\Extension\CoreExtension::toArray(["available" => "true", "link" => $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("app_feature_multi_touch"), "title" => "Multi touch", "description" => "Touch events enable web apps to capture complex touch behaviour."]));
        if (null !== $preRendered) {
            yield $preRendered; 
        } else {
            $preRenderEvent = $_v35->startEmbedComponent("Feature", Twig\Extension\CoreExtension::toArray(["available" => "true", "link" => $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("app_feature_multi_touch"), "title" => "Multi touch", "description" => "Touch events enable web apps to capture complex touch behaviour."]), $context, "components/Features.html.twig", 11771964321);
            $embeddedContext = $preRenderEvent->getVariables();
            $embeddedContext["__parent__"] = $preRenderEvent->getTemplate();
            $embeddedContext["outerBlocks"] ??= new \Symfony\UX\TwigComponent\BlockStack();
            $embeddedBlocks = $embeddedContext["outerBlocks"]->convert($blocks, 11771964321);
            $this->loadTemplate("components/Features.html.twig", "components/Features.html.twig", 218, "11771964321")->display($embeddedContext, $embeddedBlocks);
            $_v35->finishEmbedComponent();
        }
        // line 221
        yield "            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                ";
        // line 224
        $_v36 = $this->env->getRuntime("Symfony\\UX\\TwigComponent\\Twig\\ComponentRuntime");
        $preRendered = $_v36->preRender("Feature", Twig\Extension\CoreExtension::toArray(["available" => "true", "link" => $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("app_feature_i18n"), "title" => "i18n", "description" => "Internationalization (i18n) enables web apps to adapt to different languages and regions."]));
        if (null !== $preRendered) {
            yield $preRendered; 
        } else {
            $preRenderEvent = $_v36->startEmbedComponent("Feature", Twig\Extension\CoreExtension::toArray(["available" => "true", "link" => $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("app_feature_i18n"), "title" => "i18n", "description" => "Internationalization (i18n) enables web apps to adapt to different languages and regions."]), $context, "components/Features.html.twig", 16893564081);
            $embeddedContext = $preRenderEvent->getVariables();
            $embeddedContext["__parent__"] = $preRenderEvent->getTemplate();
            $embeddedContext["outerBlocks"] ??= new \Symfony\UX\TwigComponent\BlockStack();
            $embeddedBlocks = $embeddedContext["outerBlocks"]->convert($blocks, 16893564081);
            $this->loadTemplate("components/Features.html.twig", "components/Features.html.twig", 224, "16893564081")->display($embeddedContext, $embeddedBlocks);
            $_v36->finishEmbedComponent();
        }
        // line 227
        yield "            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                ";
        // line 230
        $_v37 = $this->env->getRuntime("Symfony\\UX\\TwigComponent\\Twig\\ComponentRuntime");
        $preRendered = $_v37->preRender("Feature", Twig\Extension\CoreExtension::toArray(["available" => "true", "link" => $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("app_feature_presentation"), "title" => "Presentation", "description" => "The Presentation API enables web apps to display content on external screens."]));
        if (null !== $preRendered) {
            yield $preRendered; 
        } else {
            $preRenderEvent = $_v37->startEmbedComponent("Feature", Twig\Extension\CoreExtension::toArray(["available" => "true", "link" => $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("app_feature_presentation"), "title" => "Presentation", "description" => "The Presentation API enables web apps to display content on external screens."]), $context, "components/Features.html.twig", 20598940481);
            $embeddedContext = $preRenderEvent->getVariables();
            $embeddedContext["__parent__"] = $preRenderEvent->getTemplate();
            $embeddedContext["outerBlocks"] ??= new \Symfony\UX\TwigComponent\BlockStack();
            $embeddedBlocks = $embeddedContext["outerBlocks"]->convert($blocks, 20598940481);
            $this->loadTemplate("components/Features.html.twig", "components/Features.html.twig", 230, "20598940481")->display($embeddedContext, $embeddedBlocks);
            $_v37->finishEmbedComponent();
        }
        // line 233
        yield "            </li>

        </ul>
    </div>

</section>";
        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

        yield from [];
    }

    /**
     * @codeCoverageIgnore
     */
    public function getTemplateName(): string
    {
        return "components/Features.html.twig";
    }

    /**
     * @codeCoverageIgnore
     */
    public function isTraitable(): bool
    {
        return false;
    }

    /**
     * @codeCoverageIgnore
     */
    public function getDebugInfo(): array
    {
        return array (  782 => 233,  768 => 230,  763 => 227,  749 => 224,  744 => 221,  730 => 218,  725 => 215,  711 => 212,  706 => 209,  692 => 206,  687 => 203,  673 => 200,  668 => 197,  654 => 194,  649 => 191,  635 => 188,  630 => 185,  616 => 182,  611 => 179,  597 => 176,  592 => 173,  578 => 170,  573 => 167,  559 => 164,  554 => 161,  540 => 158,  535 => 155,  521 => 152,  516 => 149,  502 => 146,  497 => 143,  483 => 140,  478 => 137,  464 => 134,  459 => 131,  445 => 128,  440 => 125,  426 => 122,  421 => 119,  407 => 116,  402 => 113,  388 => 110,  383 => 107,  369 => 104,  364 => 101,  350 => 98,  345 => 95,  331 => 92,  326 => 89,  312 => 86,  307 => 83,  293 => 80,  288 => 77,  274 => 74,  269 => 71,  255 => 68,  250 => 65,  236 => 62,  231 => 59,  217 => 56,  212 => 53,  198 => 50,  193 => 47,  179 => 44,  174 => 41,  160 => 38,  155 => 35,  141 => 32,  136 => 29,  122 => 26,  117 => 23,  103 => 20,  98 => 17,  84 => 14,  79 => 11,  65 => 8,  57 => 3,  51 => 1,);
    }

    public function getSourceContext(): Source
    {
        return new Source("<section {{ attributes }}>

    <h2 class=\"block-title block-title-medium\">{{ 'homepage.demo'|trans }}</h2>
    <div class=\"list cards-list media-list inset margin-vertical-half\">
        <ul class=\"row align-items-stretch justify-content-flex-start\" style=\"column-gap: var(--f7-grid-gap);\">

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_installation')), title: 'Installation', description: 'Using the beforeinstallprompt event, a native dialog can be displayed to install a web app' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:install-mobile', class: 'icon size-32 color-white', alt: 'Install' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_offline_support')), title: 'Offline support', description: 'The Service Worker enables web apps to work offline' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:download-for-offline', class: 'icon size-32 color-white', alt: 'Offline support' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_notifications')), title: 'Notifications', description: 'The Notifications API enables web apps to display notifications, even when the app is not active.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:notifications-outline', class: 'icon size-32 color-white', alt: 'Notifications' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_shortcuts')), title: 'Shortcuts', description: 'Shortcuts provide quick access to pages in your app from the app icon.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'tdesign:mobile-shortcut-filled', class: 'icon size-32 color-white', alt: 'Shortcuts' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_view_transition')), title: 'View Transitions', description: 'The View Transitions API enables app-like transitions between pages.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:auto-awesome-motion', class: 'icon size-32 color-white', alt: 'View Transitions' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_geolocation')), title: 'Geolocation', description: 'The Geolocation API enables users to share their location with web apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-gps-fixed', class: 'icon size-32 color-white', alt: 'Geolocation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_media_capture')), title: 'Media capture', description: 'Media capture allows web apps to use the camera and microphone of a device' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:videocam', class: 'icon size-32 color-white', alt: 'Media capture' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-deeporange\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_picture_in_picture')), title: 'Picture-in-picture', description: 'The Document Picture-in-Picture API makes it possible to open an always-on-top window that can be populated with arbitrary HTML content.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:picture-in-picture', class: 'icon size-32 color-white', alt: 'Picture-in-picture' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_file_system')), title: 'File System', description: 'Access to the file system of the user\\'s device' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-insert-drive-file', class: 'icon size-32 color-white', alt: 'File System' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_authentication')), title: 'Authentication', description: 'Web Authentication API (WebAuthn) enables passwordless authentication through your device\\'s fingerprint reader or an external USB Security Key.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-fingerprint', class: 'icon size-32 color-white', alt: 'Authentication' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_protocol_handling')), title: 'Protocol Handling', description: 'Protocol handling enables web apps to register their ability to open links with particular URL schemes.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:language', class: 'icon size-32 color-white', alt: 'Protocol Handling' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_file_handling')), title: 'File Handling API', description: 'The File Handling API enables web apps to register as file handlers with the operating system' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:folder-open', class: 'icon size-32 color-white', alt: 'File Handling API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { link: (path('app_feature_contact_picker')), title: 'Contact picker', description: 'The Contact Picker API allows web apps to select the user\\'s contacts after permission has been granted.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:account-box', class: 'icon size-32 color-white', alt: 'Contact picker' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_web_share')), title: 'Web share', description: 'The Web Share API invokes the native share mechanism of the device and allows users to share text, URLs or files.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:share', class: 'icon size-32 color-white', alt: 'Web share' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { link: (path('app_feature_barcode_detection')), title: 'Barcode detection', description: 'The Barcode Detection API detects barcodes and QR codes in images.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:qr-code-scanner', class: 'icon size-32 color-white', alt: 'Barcode detection' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { link: (path('app_feature_face_detection')), title: 'Face detection', description: 'The Shape Detection API detects faces in images.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:face', class: 'icon size-32 color-white', alt: 'Face detection' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_vibration')), title: 'Vibration', description: 'The Vibration API enables web apps to make a mobile device vibrate.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:vibration', class: 'icon size-32 color-white', alt: 'Vibration' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_audio_recording')), title: 'Audio recording', description: 'Record audio using MediaRecorder and visualize audio using Web Audio API.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:mic', class: 'icon size-32 color-white', alt: 'Audio recording' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_audio')), title: 'Audio', description: 'The Media Session API allows web apps to display controls for media playback on a device\\'s lock screen.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:round-play-circle-filled', class: 'icon size-32 color-white', alt: 'Audio' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { link: (path('app_feature_audio_session')), title: 'Audio Session API', description: 'The Audio Session API configures how audio from web apps should mix with audio from native apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:tune', class: 'icon size-32 color-white', alt: 'Audio Session API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_screen_capture')), title: 'Screen Capturing', description: 'Capture Handle and Captured Surface Control enable screen capturing web apps to remotely control captured web apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-share', class: 'icon size-32 color-white', alt: 'Screen Capturing' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_element_capture')), title: 'Element Capture', description: 'Element Capture enables screen capturing web apps to record specific HTML elements.' } %}
                    {% block content %}<img src=\"{{ asset('images/element-capture.svg') }}\" alt=\"Element capture\" />
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { link: (path('app_feature_background_sync')), title: 'Background Sync API', description: 'The Background Sync API enables web apps to defer tasks when it\\'s offline so they can be run when the network connection is restored.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:sync', class: 'icon size-32 color-white', alt: 'Background Sync API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { link: (path('app_feature_background_fetch')), title: 'Background Fetch API', description: 'The Background Fetch API enables web apps to download large files in the background even when the app is not running.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:downloading', class: 'icon size-32 color-white', alt: 'Background Fetch API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_storage')), title: 'Storage API', description: 'The Storage API enables web apps to persist structured data in the user\\'s browser.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:inventory', class: 'icon size-32 color-white', alt: 'Storage API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_bluetooth')), title: 'Bluetooth', description: 'The Web Bluetooth API enables web apps to connect to Bluetooth Low Energy (BLE) devices and read values from or write values to it.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:bluetooth', class: 'icon size-32 color-white', alt: 'Bluetooth' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_nfc')), title: 'NFC', description: 'The Web NFC API enables web apps to read and write to NFC tags.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:nfc', class: 'icon size-32 color-white', alt: 'NFC' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { link: (path('app_feature_ar_vr')), title: 'AR/VR', description: 'Augmented reality enables web apps to place virtual objects in reality.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:layers', class: 'icon size-32 color-white', alt: 'AR/VR' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { link: (path('app_feature_payment')), title: 'Payment', description: 'The Payment Request API provides a browser-based method to enable users to make payments on the web, using a credit card, Apple Pay or Google Pay.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:credit-card', class: 'icon size-32 color-white', alt: 'Payment' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_wake_lock')), title: 'Wake lock', description: 'The Screen Wake Lock API enables web apps to prevent devices from dimming or locking the screen when the app needs to keep running.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-lock-portrait', class: 'icon size-32 color-white', alt: 'Wake lock' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_orientation')), title: 'Orientation', description: 'The DeviceOrientationEvent gives information about the physical orientation of the user\\'s device.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-rotation', class: 'icon size-32 color-white', alt: 'Orientation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_device_motion')), title: 'Motion', description: 'The DeviceMotionEvent gives information about the speed of changes for the position and orientation of the user\\'s device.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:3d-rotation', class: 'icon size-32 color-white', alt: 'Motion' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_network_info')), title: 'Network info', description: 'The NetworkInformation API provides information about the connection of a device, allowing web apps to adapt functionality based on network quality.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:network-check', class: 'icon size-32 color-white', alt: 'Network info' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_speech_synthesis')), title: 'Speech synthesis', description: 'Speech synthesis provides text-to-speech and allows programs to read out their text content.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:record-voice-over', class: 'icon size-32 color-white', alt: 'Speech synthesis' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_speech_recognition')), title: 'Speech recognition', description: 'Speech recognition is part of the Web Speech API and provides the ability to recognize voice context from an audio input.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:hearing', class: 'icon size-32 color-white', alt: 'Speech recognition' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_multi_touch')), title: 'Multi touch', description: 'Touch events enable web apps to capture complex touch behaviour.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:touch-app', class: 'icon size-32 color-white', alt: 'Multi touch' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_i18n')), title: 'i18n', description: 'Internationalization (i18n) enables web apps to adapt to different languages and regions.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'fluent-mdl2:locale-language', class: 'icon size-32 color-white', alt: 'i18n' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_presentation')), title: 'Presentation', description: 'The Presentation API enables web apps to display content on external screens.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ri:presentation-fill', class: 'icon size-32 color-white', alt: 'presentation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

        </ul>
    </div>

</section>", "components/Features.html.twig", "/Users/praveenmujawdiya/Documents/survos/pwa-f7/templates/components/Features.html.twig");
    }
}


/* components/Features.html.twig */
class __TwigTemplate_1fb5cbdf94a162448bd258deeed21be9___33086807441 extends Template
{
    private Source $source;
    /**
     * @var array<string, Template>
     */
    private array $macros = [];

    public function __construct(Environment $env)
    {
        parent::__construct($env);

        $this->source = $this->getSourceContext();

        $this->blocks = [
            'outer__block_fallback' => [$this, 'block_outer__block_fallback'],
            'content' => [$this, 'block_content'],
        ];
    }

    protected function doGetParent(array $context): bool|string|Template|TemplateWrapper
    {
        // line 8
        return $this->loadTemplate((isset($context["__parent__"]) || array_key_exists("__parent__", $context) ? $context["__parent__"] : (function () { throw new RuntimeError('Variable "__parent__" does not exist.', 8, $this->source); })()), "components/Features.html.twig", 8);
    }

    protected function doDisplay(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        yield from $this->getParent($context)->unwrap()->yield($context, array_merge($this->blocks, $blocks));
        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

    }

    /**
     * @return iterable<null|scalar|\Stringable>
     */
    public function block_outer__block_fallback(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        yield from [];
    }

    // line 9
    /**
     * @return iterable<null|scalar|\Stringable>
     */
    public function block_content(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        yield $this->env->getRuntime('Symfony\UX\TwigComponent\Twig\ComponentRuntime')->render("ux:icon", ["name" => "material-symbols:install-mobile", "class" => "icon size-32 color-white", "alt" => "Install"]);
        yield "
                ";
        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        yield from [];
    }

    /**
     * @codeCoverageIgnore
     */
    public function getTemplateName(): string
    {
        return "components/Features.html.twig";
    }

    /**
     * @codeCoverageIgnore
     */
    public function isTraitable(): bool
    {
        return false;
    }

    /**
     * @codeCoverageIgnore
     */
    public function getDebugInfo(): array
    {
        return array (  1147 => 9,  1092 => 8,  782 => 233,  768 => 230,  763 => 227,  749 => 224,  744 => 221,  730 => 218,  725 => 215,  711 => 212,  706 => 209,  692 => 206,  687 => 203,  673 => 200,  668 => 197,  654 => 194,  649 => 191,  635 => 188,  630 => 185,  616 => 182,  611 => 179,  597 => 176,  592 => 173,  578 => 170,  573 => 167,  559 => 164,  554 => 161,  540 => 158,  535 => 155,  521 => 152,  516 => 149,  502 => 146,  497 => 143,  483 => 140,  478 => 137,  464 => 134,  459 => 131,  445 => 128,  440 => 125,  426 => 122,  421 => 119,  407 => 116,  402 => 113,  388 => 110,  383 => 107,  369 => 104,  364 => 101,  350 => 98,  345 => 95,  331 => 92,  326 => 89,  312 => 86,  307 => 83,  293 => 80,  288 => 77,  274 => 74,  269 => 71,  255 => 68,  250 => 65,  236 => 62,  231 => 59,  217 => 56,  212 => 53,  198 => 50,  193 => 47,  179 => 44,  174 => 41,  160 => 38,  155 => 35,  141 => 32,  136 => 29,  122 => 26,  117 => 23,  103 => 20,  98 => 17,  84 => 14,  79 => 11,  65 => 8,  57 => 3,  51 => 1,);
    }

    public function getSourceContext(): Source
    {
        return new Source("<section {{ attributes }}>

    <h2 class=\"block-title block-title-medium\">{{ 'homepage.demo'|trans }}</h2>
    <div class=\"list cards-list media-list inset margin-vertical-half\">
        <ul class=\"row align-items-stretch justify-content-flex-start\" style=\"column-gap: var(--f7-grid-gap);\">

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_installation')), title: 'Installation', description: 'Using the beforeinstallprompt event, a native dialog can be displayed to install a web app' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:install-mobile', class: 'icon size-32 color-white', alt: 'Install' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_offline_support')), title: 'Offline support', description: 'The Service Worker enables web apps to work offline' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:download-for-offline', class: 'icon size-32 color-white', alt: 'Offline support' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_notifications')), title: 'Notifications', description: 'The Notifications API enables web apps to display notifications, even when the app is not active.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:notifications-outline', class: 'icon size-32 color-white', alt: 'Notifications' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_shortcuts')), title: 'Shortcuts', description: 'Shortcuts provide quick access to pages in your app from the app icon.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'tdesign:mobile-shortcut-filled', class: 'icon size-32 color-white', alt: 'Shortcuts' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_view_transition')), title: 'View Transitions', description: 'The View Transitions API enables app-like transitions between pages.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:auto-awesome-motion', class: 'icon size-32 color-white', alt: 'View Transitions' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_geolocation')), title: 'Geolocation', description: 'The Geolocation API enables users to share their location with web apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-gps-fixed', class: 'icon size-32 color-white', alt: 'Geolocation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_media_capture')), title: 'Media capture', description: 'Media capture allows web apps to use the camera and microphone of a device' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:videocam', class: 'icon size-32 color-white', alt: 'Media capture' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-deeporange\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_picture_in_picture')), title: 'Picture-in-picture', description: 'The Document Picture-in-Picture API makes it possible to open an always-on-top window that can be populated with arbitrary HTML content.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:picture-in-picture', class: 'icon size-32 color-white', alt: 'Picture-in-picture' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_file_system')), title: 'File System', description: 'Access to the file system of the user\\'s device' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-insert-drive-file', class: 'icon size-32 color-white', alt: 'File System' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_authentication')), title: 'Authentication', description: 'Web Authentication API (WebAuthn) enables passwordless authentication through your device\\'s fingerprint reader or an external USB Security Key.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-fingerprint', class: 'icon size-32 color-white', alt: 'Authentication' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_protocol_handling')), title: 'Protocol Handling', description: 'Protocol handling enables web apps to register their ability to open links with particular URL schemes.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:language', class: 'icon size-32 color-white', alt: 'Protocol Handling' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_file_handling')), title: 'File Handling API', description: 'The File Handling API enables web apps to register as file handlers with the operating system' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:folder-open', class: 'icon size-32 color-white', alt: 'File Handling API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { link: (path('app_feature_contact_picker')), title: 'Contact picker', description: 'The Contact Picker API allows web apps to select the user\\'s contacts after permission has been granted.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:account-box', class: 'icon size-32 color-white', alt: 'Contact picker' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_web_share')), title: 'Web share', description: 'The Web Share API invokes the native share mechanism of the device and allows users to share text, URLs or files.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:share', class: 'icon size-32 color-white', alt: 'Web share' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { link: (path('app_feature_barcode_detection')), title: 'Barcode detection', description: 'The Barcode Detection API detects barcodes and QR codes in images.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:qr-code-scanner', class: 'icon size-32 color-white', alt: 'Barcode detection' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { link: (path('app_feature_face_detection')), title: 'Face detection', description: 'The Shape Detection API detects faces in images.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:face', class: 'icon size-32 color-white', alt: 'Face detection' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_vibration')), title: 'Vibration', description: 'The Vibration API enables web apps to make a mobile device vibrate.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:vibration', class: 'icon size-32 color-white', alt: 'Vibration' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_audio_recording')), title: 'Audio recording', description: 'Record audio using MediaRecorder and visualize audio using Web Audio API.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:mic', class: 'icon size-32 color-white', alt: 'Audio recording' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_audio')), title: 'Audio', description: 'The Media Session API allows web apps to display controls for media playback on a device\\'s lock screen.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:round-play-circle-filled', class: 'icon size-32 color-white', alt: 'Audio' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { link: (path('app_feature_audio_session')), title: 'Audio Session API', description: 'The Audio Session API configures how audio from web apps should mix with audio from native apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:tune', class: 'icon size-32 color-white', alt: 'Audio Session API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_screen_capture')), title: 'Screen Capturing', description: 'Capture Handle and Captured Surface Control enable screen capturing web apps to remotely control captured web apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-share', class: 'icon size-32 color-white', alt: 'Screen Capturing' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_element_capture')), title: 'Element Capture', description: 'Element Capture enables screen capturing web apps to record specific HTML elements.' } %}
                    {% block content %}<img src=\"{{ asset('images/element-capture.svg') }}\" alt=\"Element capture\" />
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { link: (path('app_feature_background_sync')), title: 'Background Sync API', description: 'The Background Sync API enables web apps to defer tasks when it\\'s offline so they can be run when the network connection is restored.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:sync', class: 'icon size-32 color-white', alt: 'Background Sync API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { link: (path('app_feature_background_fetch')), title: 'Background Fetch API', description: 'The Background Fetch API enables web apps to download large files in the background even when the app is not running.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:downloading', class: 'icon size-32 color-white', alt: 'Background Fetch API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_storage')), title: 'Storage API', description: 'The Storage API enables web apps to persist structured data in the user\\'s browser.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:inventory', class: 'icon size-32 color-white', alt: 'Storage API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_bluetooth')), title: 'Bluetooth', description: 'The Web Bluetooth API enables web apps to connect to Bluetooth Low Energy (BLE) devices and read values from or write values to it.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:bluetooth', class: 'icon size-32 color-white', alt: 'Bluetooth' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_nfc')), title: 'NFC', description: 'The Web NFC API enables web apps to read and write to NFC tags.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:nfc', class: 'icon size-32 color-white', alt: 'NFC' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { link: (path('app_feature_ar_vr')), title: 'AR/VR', description: 'Augmented reality enables web apps to place virtual objects in reality.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:layers', class: 'icon size-32 color-white', alt: 'AR/VR' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { link: (path('app_feature_payment')), title: 'Payment', description: 'The Payment Request API provides a browser-based method to enable users to make payments on the web, using a credit card, Apple Pay or Google Pay.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:credit-card', class: 'icon size-32 color-white', alt: 'Payment' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_wake_lock')), title: 'Wake lock', description: 'The Screen Wake Lock API enables web apps to prevent devices from dimming or locking the screen when the app needs to keep running.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-lock-portrait', class: 'icon size-32 color-white', alt: 'Wake lock' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_orientation')), title: 'Orientation', description: 'The DeviceOrientationEvent gives information about the physical orientation of the user\\'s device.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-rotation', class: 'icon size-32 color-white', alt: 'Orientation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_device_motion')), title: 'Motion', description: 'The DeviceMotionEvent gives information about the speed of changes for the position and orientation of the user\\'s device.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:3d-rotation', class: 'icon size-32 color-white', alt: 'Motion' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_network_info')), title: 'Network info', description: 'The NetworkInformation API provides information about the connection of a device, allowing web apps to adapt functionality based on network quality.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:network-check', class: 'icon size-32 color-white', alt: 'Network info' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_speech_synthesis')), title: 'Speech synthesis', description: 'Speech synthesis provides text-to-speech and allows programs to read out their text content.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:record-voice-over', class: 'icon size-32 color-white', alt: 'Speech synthesis' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_speech_recognition')), title: 'Speech recognition', description: 'Speech recognition is part of the Web Speech API and provides the ability to recognize voice context from an audio input.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:hearing', class: 'icon size-32 color-white', alt: 'Speech recognition' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_multi_touch')), title: 'Multi touch', description: 'Touch events enable web apps to capture complex touch behaviour.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:touch-app', class: 'icon size-32 color-white', alt: 'Multi touch' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_i18n')), title: 'i18n', description: 'Internationalization (i18n) enables web apps to adapt to different languages and regions.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'fluent-mdl2:locale-language', class: 'icon size-32 color-white', alt: 'i18n' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_presentation')), title: 'Presentation', description: 'The Presentation API enables web apps to display content on external screens.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ri:presentation-fill', class: 'icon size-32 color-white', alt: 'presentation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

        </ul>
    </div>

</section>", "components/Features.html.twig", "/Users/praveenmujawdiya/Documents/survos/pwa-f7/templates/components/Features.html.twig");
    }
}


/* components/Features.html.twig */
class __TwigTemplate_1fb5cbdf94a162448bd258deeed21be9___3861542371 extends Template
{
    private Source $source;
    /**
     * @var array<string, Template>
     */
    private array $macros = [];

    public function __construct(Environment $env)
    {
        parent::__construct($env);

        $this->source = $this->getSourceContext();

        $this->blocks = [
            'outer__block_fallback' => [$this, 'block_outer__block_fallback'],
            'content' => [$this, 'block_content'],
        ];
    }

    protected function doGetParent(array $context): bool|string|Template|TemplateWrapper
    {
        // line 14
        return $this->loadTemplate((isset($context["__parent__"]) || array_key_exists("__parent__", $context) ? $context["__parent__"] : (function () { throw new RuntimeError('Variable "__parent__" does not exist.', 14, $this->source); })()), "components/Features.html.twig", 14);
    }

    protected function doDisplay(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        yield from $this->getParent($context)->unwrap()->yield($context, array_merge($this->blocks, $blocks));
        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

    }

    /**
     * @return iterable<null|scalar|\Stringable>
     */
    public function block_outer__block_fallback(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        yield from [];
    }

    // line 15
    /**
     * @return iterable<null|scalar|\Stringable>
     */
    public function block_content(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        yield $this->env->getRuntime('Symfony\UX\TwigComponent\Twig\ComponentRuntime')->render("ux:icon", ["name" => "material-symbols:download-for-offline", "class" => "icon size-32 color-white", "alt" => "Offline support"]);
        yield "
                ";
        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        yield from [];
    }

    /**
     * @codeCoverageIgnore
     */
    public function getTemplateName(): string
    {
        return "components/Features.html.twig";
    }

    /**
     * @codeCoverageIgnore
     */
    public function isTraitable(): bool
    {
        return false;
    }

    /**
     * @codeCoverageIgnore
     */
    public function getDebugInfo(): array
    {
        return array (  1524 => 15,  1469 => 14,  1147 => 9,  1092 => 8,  782 => 233,  768 => 230,  763 => 227,  749 => 224,  744 => 221,  730 => 218,  725 => 215,  711 => 212,  706 => 209,  692 => 206,  687 => 203,  673 => 200,  668 => 197,  654 => 194,  649 => 191,  635 => 188,  630 => 185,  616 => 182,  611 => 179,  597 => 176,  592 => 173,  578 => 170,  573 => 167,  559 => 164,  554 => 161,  540 => 158,  535 => 155,  521 => 152,  516 => 149,  502 => 146,  497 => 143,  483 => 140,  478 => 137,  464 => 134,  459 => 131,  445 => 128,  440 => 125,  426 => 122,  421 => 119,  407 => 116,  402 => 113,  388 => 110,  383 => 107,  369 => 104,  364 => 101,  350 => 98,  345 => 95,  331 => 92,  326 => 89,  312 => 86,  307 => 83,  293 => 80,  288 => 77,  274 => 74,  269 => 71,  255 => 68,  250 => 65,  236 => 62,  231 => 59,  217 => 56,  212 => 53,  198 => 50,  193 => 47,  179 => 44,  174 => 41,  160 => 38,  155 => 35,  141 => 32,  136 => 29,  122 => 26,  117 => 23,  103 => 20,  98 => 17,  84 => 14,  79 => 11,  65 => 8,  57 => 3,  51 => 1,);
    }

    public function getSourceContext(): Source
    {
        return new Source("<section {{ attributes }}>

    <h2 class=\"block-title block-title-medium\">{{ 'homepage.demo'|trans }}</h2>
    <div class=\"list cards-list media-list inset margin-vertical-half\">
        <ul class=\"row align-items-stretch justify-content-flex-start\" style=\"column-gap: var(--f7-grid-gap);\">

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_installation')), title: 'Installation', description: 'Using the beforeinstallprompt event, a native dialog can be displayed to install a web app' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:install-mobile', class: 'icon size-32 color-white', alt: 'Install' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_offline_support')), title: 'Offline support', description: 'The Service Worker enables web apps to work offline' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:download-for-offline', class: 'icon size-32 color-white', alt: 'Offline support' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_notifications')), title: 'Notifications', description: 'The Notifications API enables web apps to display notifications, even when the app is not active.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:notifications-outline', class: 'icon size-32 color-white', alt: 'Notifications' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_shortcuts')), title: 'Shortcuts', description: 'Shortcuts provide quick access to pages in your app from the app icon.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'tdesign:mobile-shortcut-filled', class: 'icon size-32 color-white', alt: 'Shortcuts' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_view_transition')), title: 'View Transitions', description: 'The View Transitions API enables app-like transitions between pages.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:auto-awesome-motion', class: 'icon size-32 color-white', alt: 'View Transitions' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_geolocation')), title: 'Geolocation', description: 'The Geolocation API enables users to share their location with web apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-gps-fixed', class: 'icon size-32 color-white', alt: 'Geolocation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_media_capture')), title: 'Media capture', description: 'Media capture allows web apps to use the camera and microphone of a device' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:videocam', class: 'icon size-32 color-white', alt: 'Media capture' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-deeporange\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_picture_in_picture')), title: 'Picture-in-picture', description: 'The Document Picture-in-Picture API makes it possible to open an always-on-top window that can be populated with arbitrary HTML content.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:picture-in-picture', class: 'icon size-32 color-white', alt: 'Picture-in-picture' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_file_system')), title: 'File System', description: 'Access to the file system of the user\\'s device' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-insert-drive-file', class: 'icon size-32 color-white', alt: 'File System' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_authentication')), title: 'Authentication', description: 'Web Authentication API (WebAuthn) enables passwordless authentication through your device\\'s fingerprint reader or an external USB Security Key.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-fingerprint', class: 'icon size-32 color-white', alt: 'Authentication' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_protocol_handling')), title: 'Protocol Handling', description: 'Protocol handling enables web apps to register their ability to open links with particular URL schemes.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:language', class: 'icon size-32 color-white', alt: 'Protocol Handling' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_file_handling')), title: 'File Handling API', description: 'The File Handling API enables web apps to register as file handlers with the operating system' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:folder-open', class: 'icon size-32 color-white', alt: 'File Handling API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { link: (path('app_feature_contact_picker')), title: 'Contact picker', description: 'The Contact Picker API allows web apps to select the user\\'s contacts after permission has been granted.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:account-box', class: 'icon size-32 color-white', alt: 'Contact picker' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_web_share')), title: 'Web share', description: 'The Web Share API invokes the native share mechanism of the device and allows users to share text, URLs or files.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:share', class: 'icon size-32 color-white', alt: 'Web share' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { link: (path('app_feature_barcode_detection')), title: 'Barcode detection', description: 'The Barcode Detection API detects barcodes and QR codes in images.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:qr-code-scanner', class: 'icon size-32 color-white', alt: 'Barcode detection' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { link: (path('app_feature_face_detection')), title: 'Face detection', description: 'The Shape Detection API detects faces in images.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:face', class: 'icon size-32 color-white', alt: 'Face detection' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_vibration')), title: 'Vibration', description: 'The Vibration API enables web apps to make a mobile device vibrate.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:vibration', class: 'icon size-32 color-white', alt: 'Vibration' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_audio_recording')), title: 'Audio recording', description: 'Record audio using MediaRecorder and visualize audio using Web Audio API.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:mic', class: 'icon size-32 color-white', alt: 'Audio recording' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_audio')), title: 'Audio', description: 'The Media Session API allows web apps to display controls for media playback on a device\\'s lock screen.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:round-play-circle-filled', class: 'icon size-32 color-white', alt: 'Audio' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { link: (path('app_feature_audio_session')), title: 'Audio Session API', description: 'The Audio Session API configures how audio from web apps should mix with audio from native apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:tune', class: 'icon size-32 color-white', alt: 'Audio Session API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_screen_capture')), title: 'Screen Capturing', description: 'Capture Handle and Captured Surface Control enable screen capturing web apps to remotely control captured web apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-share', class: 'icon size-32 color-white', alt: 'Screen Capturing' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_element_capture')), title: 'Element Capture', description: 'Element Capture enables screen capturing web apps to record specific HTML elements.' } %}
                    {% block content %}<img src=\"{{ asset('images/element-capture.svg') }}\" alt=\"Element capture\" />
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { link: (path('app_feature_background_sync')), title: 'Background Sync API', description: 'The Background Sync API enables web apps to defer tasks when it\\'s offline so they can be run when the network connection is restored.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:sync', class: 'icon size-32 color-white', alt: 'Background Sync API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { link: (path('app_feature_background_fetch')), title: 'Background Fetch API', description: 'The Background Fetch API enables web apps to download large files in the background even when the app is not running.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:downloading', class: 'icon size-32 color-white', alt: 'Background Fetch API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_storage')), title: 'Storage API', description: 'The Storage API enables web apps to persist structured data in the user\\'s browser.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:inventory', class: 'icon size-32 color-white', alt: 'Storage API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_bluetooth')), title: 'Bluetooth', description: 'The Web Bluetooth API enables web apps to connect to Bluetooth Low Energy (BLE) devices and read values from or write values to it.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:bluetooth', class: 'icon size-32 color-white', alt: 'Bluetooth' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_nfc')), title: 'NFC', description: 'The Web NFC API enables web apps to read and write to NFC tags.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:nfc', class: 'icon size-32 color-white', alt: 'NFC' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { link: (path('app_feature_ar_vr')), title: 'AR/VR', description: 'Augmented reality enables web apps to place virtual objects in reality.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:layers', class: 'icon size-32 color-white', alt: 'AR/VR' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { link: (path('app_feature_payment')), title: 'Payment', description: 'The Payment Request API provides a browser-based method to enable users to make payments on the web, using a credit card, Apple Pay or Google Pay.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:credit-card', class: 'icon size-32 color-white', alt: 'Payment' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_wake_lock')), title: 'Wake lock', description: 'The Screen Wake Lock API enables web apps to prevent devices from dimming or locking the screen when the app needs to keep running.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-lock-portrait', class: 'icon size-32 color-white', alt: 'Wake lock' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_orientation')), title: 'Orientation', description: 'The DeviceOrientationEvent gives information about the physical orientation of the user\\'s device.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-rotation', class: 'icon size-32 color-white', alt: 'Orientation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_device_motion')), title: 'Motion', description: 'The DeviceMotionEvent gives information about the speed of changes for the position and orientation of the user\\'s device.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:3d-rotation', class: 'icon size-32 color-white', alt: 'Motion' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_network_info')), title: 'Network info', description: 'The NetworkInformation API provides information about the connection of a device, allowing web apps to adapt functionality based on network quality.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:network-check', class: 'icon size-32 color-white', alt: 'Network info' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_speech_synthesis')), title: 'Speech synthesis', description: 'Speech synthesis provides text-to-speech and allows programs to read out their text content.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:record-voice-over', class: 'icon size-32 color-white', alt: 'Speech synthesis' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_speech_recognition')), title: 'Speech recognition', description: 'Speech recognition is part of the Web Speech API and provides the ability to recognize voice context from an audio input.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:hearing', class: 'icon size-32 color-white', alt: 'Speech recognition' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_multi_touch')), title: 'Multi touch', description: 'Touch events enable web apps to capture complex touch behaviour.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:touch-app', class: 'icon size-32 color-white', alt: 'Multi touch' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_i18n')), title: 'i18n', description: 'Internationalization (i18n) enables web apps to adapt to different languages and regions.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'fluent-mdl2:locale-language', class: 'icon size-32 color-white', alt: 'i18n' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_presentation')), title: 'Presentation', description: 'The Presentation API enables web apps to display content on external screens.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ri:presentation-fill', class: 'icon size-32 color-white', alt: 'presentation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

        </ul>
    </div>

</section>", "components/Features.html.twig", "/Users/praveenmujawdiya/Documents/survos/pwa-f7/templates/components/Features.html.twig");
    }
}


/* components/Features.html.twig */
class __TwigTemplate_1fb5cbdf94a162448bd258deeed21be9___9943554951 extends Template
{
    private Source $source;
    /**
     * @var array<string, Template>
     */
    private array $macros = [];

    public function __construct(Environment $env)
    {
        parent::__construct($env);

        $this->source = $this->getSourceContext();

        $this->blocks = [
            'outer__block_fallback' => [$this, 'block_outer__block_fallback'],
            'content' => [$this, 'block_content'],
        ];
    }

    protected function doGetParent(array $context): bool|string|Template|TemplateWrapper
    {
        // line 20
        return $this->loadTemplate((isset($context["__parent__"]) || array_key_exists("__parent__", $context) ? $context["__parent__"] : (function () { throw new RuntimeError('Variable "__parent__" does not exist.', 20, $this->source); })()), "components/Features.html.twig", 20);
    }

    protected function doDisplay(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        yield from $this->getParent($context)->unwrap()->yield($context, array_merge($this->blocks, $blocks));
        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

    }

    /**
     * @return iterable<null|scalar|\Stringable>
     */
    public function block_outer__block_fallback(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        yield from [];
    }

    // line 21
    /**
     * @return iterable<null|scalar|\Stringable>
     */
    public function block_content(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        yield $this->env->getRuntime('Symfony\UX\TwigComponent\Twig\ComponentRuntime')->render("ux:icon", ["name" => "material-symbols:notifications-outline", "class" => "icon size-32 color-white", "alt" => "Notifications"]);
        yield "
                ";
        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        yield from [];
    }

    /**
     * @codeCoverageIgnore
     */
    public function getTemplateName(): string
    {
        return "components/Features.html.twig";
    }

    /**
     * @codeCoverageIgnore
     */
    public function isTraitable(): bool
    {
        return false;
    }

    /**
     * @codeCoverageIgnore
     */
    public function getDebugInfo(): array
    {
        return array (  1901 => 21,  1846 => 20,  1524 => 15,  1469 => 14,  1147 => 9,  1092 => 8,  782 => 233,  768 => 230,  763 => 227,  749 => 224,  744 => 221,  730 => 218,  725 => 215,  711 => 212,  706 => 209,  692 => 206,  687 => 203,  673 => 200,  668 => 197,  654 => 194,  649 => 191,  635 => 188,  630 => 185,  616 => 182,  611 => 179,  597 => 176,  592 => 173,  578 => 170,  573 => 167,  559 => 164,  554 => 161,  540 => 158,  535 => 155,  521 => 152,  516 => 149,  502 => 146,  497 => 143,  483 => 140,  478 => 137,  464 => 134,  459 => 131,  445 => 128,  440 => 125,  426 => 122,  421 => 119,  407 => 116,  402 => 113,  388 => 110,  383 => 107,  369 => 104,  364 => 101,  350 => 98,  345 => 95,  331 => 92,  326 => 89,  312 => 86,  307 => 83,  293 => 80,  288 => 77,  274 => 74,  269 => 71,  255 => 68,  250 => 65,  236 => 62,  231 => 59,  217 => 56,  212 => 53,  198 => 50,  193 => 47,  179 => 44,  174 => 41,  160 => 38,  155 => 35,  141 => 32,  136 => 29,  122 => 26,  117 => 23,  103 => 20,  98 => 17,  84 => 14,  79 => 11,  65 => 8,  57 => 3,  51 => 1,);
    }

    public function getSourceContext(): Source
    {
        return new Source("<section {{ attributes }}>

    <h2 class=\"block-title block-title-medium\">{{ 'homepage.demo'|trans }}</h2>
    <div class=\"list cards-list media-list inset margin-vertical-half\">
        <ul class=\"row align-items-stretch justify-content-flex-start\" style=\"column-gap: var(--f7-grid-gap);\">

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_installation')), title: 'Installation', description: 'Using the beforeinstallprompt event, a native dialog can be displayed to install a web app' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:install-mobile', class: 'icon size-32 color-white', alt: 'Install' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_offline_support')), title: 'Offline support', description: 'The Service Worker enables web apps to work offline' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:download-for-offline', class: 'icon size-32 color-white', alt: 'Offline support' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_notifications')), title: 'Notifications', description: 'The Notifications API enables web apps to display notifications, even when the app is not active.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:notifications-outline', class: 'icon size-32 color-white', alt: 'Notifications' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_shortcuts')), title: 'Shortcuts', description: 'Shortcuts provide quick access to pages in your app from the app icon.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'tdesign:mobile-shortcut-filled', class: 'icon size-32 color-white', alt: 'Shortcuts' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_view_transition')), title: 'View Transitions', description: 'The View Transitions API enables app-like transitions between pages.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:auto-awesome-motion', class: 'icon size-32 color-white', alt: 'View Transitions' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_geolocation')), title: 'Geolocation', description: 'The Geolocation API enables users to share their location with web apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-gps-fixed', class: 'icon size-32 color-white', alt: 'Geolocation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_media_capture')), title: 'Media capture', description: 'Media capture allows web apps to use the camera and microphone of a device' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:videocam', class: 'icon size-32 color-white', alt: 'Media capture' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-deeporange\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_picture_in_picture')), title: 'Picture-in-picture', description: 'The Document Picture-in-Picture API makes it possible to open an always-on-top window that can be populated with arbitrary HTML content.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:picture-in-picture', class: 'icon size-32 color-white', alt: 'Picture-in-picture' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_file_system')), title: 'File System', description: 'Access to the file system of the user\\'s device' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-insert-drive-file', class: 'icon size-32 color-white', alt: 'File System' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_authentication')), title: 'Authentication', description: 'Web Authentication API (WebAuthn) enables passwordless authentication through your device\\'s fingerprint reader or an external USB Security Key.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-fingerprint', class: 'icon size-32 color-white', alt: 'Authentication' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_protocol_handling')), title: 'Protocol Handling', description: 'Protocol handling enables web apps to register their ability to open links with particular URL schemes.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:language', class: 'icon size-32 color-white', alt: 'Protocol Handling' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_file_handling')), title: 'File Handling API', description: 'The File Handling API enables web apps to register as file handlers with the operating system' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:folder-open', class: 'icon size-32 color-white', alt: 'File Handling API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { link: (path('app_feature_contact_picker')), title: 'Contact picker', description: 'The Contact Picker API allows web apps to select the user\\'s contacts after permission has been granted.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:account-box', class: 'icon size-32 color-white', alt: 'Contact picker' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_web_share')), title: 'Web share', description: 'The Web Share API invokes the native share mechanism of the device and allows users to share text, URLs or files.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:share', class: 'icon size-32 color-white', alt: 'Web share' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { link: (path('app_feature_barcode_detection')), title: 'Barcode detection', description: 'The Barcode Detection API detects barcodes and QR codes in images.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:qr-code-scanner', class: 'icon size-32 color-white', alt: 'Barcode detection' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { link: (path('app_feature_face_detection')), title: 'Face detection', description: 'The Shape Detection API detects faces in images.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:face', class: 'icon size-32 color-white', alt: 'Face detection' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_vibration')), title: 'Vibration', description: 'The Vibration API enables web apps to make a mobile device vibrate.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:vibration', class: 'icon size-32 color-white', alt: 'Vibration' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_audio_recording')), title: 'Audio recording', description: 'Record audio using MediaRecorder and visualize audio using Web Audio API.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:mic', class: 'icon size-32 color-white', alt: 'Audio recording' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_audio')), title: 'Audio', description: 'The Media Session API allows web apps to display controls for media playback on a device\\'s lock screen.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:round-play-circle-filled', class: 'icon size-32 color-white', alt: 'Audio' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { link: (path('app_feature_audio_session')), title: 'Audio Session API', description: 'The Audio Session API configures how audio from web apps should mix with audio from native apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:tune', class: 'icon size-32 color-white', alt: 'Audio Session API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_screen_capture')), title: 'Screen Capturing', description: 'Capture Handle and Captured Surface Control enable screen capturing web apps to remotely control captured web apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-share', class: 'icon size-32 color-white', alt: 'Screen Capturing' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_element_capture')), title: 'Element Capture', description: 'Element Capture enables screen capturing web apps to record specific HTML elements.' } %}
                    {% block content %}<img src=\"{{ asset('images/element-capture.svg') }}\" alt=\"Element capture\" />
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { link: (path('app_feature_background_sync')), title: 'Background Sync API', description: 'The Background Sync API enables web apps to defer tasks when it\\'s offline so they can be run when the network connection is restored.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:sync', class: 'icon size-32 color-white', alt: 'Background Sync API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { link: (path('app_feature_background_fetch')), title: 'Background Fetch API', description: 'The Background Fetch API enables web apps to download large files in the background even when the app is not running.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:downloading', class: 'icon size-32 color-white', alt: 'Background Fetch API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_storage')), title: 'Storage API', description: 'The Storage API enables web apps to persist structured data in the user\\'s browser.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:inventory', class: 'icon size-32 color-white', alt: 'Storage API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_bluetooth')), title: 'Bluetooth', description: 'The Web Bluetooth API enables web apps to connect to Bluetooth Low Energy (BLE) devices and read values from or write values to it.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:bluetooth', class: 'icon size-32 color-white', alt: 'Bluetooth' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_nfc')), title: 'NFC', description: 'The Web NFC API enables web apps to read and write to NFC tags.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:nfc', class: 'icon size-32 color-white', alt: 'NFC' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { link: (path('app_feature_ar_vr')), title: 'AR/VR', description: 'Augmented reality enables web apps to place virtual objects in reality.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:layers', class: 'icon size-32 color-white', alt: 'AR/VR' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { link: (path('app_feature_payment')), title: 'Payment', description: 'The Payment Request API provides a browser-based method to enable users to make payments on the web, using a credit card, Apple Pay or Google Pay.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:credit-card', class: 'icon size-32 color-white', alt: 'Payment' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_wake_lock')), title: 'Wake lock', description: 'The Screen Wake Lock API enables web apps to prevent devices from dimming or locking the screen when the app needs to keep running.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-lock-portrait', class: 'icon size-32 color-white', alt: 'Wake lock' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_orientation')), title: 'Orientation', description: 'The DeviceOrientationEvent gives information about the physical orientation of the user\\'s device.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-rotation', class: 'icon size-32 color-white', alt: 'Orientation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_device_motion')), title: 'Motion', description: 'The DeviceMotionEvent gives information about the speed of changes for the position and orientation of the user\\'s device.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:3d-rotation', class: 'icon size-32 color-white', alt: 'Motion' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_network_info')), title: 'Network info', description: 'The NetworkInformation API provides information about the connection of a device, allowing web apps to adapt functionality based on network quality.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:network-check', class: 'icon size-32 color-white', alt: 'Network info' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_speech_synthesis')), title: 'Speech synthesis', description: 'Speech synthesis provides text-to-speech and allows programs to read out their text content.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:record-voice-over', class: 'icon size-32 color-white', alt: 'Speech synthesis' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_speech_recognition')), title: 'Speech recognition', description: 'Speech recognition is part of the Web Speech API and provides the ability to recognize voice context from an audio input.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:hearing', class: 'icon size-32 color-white', alt: 'Speech recognition' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_multi_touch')), title: 'Multi touch', description: 'Touch events enable web apps to capture complex touch behaviour.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:touch-app', class: 'icon size-32 color-white', alt: 'Multi touch' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_i18n')), title: 'i18n', description: 'Internationalization (i18n) enables web apps to adapt to different languages and regions.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'fluent-mdl2:locale-language', class: 'icon size-32 color-white', alt: 'i18n' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_presentation')), title: 'Presentation', description: 'The Presentation API enables web apps to display content on external screens.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ri:presentation-fill', class: 'icon size-32 color-white', alt: 'presentation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

        </ul>
    </div>

</section>", "components/Features.html.twig", "/Users/praveenmujawdiya/Documents/survos/pwa-f7/templates/components/Features.html.twig");
    }
}


/* components/Features.html.twig */
class __TwigTemplate_1fb5cbdf94a162448bd258deeed21be9___35257743541 extends Template
{
    private Source $source;
    /**
     * @var array<string, Template>
     */
    private array $macros = [];

    public function __construct(Environment $env)
    {
        parent::__construct($env);

        $this->source = $this->getSourceContext();

        $this->blocks = [
            'outer__block_fallback' => [$this, 'block_outer__block_fallback'],
            'content' => [$this, 'block_content'],
        ];
    }

    protected function doGetParent(array $context): bool|string|Template|TemplateWrapper
    {
        // line 26
        return $this->loadTemplate((isset($context["__parent__"]) || array_key_exists("__parent__", $context) ? $context["__parent__"] : (function () { throw new RuntimeError('Variable "__parent__" does not exist.', 26, $this->source); })()), "components/Features.html.twig", 26);
    }

    protected function doDisplay(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        yield from $this->getParent($context)->unwrap()->yield($context, array_merge($this->blocks, $blocks));
        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

    }

    /**
     * @return iterable<null|scalar|\Stringable>
     */
    public function block_outer__block_fallback(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        yield from [];
    }

    // line 27
    /**
     * @return iterable<null|scalar|\Stringable>
     */
    public function block_content(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        yield $this->env->getRuntime('Symfony\UX\TwigComponent\Twig\ComponentRuntime')->render("ux:icon", ["name" => "tdesign:mobile-shortcut-filled", "class" => "icon size-32 color-white", "alt" => "Shortcuts"]);
        yield "
                ";
        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        yield from [];
    }

    /**
     * @codeCoverageIgnore
     */
    public function getTemplateName(): string
    {
        return "components/Features.html.twig";
    }

    /**
     * @codeCoverageIgnore
     */
    public function isTraitable(): bool
    {
        return false;
    }

    /**
     * @codeCoverageIgnore
     */
    public function getDebugInfo(): array
    {
        return array (  2278 => 27,  2223 => 26,  1901 => 21,  1846 => 20,  1524 => 15,  1469 => 14,  1147 => 9,  1092 => 8,  782 => 233,  768 => 230,  763 => 227,  749 => 224,  744 => 221,  730 => 218,  725 => 215,  711 => 212,  706 => 209,  692 => 206,  687 => 203,  673 => 200,  668 => 197,  654 => 194,  649 => 191,  635 => 188,  630 => 185,  616 => 182,  611 => 179,  597 => 176,  592 => 173,  578 => 170,  573 => 167,  559 => 164,  554 => 161,  540 => 158,  535 => 155,  521 => 152,  516 => 149,  502 => 146,  497 => 143,  483 => 140,  478 => 137,  464 => 134,  459 => 131,  445 => 128,  440 => 125,  426 => 122,  421 => 119,  407 => 116,  402 => 113,  388 => 110,  383 => 107,  369 => 104,  364 => 101,  350 => 98,  345 => 95,  331 => 92,  326 => 89,  312 => 86,  307 => 83,  293 => 80,  288 => 77,  274 => 74,  269 => 71,  255 => 68,  250 => 65,  236 => 62,  231 => 59,  217 => 56,  212 => 53,  198 => 50,  193 => 47,  179 => 44,  174 => 41,  160 => 38,  155 => 35,  141 => 32,  136 => 29,  122 => 26,  117 => 23,  103 => 20,  98 => 17,  84 => 14,  79 => 11,  65 => 8,  57 => 3,  51 => 1,);
    }

    public function getSourceContext(): Source
    {
        return new Source("<section {{ attributes }}>

    <h2 class=\"block-title block-title-medium\">{{ 'homepage.demo'|trans }}</h2>
    <div class=\"list cards-list media-list inset margin-vertical-half\">
        <ul class=\"row align-items-stretch justify-content-flex-start\" style=\"column-gap: var(--f7-grid-gap);\">

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_installation')), title: 'Installation', description: 'Using the beforeinstallprompt event, a native dialog can be displayed to install a web app' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:install-mobile', class: 'icon size-32 color-white', alt: 'Install' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_offline_support')), title: 'Offline support', description: 'The Service Worker enables web apps to work offline' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:download-for-offline', class: 'icon size-32 color-white', alt: 'Offline support' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_notifications')), title: 'Notifications', description: 'The Notifications API enables web apps to display notifications, even when the app is not active.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:notifications-outline', class: 'icon size-32 color-white', alt: 'Notifications' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_shortcuts')), title: 'Shortcuts', description: 'Shortcuts provide quick access to pages in your app from the app icon.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'tdesign:mobile-shortcut-filled', class: 'icon size-32 color-white', alt: 'Shortcuts' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_view_transition')), title: 'View Transitions', description: 'The View Transitions API enables app-like transitions between pages.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:auto-awesome-motion', class: 'icon size-32 color-white', alt: 'View Transitions' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_geolocation')), title: 'Geolocation', description: 'The Geolocation API enables users to share their location with web apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-gps-fixed', class: 'icon size-32 color-white', alt: 'Geolocation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_media_capture')), title: 'Media capture', description: 'Media capture allows web apps to use the camera and microphone of a device' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:videocam', class: 'icon size-32 color-white', alt: 'Media capture' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-deeporange\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_picture_in_picture')), title: 'Picture-in-picture', description: 'The Document Picture-in-Picture API makes it possible to open an always-on-top window that can be populated with arbitrary HTML content.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:picture-in-picture', class: 'icon size-32 color-white', alt: 'Picture-in-picture' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_file_system')), title: 'File System', description: 'Access to the file system of the user\\'s device' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-insert-drive-file', class: 'icon size-32 color-white', alt: 'File System' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_authentication')), title: 'Authentication', description: 'Web Authentication API (WebAuthn) enables passwordless authentication through your device\\'s fingerprint reader or an external USB Security Key.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-fingerprint', class: 'icon size-32 color-white', alt: 'Authentication' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_protocol_handling')), title: 'Protocol Handling', description: 'Protocol handling enables web apps to register their ability to open links with particular URL schemes.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:language', class: 'icon size-32 color-white', alt: 'Protocol Handling' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_file_handling')), title: 'File Handling API', description: 'The File Handling API enables web apps to register as file handlers with the operating system' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:folder-open', class: 'icon size-32 color-white', alt: 'File Handling API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { link: (path('app_feature_contact_picker')), title: 'Contact picker', description: 'The Contact Picker API allows web apps to select the user\\'s contacts after permission has been granted.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:account-box', class: 'icon size-32 color-white', alt: 'Contact picker' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_web_share')), title: 'Web share', description: 'The Web Share API invokes the native share mechanism of the device and allows users to share text, URLs or files.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:share', class: 'icon size-32 color-white', alt: 'Web share' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { link: (path('app_feature_barcode_detection')), title: 'Barcode detection', description: 'The Barcode Detection API detects barcodes and QR codes in images.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:qr-code-scanner', class: 'icon size-32 color-white', alt: 'Barcode detection' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { link: (path('app_feature_face_detection')), title: 'Face detection', description: 'The Shape Detection API detects faces in images.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:face', class: 'icon size-32 color-white', alt: 'Face detection' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_vibration')), title: 'Vibration', description: 'The Vibration API enables web apps to make a mobile device vibrate.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:vibration', class: 'icon size-32 color-white', alt: 'Vibration' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_audio_recording')), title: 'Audio recording', description: 'Record audio using MediaRecorder and visualize audio using Web Audio API.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:mic', class: 'icon size-32 color-white', alt: 'Audio recording' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_audio')), title: 'Audio', description: 'The Media Session API allows web apps to display controls for media playback on a device\\'s lock screen.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:round-play-circle-filled', class: 'icon size-32 color-white', alt: 'Audio' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { link: (path('app_feature_audio_session')), title: 'Audio Session API', description: 'The Audio Session API configures how audio from web apps should mix with audio from native apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:tune', class: 'icon size-32 color-white', alt: 'Audio Session API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_screen_capture')), title: 'Screen Capturing', description: 'Capture Handle and Captured Surface Control enable screen capturing web apps to remotely control captured web apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-share', class: 'icon size-32 color-white', alt: 'Screen Capturing' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_element_capture')), title: 'Element Capture', description: 'Element Capture enables screen capturing web apps to record specific HTML elements.' } %}
                    {% block content %}<img src=\"{{ asset('images/element-capture.svg') }}\" alt=\"Element capture\" />
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { link: (path('app_feature_background_sync')), title: 'Background Sync API', description: 'The Background Sync API enables web apps to defer tasks when it\\'s offline so they can be run when the network connection is restored.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:sync', class: 'icon size-32 color-white', alt: 'Background Sync API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { link: (path('app_feature_background_fetch')), title: 'Background Fetch API', description: 'The Background Fetch API enables web apps to download large files in the background even when the app is not running.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:downloading', class: 'icon size-32 color-white', alt: 'Background Fetch API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_storage')), title: 'Storage API', description: 'The Storage API enables web apps to persist structured data in the user\\'s browser.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:inventory', class: 'icon size-32 color-white', alt: 'Storage API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_bluetooth')), title: 'Bluetooth', description: 'The Web Bluetooth API enables web apps to connect to Bluetooth Low Energy (BLE) devices and read values from or write values to it.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:bluetooth', class: 'icon size-32 color-white', alt: 'Bluetooth' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_nfc')), title: 'NFC', description: 'The Web NFC API enables web apps to read and write to NFC tags.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:nfc', class: 'icon size-32 color-white', alt: 'NFC' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { link: (path('app_feature_ar_vr')), title: 'AR/VR', description: 'Augmented reality enables web apps to place virtual objects in reality.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:layers', class: 'icon size-32 color-white', alt: 'AR/VR' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { link: (path('app_feature_payment')), title: 'Payment', description: 'The Payment Request API provides a browser-based method to enable users to make payments on the web, using a credit card, Apple Pay or Google Pay.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:credit-card', class: 'icon size-32 color-white', alt: 'Payment' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_wake_lock')), title: 'Wake lock', description: 'The Screen Wake Lock API enables web apps to prevent devices from dimming or locking the screen when the app needs to keep running.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-lock-portrait', class: 'icon size-32 color-white', alt: 'Wake lock' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_orientation')), title: 'Orientation', description: 'The DeviceOrientationEvent gives information about the physical orientation of the user\\'s device.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-rotation', class: 'icon size-32 color-white', alt: 'Orientation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_device_motion')), title: 'Motion', description: 'The DeviceMotionEvent gives information about the speed of changes for the position and orientation of the user\\'s device.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:3d-rotation', class: 'icon size-32 color-white', alt: 'Motion' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_network_info')), title: 'Network info', description: 'The NetworkInformation API provides information about the connection of a device, allowing web apps to adapt functionality based on network quality.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:network-check', class: 'icon size-32 color-white', alt: 'Network info' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_speech_synthesis')), title: 'Speech synthesis', description: 'Speech synthesis provides text-to-speech and allows programs to read out their text content.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:record-voice-over', class: 'icon size-32 color-white', alt: 'Speech synthesis' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_speech_recognition')), title: 'Speech recognition', description: 'Speech recognition is part of the Web Speech API and provides the ability to recognize voice context from an audio input.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:hearing', class: 'icon size-32 color-white', alt: 'Speech recognition' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_multi_touch')), title: 'Multi touch', description: 'Touch events enable web apps to capture complex touch behaviour.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:touch-app', class: 'icon size-32 color-white', alt: 'Multi touch' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_i18n')), title: 'i18n', description: 'Internationalization (i18n) enables web apps to adapt to different languages and regions.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'fluent-mdl2:locale-language', class: 'icon size-32 color-white', alt: 'i18n' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_presentation')), title: 'Presentation', description: 'The Presentation API enables web apps to display content on external screens.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ri:presentation-fill', class: 'icon size-32 color-white', alt: 'presentation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

        </ul>
    </div>

</section>", "components/Features.html.twig", "/Users/praveenmujawdiya/Documents/survos/pwa-f7/templates/components/Features.html.twig");
    }
}


/* components/Features.html.twig */
class __TwigTemplate_1fb5cbdf94a162448bd258deeed21be9___34279242981 extends Template
{
    private Source $source;
    /**
     * @var array<string, Template>
     */
    private array $macros = [];

    public function __construct(Environment $env)
    {
        parent::__construct($env);

        $this->source = $this->getSourceContext();

        $this->blocks = [
            'outer__block_fallback' => [$this, 'block_outer__block_fallback'],
            'content' => [$this, 'block_content'],
        ];
    }

    protected function doGetParent(array $context): bool|string|Template|TemplateWrapper
    {
        // line 32
        return $this->loadTemplate((isset($context["__parent__"]) || array_key_exists("__parent__", $context) ? $context["__parent__"] : (function () { throw new RuntimeError('Variable "__parent__" does not exist.', 32, $this->source); })()), "components/Features.html.twig", 32);
    }

    protected function doDisplay(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        yield from $this->getParent($context)->unwrap()->yield($context, array_merge($this->blocks, $blocks));
        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

    }

    /**
     * @return iterable<null|scalar|\Stringable>
     */
    public function block_outer__block_fallback(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        yield from [];
    }

    // line 33
    /**
     * @return iterable<null|scalar|\Stringable>
     */
    public function block_content(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        yield $this->env->getRuntime('Symfony\UX\TwigComponent\Twig\ComponentRuntime')->render("ux:icon", ["name" => "material-symbols:auto-awesome-motion", "class" => "icon size-32 color-white", "alt" => "View Transitions"]);
        yield "
                ";
        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        yield from [];
    }

    /**
     * @codeCoverageIgnore
     */
    public function getTemplateName(): string
    {
        return "components/Features.html.twig";
    }

    /**
     * @codeCoverageIgnore
     */
    public function isTraitable(): bool
    {
        return false;
    }

    /**
     * @codeCoverageIgnore
     */
    public function getDebugInfo(): array
    {
        return array (  2655 => 33,  2600 => 32,  2278 => 27,  2223 => 26,  1901 => 21,  1846 => 20,  1524 => 15,  1469 => 14,  1147 => 9,  1092 => 8,  782 => 233,  768 => 230,  763 => 227,  749 => 224,  744 => 221,  730 => 218,  725 => 215,  711 => 212,  706 => 209,  692 => 206,  687 => 203,  673 => 200,  668 => 197,  654 => 194,  649 => 191,  635 => 188,  630 => 185,  616 => 182,  611 => 179,  597 => 176,  592 => 173,  578 => 170,  573 => 167,  559 => 164,  554 => 161,  540 => 158,  535 => 155,  521 => 152,  516 => 149,  502 => 146,  497 => 143,  483 => 140,  478 => 137,  464 => 134,  459 => 131,  445 => 128,  440 => 125,  426 => 122,  421 => 119,  407 => 116,  402 => 113,  388 => 110,  383 => 107,  369 => 104,  364 => 101,  350 => 98,  345 => 95,  331 => 92,  326 => 89,  312 => 86,  307 => 83,  293 => 80,  288 => 77,  274 => 74,  269 => 71,  255 => 68,  250 => 65,  236 => 62,  231 => 59,  217 => 56,  212 => 53,  198 => 50,  193 => 47,  179 => 44,  174 => 41,  160 => 38,  155 => 35,  141 => 32,  136 => 29,  122 => 26,  117 => 23,  103 => 20,  98 => 17,  84 => 14,  79 => 11,  65 => 8,  57 => 3,  51 => 1,);
    }

    public function getSourceContext(): Source
    {
        return new Source("<section {{ attributes }}>

    <h2 class=\"block-title block-title-medium\">{{ 'homepage.demo'|trans }}</h2>
    <div class=\"list cards-list media-list inset margin-vertical-half\">
        <ul class=\"row align-items-stretch justify-content-flex-start\" style=\"column-gap: var(--f7-grid-gap);\">

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_installation')), title: 'Installation', description: 'Using the beforeinstallprompt event, a native dialog can be displayed to install a web app' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:install-mobile', class: 'icon size-32 color-white', alt: 'Install' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_offline_support')), title: 'Offline support', description: 'The Service Worker enables web apps to work offline' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:download-for-offline', class: 'icon size-32 color-white', alt: 'Offline support' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_notifications')), title: 'Notifications', description: 'The Notifications API enables web apps to display notifications, even when the app is not active.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:notifications-outline', class: 'icon size-32 color-white', alt: 'Notifications' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_shortcuts')), title: 'Shortcuts', description: 'Shortcuts provide quick access to pages in your app from the app icon.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'tdesign:mobile-shortcut-filled', class: 'icon size-32 color-white', alt: 'Shortcuts' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_view_transition')), title: 'View Transitions', description: 'The View Transitions API enables app-like transitions between pages.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:auto-awesome-motion', class: 'icon size-32 color-white', alt: 'View Transitions' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_geolocation')), title: 'Geolocation', description: 'The Geolocation API enables users to share their location with web apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-gps-fixed', class: 'icon size-32 color-white', alt: 'Geolocation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_media_capture')), title: 'Media capture', description: 'Media capture allows web apps to use the camera and microphone of a device' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:videocam', class: 'icon size-32 color-white', alt: 'Media capture' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-deeporange\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_picture_in_picture')), title: 'Picture-in-picture', description: 'The Document Picture-in-Picture API makes it possible to open an always-on-top window that can be populated with arbitrary HTML content.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:picture-in-picture', class: 'icon size-32 color-white', alt: 'Picture-in-picture' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_file_system')), title: 'File System', description: 'Access to the file system of the user\\'s device' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-insert-drive-file', class: 'icon size-32 color-white', alt: 'File System' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_authentication')), title: 'Authentication', description: 'Web Authentication API (WebAuthn) enables passwordless authentication through your device\\'s fingerprint reader or an external USB Security Key.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-fingerprint', class: 'icon size-32 color-white', alt: 'Authentication' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_protocol_handling')), title: 'Protocol Handling', description: 'Protocol handling enables web apps to register their ability to open links with particular URL schemes.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:language', class: 'icon size-32 color-white', alt: 'Protocol Handling' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_file_handling')), title: 'File Handling API', description: 'The File Handling API enables web apps to register as file handlers with the operating system' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:folder-open', class: 'icon size-32 color-white', alt: 'File Handling API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { link: (path('app_feature_contact_picker')), title: 'Contact picker', description: 'The Contact Picker API allows web apps to select the user\\'s contacts after permission has been granted.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:account-box', class: 'icon size-32 color-white', alt: 'Contact picker' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_web_share')), title: 'Web share', description: 'The Web Share API invokes the native share mechanism of the device and allows users to share text, URLs or files.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:share', class: 'icon size-32 color-white', alt: 'Web share' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { link: (path('app_feature_barcode_detection')), title: 'Barcode detection', description: 'The Barcode Detection API detects barcodes and QR codes in images.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:qr-code-scanner', class: 'icon size-32 color-white', alt: 'Barcode detection' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { link: (path('app_feature_face_detection')), title: 'Face detection', description: 'The Shape Detection API detects faces in images.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:face', class: 'icon size-32 color-white', alt: 'Face detection' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_vibration')), title: 'Vibration', description: 'The Vibration API enables web apps to make a mobile device vibrate.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:vibration', class: 'icon size-32 color-white', alt: 'Vibration' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_audio_recording')), title: 'Audio recording', description: 'Record audio using MediaRecorder and visualize audio using Web Audio API.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:mic', class: 'icon size-32 color-white', alt: 'Audio recording' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_audio')), title: 'Audio', description: 'The Media Session API allows web apps to display controls for media playback on a device\\'s lock screen.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:round-play-circle-filled', class: 'icon size-32 color-white', alt: 'Audio' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { link: (path('app_feature_audio_session')), title: 'Audio Session API', description: 'The Audio Session API configures how audio from web apps should mix with audio from native apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:tune', class: 'icon size-32 color-white', alt: 'Audio Session API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_screen_capture')), title: 'Screen Capturing', description: 'Capture Handle and Captured Surface Control enable screen capturing web apps to remotely control captured web apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-share', class: 'icon size-32 color-white', alt: 'Screen Capturing' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_element_capture')), title: 'Element Capture', description: 'Element Capture enables screen capturing web apps to record specific HTML elements.' } %}
                    {% block content %}<img src=\"{{ asset('images/element-capture.svg') }}\" alt=\"Element capture\" />
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { link: (path('app_feature_background_sync')), title: 'Background Sync API', description: 'The Background Sync API enables web apps to defer tasks when it\\'s offline so they can be run when the network connection is restored.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:sync', class: 'icon size-32 color-white', alt: 'Background Sync API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { link: (path('app_feature_background_fetch')), title: 'Background Fetch API', description: 'The Background Fetch API enables web apps to download large files in the background even when the app is not running.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:downloading', class: 'icon size-32 color-white', alt: 'Background Fetch API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_storage')), title: 'Storage API', description: 'The Storage API enables web apps to persist structured data in the user\\'s browser.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:inventory', class: 'icon size-32 color-white', alt: 'Storage API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_bluetooth')), title: 'Bluetooth', description: 'The Web Bluetooth API enables web apps to connect to Bluetooth Low Energy (BLE) devices and read values from or write values to it.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:bluetooth', class: 'icon size-32 color-white', alt: 'Bluetooth' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_nfc')), title: 'NFC', description: 'The Web NFC API enables web apps to read and write to NFC tags.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:nfc', class: 'icon size-32 color-white', alt: 'NFC' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { link: (path('app_feature_ar_vr')), title: 'AR/VR', description: 'Augmented reality enables web apps to place virtual objects in reality.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:layers', class: 'icon size-32 color-white', alt: 'AR/VR' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { link: (path('app_feature_payment')), title: 'Payment', description: 'The Payment Request API provides a browser-based method to enable users to make payments on the web, using a credit card, Apple Pay or Google Pay.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:credit-card', class: 'icon size-32 color-white', alt: 'Payment' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_wake_lock')), title: 'Wake lock', description: 'The Screen Wake Lock API enables web apps to prevent devices from dimming or locking the screen when the app needs to keep running.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-lock-portrait', class: 'icon size-32 color-white', alt: 'Wake lock' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_orientation')), title: 'Orientation', description: 'The DeviceOrientationEvent gives information about the physical orientation of the user\\'s device.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-rotation', class: 'icon size-32 color-white', alt: 'Orientation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_device_motion')), title: 'Motion', description: 'The DeviceMotionEvent gives information about the speed of changes for the position and orientation of the user\\'s device.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:3d-rotation', class: 'icon size-32 color-white', alt: 'Motion' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_network_info')), title: 'Network info', description: 'The NetworkInformation API provides information about the connection of a device, allowing web apps to adapt functionality based on network quality.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:network-check', class: 'icon size-32 color-white', alt: 'Network info' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_speech_synthesis')), title: 'Speech synthesis', description: 'Speech synthesis provides text-to-speech and allows programs to read out their text content.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:record-voice-over', class: 'icon size-32 color-white', alt: 'Speech synthesis' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_speech_recognition')), title: 'Speech recognition', description: 'Speech recognition is part of the Web Speech API and provides the ability to recognize voice context from an audio input.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:hearing', class: 'icon size-32 color-white', alt: 'Speech recognition' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_multi_touch')), title: 'Multi touch', description: 'Touch events enable web apps to capture complex touch behaviour.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:touch-app', class: 'icon size-32 color-white', alt: 'Multi touch' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_i18n')), title: 'i18n', description: 'Internationalization (i18n) enables web apps to adapt to different languages and regions.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'fluent-mdl2:locale-language', class: 'icon size-32 color-white', alt: 'i18n' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_presentation')), title: 'Presentation', description: 'The Presentation API enables web apps to display content on external screens.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ri:presentation-fill', class: 'icon size-32 color-white', alt: 'presentation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

        </ul>
    </div>

</section>", "components/Features.html.twig", "/Users/praveenmujawdiya/Documents/survos/pwa-f7/templates/components/Features.html.twig");
    }
}


/* components/Features.html.twig */
class __TwigTemplate_1fb5cbdf94a162448bd258deeed21be9___7468524361 extends Template
{
    private Source $source;
    /**
     * @var array<string, Template>
     */
    private array $macros = [];

    public function __construct(Environment $env)
    {
        parent::__construct($env);

        $this->source = $this->getSourceContext();

        $this->blocks = [
            'outer__block_fallback' => [$this, 'block_outer__block_fallback'],
            'content' => [$this, 'block_content'],
        ];
    }

    protected function doGetParent(array $context): bool|string|Template|TemplateWrapper
    {
        // line 38
        return $this->loadTemplate((isset($context["__parent__"]) || array_key_exists("__parent__", $context) ? $context["__parent__"] : (function () { throw new RuntimeError('Variable "__parent__" does not exist.', 38, $this->source); })()), "components/Features.html.twig", 38);
    }

    protected function doDisplay(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        yield from $this->getParent($context)->unwrap()->yield($context, array_merge($this->blocks, $blocks));
        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

    }

    /**
     * @return iterable<null|scalar|\Stringable>
     */
    public function block_outer__block_fallback(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        yield from [];
    }

    // line 39
    /**
     * @return iterable<null|scalar|\Stringable>
     */
    public function block_content(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        yield $this->env->getRuntime('Symfony\UX\TwigComponent\Twig\ComponentRuntime')->render("ux:icon", ["name" => "ic:baseline-gps-fixed", "class" => "icon size-32 color-white", "alt" => "Geolocation"]);
        yield "
                ";
        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        yield from [];
    }

    /**
     * @codeCoverageIgnore
     */
    public function getTemplateName(): string
    {
        return "components/Features.html.twig";
    }

    /**
     * @codeCoverageIgnore
     */
    public function isTraitable(): bool
    {
        return false;
    }

    /**
     * @codeCoverageIgnore
     */
    public function getDebugInfo(): array
    {
        return array (  3032 => 39,  2977 => 38,  2655 => 33,  2600 => 32,  2278 => 27,  2223 => 26,  1901 => 21,  1846 => 20,  1524 => 15,  1469 => 14,  1147 => 9,  1092 => 8,  782 => 233,  768 => 230,  763 => 227,  749 => 224,  744 => 221,  730 => 218,  725 => 215,  711 => 212,  706 => 209,  692 => 206,  687 => 203,  673 => 200,  668 => 197,  654 => 194,  649 => 191,  635 => 188,  630 => 185,  616 => 182,  611 => 179,  597 => 176,  592 => 173,  578 => 170,  573 => 167,  559 => 164,  554 => 161,  540 => 158,  535 => 155,  521 => 152,  516 => 149,  502 => 146,  497 => 143,  483 => 140,  478 => 137,  464 => 134,  459 => 131,  445 => 128,  440 => 125,  426 => 122,  421 => 119,  407 => 116,  402 => 113,  388 => 110,  383 => 107,  369 => 104,  364 => 101,  350 => 98,  345 => 95,  331 => 92,  326 => 89,  312 => 86,  307 => 83,  293 => 80,  288 => 77,  274 => 74,  269 => 71,  255 => 68,  250 => 65,  236 => 62,  231 => 59,  217 => 56,  212 => 53,  198 => 50,  193 => 47,  179 => 44,  174 => 41,  160 => 38,  155 => 35,  141 => 32,  136 => 29,  122 => 26,  117 => 23,  103 => 20,  98 => 17,  84 => 14,  79 => 11,  65 => 8,  57 => 3,  51 => 1,);
    }

    public function getSourceContext(): Source
    {
        return new Source("<section {{ attributes }}>

    <h2 class=\"block-title block-title-medium\">{{ 'homepage.demo'|trans }}</h2>
    <div class=\"list cards-list media-list inset margin-vertical-half\">
        <ul class=\"row align-items-stretch justify-content-flex-start\" style=\"column-gap: var(--f7-grid-gap);\">

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_installation')), title: 'Installation', description: 'Using the beforeinstallprompt event, a native dialog can be displayed to install a web app' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:install-mobile', class: 'icon size-32 color-white', alt: 'Install' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_offline_support')), title: 'Offline support', description: 'The Service Worker enables web apps to work offline' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:download-for-offline', class: 'icon size-32 color-white', alt: 'Offline support' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_notifications')), title: 'Notifications', description: 'The Notifications API enables web apps to display notifications, even when the app is not active.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:notifications-outline', class: 'icon size-32 color-white', alt: 'Notifications' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_shortcuts')), title: 'Shortcuts', description: 'Shortcuts provide quick access to pages in your app from the app icon.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'tdesign:mobile-shortcut-filled', class: 'icon size-32 color-white', alt: 'Shortcuts' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_view_transition')), title: 'View Transitions', description: 'The View Transitions API enables app-like transitions between pages.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:auto-awesome-motion', class: 'icon size-32 color-white', alt: 'View Transitions' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_geolocation')), title: 'Geolocation', description: 'The Geolocation API enables users to share their location with web apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-gps-fixed', class: 'icon size-32 color-white', alt: 'Geolocation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_media_capture')), title: 'Media capture', description: 'Media capture allows web apps to use the camera and microphone of a device' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:videocam', class: 'icon size-32 color-white', alt: 'Media capture' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-deeporange\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_picture_in_picture')), title: 'Picture-in-picture', description: 'The Document Picture-in-Picture API makes it possible to open an always-on-top window that can be populated with arbitrary HTML content.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:picture-in-picture', class: 'icon size-32 color-white', alt: 'Picture-in-picture' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_file_system')), title: 'File System', description: 'Access to the file system of the user\\'s device' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-insert-drive-file', class: 'icon size-32 color-white', alt: 'File System' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_authentication')), title: 'Authentication', description: 'Web Authentication API (WebAuthn) enables passwordless authentication through your device\\'s fingerprint reader or an external USB Security Key.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-fingerprint', class: 'icon size-32 color-white', alt: 'Authentication' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_protocol_handling')), title: 'Protocol Handling', description: 'Protocol handling enables web apps to register their ability to open links with particular URL schemes.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:language', class: 'icon size-32 color-white', alt: 'Protocol Handling' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_file_handling')), title: 'File Handling API', description: 'The File Handling API enables web apps to register as file handlers with the operating system' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:folder-open', class: 'icon size-32 color-white', alt: 'File Handling API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { link: (path('app_feature_contact_picker')), title: 'Contact picker', description: 'The Contact Picker API allows web apps to select the user\\'s contacts after permission has been granted.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:account-box', class: 'icon size-32 color-white', alt: 'Contact picker' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_web_share')), title: 'Web share', description: 'The Web Share API invokes the native share mechanism of the device and allows users to share text, URLs or files.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:share', class: 'icon size-32 color-white', alt: 'Web share' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { link: (path('app_feature_barcode_detection')), title: 'Barcode detection', description: 'The Barcode Detection API detects barcodes and QR codes in images.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:qr-code-scanner', class: 'icon size-32 color-white', alt: 'Barcode detection' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { link: (path('app_feature_face_detection')), title: 'Face detection', description: 'The Shape Detection API detects faces in images.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:face', class: 'icon size-32 color-white', alt: 'Face detection' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_vibration')), title: 'Vibration', description: 'The Vibration API enables web apps to make a mobile device vibrate.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:vibration', class: 'icon size-32 color-white', alt: 'Vibration' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_audio_recording')), title: 'Audio recording', description: 'Record audio using MediaRecorder and visualize audio using Web Audio API.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:mic', class: 'icon size-32 color-white', alt: 'Audio recording' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_audio')), title: 'Audio', description: 'The Media Session API allows web apps to display controls for media playback on a device\\'s lock screen.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:round-play-circle-filled', class: 'icon size-32 color-white', alt: 'Audio' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { link: (path('app_feature_audio_session')), title: 'Audio Session API', description: 'The Audio Session API configures how audio from web apps should mix with audio from native apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:tune', class: 'icon size-32 color-white', alt: 'Audio Session API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_screen_capture')), title: 'Screen Capturing', description: 'Capture Handle and Captured Surface Control enable screen capturing web apps to remotely control captured web apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-share', class: 'icon size-32 color-white', alt: 'Screen Capturing' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_element_capture')), title: 'Element Capture', description: 'Element Capture enables screen capturing web apps to record specific HTML elements.' } %}
                    {% block content %}<img src=\"{{ asset('images/element-capture.svg') }}\" alt=\"Element capture\" />
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { link: (path('app_feature_background_sync')), title: 'Background Sync API', description: 'The Background Sync API enables web apps to defer tasks when it\\'s offline so they can be run when the network connection is restored.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:sync', class: 'icon size-32 color-white', alt: 'Background Sync API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { link: (path('app_feature_background_fetch')), title: 'Background Fetch API', description: 'The Background Fetch API enables web apps to download large files in the background even when the app is not running.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:downloading', class: 'icon size-32 color-white', alt: 'Background Fetch API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_storage')), title: 'Storage API', description: 'The Storage API enables web apps to persist structured data in the user\\'s browser.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:inventory', class: 'icon size-32 color-white', alt: 'Storage API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_bluetooth')), title: 'Bluetooth', description: 'The Web Bluetooth API enables web apps to connect to Bluetooth Low Energy (BLE) devices and read values from or write values to it.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:bluetooth', class: 'icon size-32 color-white', alt: 'Bluetooth' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_nfc')), title: 'NFC', description: 'The Web NFC API enables web apps to read and write to NFC tags.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:nfc', class: 'icon size-32 color-white', alt: 'NFC' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { link: (path('app_feature_ar_vr')), title: 'AR/VR', description: 'Augmented reality enables web apps to place virtual objects in reality.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:layers', class: 'icon size-32 color-white', alt: 'AR/VR' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { link: (path('app_feature_payment')), title: 'Payment', description: 'The Payment Request API provides a browser-based method to enable users to make payments on the web, using a credit card, Apple Pay or Google Pay.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:credit-card', class: 'icon size-32 color-white', alt: 'Payment' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_wake_lock')), title: 'Wake lock', description: 'The Screen Wake Lock API enables web apps to prevent devices from dimming or locking the screen when the app needs to keep running.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-lock-portrait', class: 'icon size-32 color-white', alt: 'Wake lock' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_orientation')), title: 'Orientation', description: 'The DeviceOrientationEvent gives information about the physical orientation of the user\\'s device.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-rotation', class: 'icon size-32 color-white', alt: 'Orientation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_device_motion')), title: 'Motion', description: 'The DeviceMotionEvent gives information about the speed of changes for the position and orientation of the user\\'s device.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:3d-rotation', class: 'icon size-32 color-white', alt: 'Motion' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_network_info')), title: 'Network info', description: 'The NetworkInformation API provides information about the connection of a device, allowing web apps to adapt functionality based on network quality.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:network-check', class: 'icon size-32 color-white', alt: 'Network info' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_speech_synthesis')), title: 'Speech synthesis', description: 'Speech synthesis provides text-to-speech and allows programs to read out their text content.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:record-voice-over', class: 'icon size-32 color-white', alt: 'Speech synthesis' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_speech_recognition')), title: 'Speech recognition', description: 'Speech recognition is part of the Web Speech API and provides the ability to recognize voice context from an audio input.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:hearing', class: 'icon size-32 color-white', alt: 'Speech recognition' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_multi_touch')), title: 'Multi touch', description: 'Touch events enable web apps to capture complex touch behaviour.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:touch-app', class: 'icon size-32 color-white', alt: 'Multi touch' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_i18n')), title: 'i18n', description: 'Internationalization (i18n) enables web apps to adapt to different languages and regions.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'fluent-mdl2:locale-language', class: 'icon size-32 color-white', alt: 'i18n' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_presentation')), title: 'Presentation', description: 'The Presentation API enables web apps to display content on external screens.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ri:presentation-fill', class: 'icon size-32 color-white', alt: 'presentation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

        </ul>
    </div>

</section>", "components/Features.html.twig", "/Users/praveenmujawdiya/Documents/survos/pwa-f7/templates/components/Features.html.twig");
    }
}


/* components/Features.html.twig */
class __TwigTemplate_1fb5cbdf94a162448bd258deeed21be9___17859734321 extends Template
{
    private Source $source;
    /**
     * @var array<string, Template>
     */
    private array $macros = [];

    public function __construct(Environment $env)
    {
        parent::__construct($env);

        $this->source = $this->getSourceContext();

        $this->blocks = [
            'outer__block_fallback' => [$this, 'block_outer__block_fallback'],
            'content' => [$this, 'block_content'],
        ];
    }

    protected function doGetParent(array $context): bool|string|Template|TemplateWrapper
    {
        // line 44
        return $this->loadTemplate((isset($context["__parent__"]) || array_key_exists("__parent__", $context) ? $context["__parent__"] : (function () { throw new RuntimeError('Variable "__parent__" does not exist.', 44, $this->source); })()), "components/Features.html.twig", 44);
    }

    protected function doDisplay(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        yield from $this->getParent($context)->unwrap()->yield($context, array_merge($this->blocks, $blocks));
        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

    }

    /**
     * @return iterable<null|scalar|\Stringable>
     */
    public function block_outer__block_fallback(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        yield from [];
    }

    // line 45
    /**
     * @return iterable<null|scalar|\Stringable>
     */
    public function block_content(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        yield $this->env->getRuntime('Symfony\UX\TwigComponent\Twig\ComponentRuntime')->render("ux:icon", ["name" => "material-symbols:videocam", "class" => "icon size-32 color-white", "alt" => "Media capture"]);
        yield "
                ";
        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        yield from [];
    }

    /**
     * @codeCoverageIgnore
     */
    public function getTemplateName(): string
    {
        return "components/Features.html.twig";
    }

    /**
     * @codeCoverageIgnore
     */
    public function isTraitable(): bool
    {
        return false;
    }

    /**
     * @codeCoverageIgnore
     */
    public function getDebugInfo(): array
    {
        return array (  3409 => 45,  3354 => 44,  3032 => 39,  2977 => 38,  2655 => 33,  2600 => 32,  2278 => 27,  2223 => 26,  1901 => 21,  1846 => 20,  1524 => 15,  1469 => 14,  1147 => 9,  1092 => 8,  782 => 233,  768 => 230,  763 => 227,  749 => 224,  744 => 221,  730 => 218,  725 => 215,  711 => 212,  706 => 209,  692 => 206,  687 => 203,  673 => 200,  668 => 197,  654 => 194,  649 => 191,  635 => 188,  630 => 185,  616 => 182,  611 => 179,  597 => 176,  592 => 173,  578 => 170,  573 => 167,  559 => 164,  554 => 161,  540 => 158,  535 => 155,  521 => 152,  516 => 149,  502 => 146,  497 => 143,  483 => 140,  478 => 137,  464 => 134,  459 => 131,  445 => 128,  440 => 125,  426 => 122,  421 => 119,  407 => 116,  402 => 113,  388 => 110,  383 => 107,  369 => 104,  364 => 101,  350 => 98,  345 => 95,  331 => 92,  326 => 89,  312 => 86,  307 => 83,  293 => 80,  288 => 77,  274 => 74,  269 => 71,  255 => 68,  250 => 65,  236 => 62,  231 => 59,  217 => 56,  212 => 53,  198 => 50,  193 => 47,  179 => 44,  174 => 41,  160 => 38,  155 => 35,  141 => 32,  136 => 29,  122 => 26,  117 => 23,  103 => 20,  98 => 17,  84 => 14,  79 => 11,  65 => 8,  57 => 3,  51 => 1,);
    }

    public function getSourceContext(): Source
    {
        return new Source("<section {{ attributes }}>

    <h2 class=\"block-title block-title-medium\">{{ 'homepage.demo'|trans }}</h2>
    <div class=\"list cards-list media-list inset margin-vertical-half\">
        <ul class=\"row align-items-stretch justify-content-flex-start\" style=\"column-gap: var(--f7-grid-gap);\">

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_installation')), title: 'Installation', description: 'Using the beforeinstallprompt event, a native dialog can be displayed to install a web app' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:install-mobile', class: 'icon size-32 color-white', alt: 'Install' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_offline_support')), title: 'Offline support', description: 'The Service Worker enables web apps to work offline' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:download-for-offline', class: 'icon size-32 color-white', alt: 'Offline support' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_notifications')), title: 'Notifications', description: 'The Notifications API enables web apps to display notifications, even when the app is not active.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:notifications-outline', class: 'icon size-32 color-white', alt: 'Notifications' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_shortcuts')), title: 'Shortcuts', description: 'Shortcuts provide quick access to pages in your app from the app icon.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'tdesign:mobile-shortcut-filled', class: 'icon size-32 color-white', alt: 'Shortcuts' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_view_transition')), title: 'View Transitions', description: 'The View Transitions API enables app-like transitions between pages.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:auto-awesome-motion', class: 'icon size-32 color-white', alt: 'View Transitions' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_geolocation')), title: 'Geolocation', description: 'The Geolocation API enables users to share their location with web apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-gps-fixed', class: 'icon size-32 color-white', alt: 'Geolocation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_media_capture')), title: 'Media capture', description: 'Media capture allows web apps to use the camera and microphone of a device' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:videocam', class: 'icon size-32 color-white', alt: 'Media capture' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-deeporange\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_picture_in_picture')), title: 'Picture-in-picture', description: 'The Document Picture-in-Picture API makes it possible to open an always-on-top window that can be populated with arbitrary HTML content.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:picture-in-picture', class: 'icon size-32 color-white', alt: 'Picture-in-picture' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_file_system')), title: 'File System', description: 'Access to the file system of the user\\'s device' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-insert-drive-file', class: 'icon size-32 color-white', alt: 'File System' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_authentication')), title: 'Authentication', description: 'Web Authentication API (WebAuthn) enables passwordless authentication through your device\\'s fingerprint reader or an external USB Security Key.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-fingerprint', class: 'icon size-32 color-white', alt: 'Authentication' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_protocol_handling')), title: 'Protocol Handling', description: 'Protocol handling enables web apps to register their ability to open links with particular URL schemes.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:language', class: 'icon size-32 color-white', alt: 'Protocol Handling' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_file_handling')), title: 'File Handling API', description: 'The File Handling API enables web apps to register as file handlers with the operating system' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:folder-open', class: 'icon size-32 color-white', alt: 'File Handling API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { link: (path('app_feature_contact_picker')), title: 'Contact picker', description: 'The Contact Picker API allows web apps to select the user\\'s contacts after permission has been granted.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:account-box', class: 'icon size-32 color-white', alt: 'Contact picker' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_web_share')), title: 'Web share', description: 'The Web Share API invokes the native share mechanism of the device and allows users to share text, URLs or files.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:share', class: 'icon size-32 color-white', alt: 'Web share' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { link: (path('app_feature_barcode_detection')), title: 'Barcode detection', description: 'The Barcode Detection API detects barcodes and QR codes in images.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:qr-code-scanner', class: 'icon size-32 color-white', alt: 'Barcode detection' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { link: (path('app_feature_face_detection')), title: 'Face detection', description: 'The Shape Detection API detects faces in images.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:face', class: 'icon size-32 color-white', alt: 'Face detection' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_vibration')), title: 'Vibration', description: 'The Vibration API enables web apps to make a mobile device vibrate.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:vibration', class: 'icon size-32 color-white', alt: 'Vibration' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_audio_recording')), title: 'Audio recording', description: 'Record audio using MediaRecorder and visualize audio using Web Audio API.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:mic', class: 'icon size-32 color-white', alt: 'Audio recording' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_audio')), title: 'Audio', description: 'The Media Session API allows web apps to display controls for media playback on a device\\'s lock screen.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:round-play-circle-filled', class: 'icon size-32 color-white', alt: 'Audio' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { link: (path('app_feature_audio_session')), title: 'Audio Session API', description: 'The Audio Session API configures how audio from web apps should mix with audio from native apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:tune', class: 'icon size-32 color-white', alt: 'Audio Session API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_screen_capture')), title: 'Screen Capturing', description: 'Capture Handle and Captured Surface Control enable screen capturing web apps to remotely control captured web apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-share', class: 'icon size-32 color-white', alt: 'Screen Capturing' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_element_capture')), title: 'Element Capture', description: 'Element Capture enables screen capturing web apps to record specific HTML elements.' } %}
                    {% block content %}<img src=\"{{ asset('images/element-capture.svg') }}\" alt=\"Element capture\" />
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { link: (path('app_feature_background_sync')), title: 'Background Sync API', description: 'The Background Sync API enables web apps to defer tasks when it\\'s offline so they can be run when the network connection is restored.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:sync', class: 'icon size-32 color-white', alt: 'Background Sync API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { link: (path('app_feature_background_fetch')), title: 'Background Fetch API', description: 'The Background Fetch API enables web apps to download large files in the background even when the app is not running.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:downloading', class: 'icon size-32 color-white', alt: 'Background Fetch API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_storage')), title: 'Storage API', description: 'The Storage API enables web apps to persist structured data in the user\\'s browser.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:inventory', class: 'icon size-32 color-white', alt: 'Storage API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_bluetooth')), title: 'Bluetooth', description: 'The Web Bluetooth API enables web apps to connect to Bluetooth Low Energy (BLE) devices and read values from or write values to it.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:bluetooth', class: 'icon size-32 color-white', alt: 'Bluetooth' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_nfc')), title: 'NFC', description: 'The Web NFC API enables web apps to read and write to NFC tags.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:nfc', class: 'icon size-32 color-white', alt: 'NFC' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { link: (path('app_feature_ar_vr')), title: 'AR/VR', description: 'Augmented reality enables web apps to place virtual objects in reality.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:layers', class: 'icon size-32 color-white', alt: 'AR/VR' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { link: (path('app_feature_payment')), title: 'Payment', description: 'The Payment Request API provides a browser-based method to enable users to make payments on the web, using a credit card, Apple Pay or Google Pay.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:credit-card', class: 'icon size-32 color-white', alt: 'Payment' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_wake_lock')), title: 'Wake lock', description: 'The Screen Wake Lock API enables web apps to prevent devices from dimming or locking the screen when the app needs to keep running.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-lock-portrait', class: 'icon size-32 color-white', alt: 'Wake lock' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_orientation')), title: 'Orientation', description: 'The DeviceOrientationEvent gives information about the physical orientation of the user\\'s device.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-rotation', class: 'icon size-32 color-white', alt: 'Orientation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_device_motion')), title: 'Motion', description: 'The DeviceMotionEvent gives information about the speed of changes for the position and orientation of the user\\'s device.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:3d-rotation', class: 'icon size-32 color-white', alt: 'Motion' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_network_info')), title: 'Network info', description: 'The NetworkInformation API provides information about the connection of a device, allowing web apps to adapt functionality based on network quality.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:network-check', class: 'icon size-32 color-white', alt: 'Network info' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_speech_synthesis')), title: 'Speech synthesis', description: 'Speech synthesis provides text-to-speech and allows programs to read out their text content.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:record-voice-over', class: 'icon size-32 color-white', alt: 'Speech synthesis' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_speech_recognition')), title: 'Speech recognition', description: 'Speech recognition is part of the Web Speech API and provides the ability to recognize voice context from an audio input.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:hearing', class: 'icon size-32 color-white', alt: 'Speech recognition' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_multi_touch')), title: 'Multi touch', description: 'Touch events enable web apps to capture complex touch behaviour.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:touch-app', class: 'icon size-32 color-white', alt: 'Multi touch' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_i18n')), title: 'i18n', description: 'Internationalization (i18n) enables web apps to adapt to different languages and regions.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'fluent-mdl2:locale-language', class: 'icon size-32 color-white', alt: 'i18n' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_presentation')), title: 'Presentation', description: 'The Presentation API enables web apps to display content on external screens.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ri:presentation-fill', class: 'icon size-32 color-white', alt: 'presentation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

        </ul>
    </div>

</section>", "components/Features.html.twig", "/Users/praveenmujawdiya/Documents/survos/pwa-f7/templates/components/Features.html.twig");
    }
}


/* components/Features.html.twig */
class __TwigTemplate_1fb5cbdf94a162448bd258deeed21be9___19465010881 extends Template
{
    private Source $source;
    /**
     * @var array<string, Template>
     */
    private array $macros = [];

    public function __construct(Environment $env)
    {
        parent::__construct($env);

        $this->source = $this->getSourceContext();

        $this->blocks = [
            'outer__block_fallback' => [$this, 'block_outer__block_fallback'],
            'content' => [$this, 'block_content'],
        ];
    }

    protected function doGetParent(array $context): bool|string|Template|TemplateWrapper
    {
        // line 50
        return $this->loadTemplate((isset($context["__parent__"]) || array_key_exists("__parent__", $context) ? $context["__parent__"] : (function () { throw new RuntimeError('Variable "__parent__" does not exist.', 50, $this->source); })()), "components/Features.html.twig", 50);
    }

    protected function doDisplay(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        yield from $this->getParent($context)->unwrap()->yield($context, array_merge($this->blocks, $blocks));
        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

    }

    /**
     * @return iterable<null|scalar|\Stringable>
     */
    public function block_outer__block_fallback(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        yield from [];
    }

    // line 51
    /**
     * @return iterable<null|scalar|\Stringable>
     */
    public function block_content(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        yield $this->env->getRuntime('Symfony\UX\TwigComponent\Twig\ComponentRuntime')->render("ux:icon", ["name" => "material-symbols:picture-in-picture", "class" => "icon size-32 color-white", "alt" => "Picture-in-picture"]);
        yield "
                ";
        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        yield from [];
    }

    /**
     * @codeCoverageIgnore
     */
    public function getTemplateName(): string
    {
        return "components/Features.html.twig";
    }

    /**
     * @codeCoverageIgnore
     */
    public function isTraitable(): bool
    {
        return false;
    }

    /**
     * @codeCoverageIgnore
     */
    public function getDebugInfo(): array
    {
        return array (  3786 => 51,  3731 => 50,  3409 => 45,  3354 => 44,  3032 => 39,  2977 => 38,  2655 => 33,  2600 => 32,  2278 => 27,  2223 => 26,  1901 => 21,  1846 => 20,  1524 => 15,  1469 => 14,  1147 => 9,  1092 => 8,  782 => 233,  768 => 230,  763 => 227,  749 => 224,  744 => 221,  730 => 218,  725 => 215,  711 => 212,  706 => 209,  692 => 206,  687 => 203,  673 => 200,  668 => 197,  654 => 194,  649 => 191,  635 => 188,  630 => 185,  616 => 182,  611 => 179,  597 => 176,  592 => 173,  578 => 170,  573 => 167,  559 => 164,  554 => 161,  540 => 158,  535 => 155,  521 => 152,  516 => 149,  502 => 146,  497 => 143,  483 => 140,  478 => 137,  464 => 134,  459 => 131,  445 => 128,  440 => 125,  426 => 122,  421 => 119,  407 => 116,  402 => 113,  388 => 110,  383 => 107,  369 => 104,  364 => 101,  350 => 98,  345 => 95,  331 => 92,  326 => 89,  312 => 86,  307 => 83,  293 => 80,  288 => 77,  274 => 74,  269 => 71,  255 => 68,  250 => 65,  236 => 62,  231 => 59,  217 => 56,  212 => 53,  198 => 50,  193 => 47,  179 => 44,  174 => 41,  160 => 38,  155 => 35,  141 => 32,  136 => 29,  122 => 26,  117 => 23,  103 => 20,  98 => 17,  84 => 14,  79 => 11,  65 => 8,  57 => 3,  51 => 1,);
    }

    public function getSourceContext(): Source
    {
        return new Source("<section {{ attributes }}>

    <h2 class=\"block-title block-title-medium\">{{ 'homepage.demo'|trans }}</h2>
    <div class=\"list cards-list media-list inset margin-vertical-half\">
        <ul class=\"row align-items-stretch justify-content-flex-start\" style=\"column-gap: var(--f7-grid-gap);\">

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_installation')), title: 'Installation', description: 'Using the beforeinstallprompt event, a native dialog can be displayed to install a web app' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:install-mobile', class: 'icon size-32 color-white', alt: 'Install' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_offline_support')), title: 'Offline support', description: 'The Service Worker enables web apps to work offline' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:download-for-offline', class: 'icon size-32 color-white', alt: 'Offline support' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_notifications')), title: 'Notifications', description: 'The Notifications API enables web apps to display notifications, even when the app is not active.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:notifications-outline', class: 'icon size-32 color-white', alt: 'Notifications' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_shortcuts')), title: 'Shortcuts', description: 'Shortcuts provide quick access to pages in your app from the app icon.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'tdesign:mobile-shortcut-filled', class: 'icon size-32 color-white', alt: 'Shortcuts' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_view_transition')), title: 'View Transitions', description: 'The View Transitions API enables app-like transitions between pages.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:auto-awesome-motion', class: 'icon size-32 color-white', alt: 'View Transitions' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_geolocation')), title: 'Geolocation', description: 'The Geolocation API enables users to share their location with web apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-gps-fixed', class: 'icon size-32 color-white', alt: 'Geolocation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_media_capture')), title: 'Media capture', description: 'Media capture allows web apps to use the camera and microphone of a device' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:videocam', class: 'icon size-32 color-white', alt: 'Media capture' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-deeporange\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_picture_in_picture')), title: 'Picture-in-picture', description: 'The Document Picture-in-Picture API makes it possible to open an always-on-top window that can be populated with arbitrary HTML content.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:picture-in-picture', class: 'icon size-32 color-white', alt: 'Picture-in-picture' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_file_system')), title: 'File System', description: 'Access to the file system of the user\\'s device' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-insert-drive-file', class: 'icon size-32 color-white', alt: 'File System' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_authentication')), title: 'Authentication', description: 'Web Authentication API (WebAuthn) enables passwordless authentication through your device\\'s fingerprint reader or an external USB Security Key.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-fingerprint', class: 'icon size-32 color-white', alt: 'Authentication' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_protocol_handling')), title: 'Protocol Handling', description: 'Protocol handling enables web apps to register their ability to open links with particular URL schemes.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:language', class: 'icon size-32 color-white', alt: 'Protocol Handling' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_file_handling')), title: 'File Handling API', description: 'The File Handling API enables web apps to register as file handlers with the operating system' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:folder-open', class: 'icon size-32 color-white', alt: 'File Handling API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { link: (path('app_feature_contact_picker')), title: 'Contact picker', description: 'The Contact Picker API allows web apps to select the user\\'s contacts after permission has been granted.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:account-box', class: 'icon size-32 color-white', alt: 'Contact picker' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_web_share')), title: 'Web share', description: 'The Web Share API invokes the native share mechanism of the device and allows users to share text, URLs or files.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:share', class: 'icon size-32 color-white', alt: 'Web share' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { link: (path('app_feature_barcode_detection')), title: 'Barcode detection', description: 'The Barcode Detection API detects barcodes and QR codes in images.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:qr-code-scanner', class: 'icon size-32 color-white', alt: 'Barcode detection' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { link: (path('app_feature_face_detection')), title: 'Face detection', description: 'The Shape Detection API detects faces in images.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:face', class: 'icon size-32 color-white', alt: 'Face detection' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_vibration')), title: 'Vibration', description: 'The Vibration API enables web apps to make a mobile device vibrate.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:vibration', class: 'icon size-32 color-white', alt: 'Vibration' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_audio_recording')), title: 'Audio recording', description: 'Record audio using MediaRecorder and visualize audio using Web Audio API.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:mic', class: 'icon size-32 color-white', alt: 'Audio recording' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_audio')), title: 'Audio', description: 'The Media Session API allows web apps to display controls for media playback on a device\\'s lock screen.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:round-play-circle-filled', class: 'icon size-32 color-white', alt: 'Audio' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { link: (path('app_feature_audio_session')), title: 'Audio Session API', description: 'The Audio Session API configures how audio from web apps should mix with audio from native apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:tune', class: 'icon size-32 color-white', alt: 'Audio Session API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_screen_capture')), title: 'Screen Capturing', description: 'Capture Handle and Captured Surface Control enable screen capturing web apps to remotely control captured web apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-share', class: 'icon size-32 color-white', alt: 'Screen Capturing' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_element_capture')), title: 'Element Capture', description: 'Element Capture enables screen capturing web apps to record specific HTML elements.' } %}
                    {% block content %}<img src=\"{{ asset('images/element-capture.svg') }}\" alt=\"Element capture\" />
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { link: (path('app_feature_background_sync')), title: 'Background Sync API', description: 'The Background Sync API enables web apps to defer tasks when it\\'s offline so they can be run when the network connection is restored.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:sync', class: 'icon size-32 color-white', alt: 'Background Sync API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { link: (path('app_feature_background_fetch')), title: 'Background Fetch API', description: 'The Background Fetch API enables web apps to download large files in the background even when the app is not running.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:downloading', class: 'icon size-32 color-white', alt: 'Background Fetch API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_storage')), title: 'Storage API', description: 'The Storage API enables web apps to persist structured data in the user\\'s browser.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:inventory', class: 'icon size-32 color-white', alt: 'Storage API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_bluetooth')), title: 'Bluetooth', description: 'The Web Bluetooth API enables web apps to connect to Bluetooth Low Energy (BLE) devices and read values from or write values to it.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:bluetooth', class: 'icon size-32 color-white', alt: 'Bluetooth' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_nfc')), title: 'NFC', description: 'The Web NFC API enables web apps to read and write to NFC tags.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:nfc', class: 'icon size-32 color-white', alt: 'NFC' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { link: (path('app_feature_ar_vr')), title: 'AR/VR', description: 'Augmented reality enables web apps to place virtual objects in reality.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:layers', class: 'icon size-32 color-white', alt: 'AR/VR' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { link: (path('app_feature_payment')), title: 'Payment', description: 'The Payment Request API provides a browser-based method to enable users to make payments on the web, using a credit card, Apple Pay or Google Pay.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:credit-card', class: 'icon size-32 color-white', alt: 'Payment' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_wake_lock')), title: 'Wake lock', description: 'The Screen Wake Lock API enables web apps to prevent devices from dimming or locking the screen when the app needs to keep running.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-lock-portrait', class: 'icon size-32 color-white', alt: 'Wake lock' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_orientation')), title: 'Orientation', description: 'The DeviceOrientationEvent gives information about the physical orientation of the user\\'s device.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-rotation', class: 'icon size-32 color-white', alt: 'Orientation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_device_motion')), title: 'Motion', description: 'The DeviceMotionEvent gives information about the speed of changes for the position and orientation of the user\\'s device.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:3d-rotation', class: 'icon size-32 color-white', alt: 'Motion' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_network_info')), title: 'Network info', description: 'The NetworkInformation API provides information about the connection of a device, allowing web apps to adapt functionality based on network quality.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:network-check', class: 'icon size-32 color-white', alt: 'Network info' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_speech_synthesis')), title: 'Speech synthesis', description: 'Speech synthesis provides text-to-speech and allows programs to read out their text content.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:record-voice-over', class: 'icon size-32 color-white', alt: 'Speech synthesis' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_speech_recognition')), title: 'Speech recognition', description: 'Speech recognition is part of the Web Speech API and provides the ability to recognize voice context from an audio input.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:hearing', class: 'icon size-32 color-white', alt: 'Speech recognition' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_multi_touch')), title: 'Multi touch', description: 'Touch events enable web apps to capture complex touch behaviour.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:touch-app', class: 'icon size-32 color-white', alt: 'Multi touch' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_i18n')), title: 'i18n', description: 'Internationalization (i18n) enables web apps to adapt to different languages and regions.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'fluent-mdl2:locale-language', class: 'icon size-32 color-white', alt: 'i18n' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_presentation')), title: 'Presentation', description: 'The Presentation API enables web apps to display content on external screens.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ri:presentation-fill', class: 'icon size-32 color-white', alt: 'presentation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

        </ul>
    </div>

</section>", "components/Features.html.twig", "/Users/praveenmujawdiya/Documents/survos/pwa-f7/templates/components/Features.html.twig");
    }
}


/* components/Features.html.twig */
class __TwigTemplate_1fb5cbdf94a162448bd258deeed21be9___26407472211 extends Template
{
    private Source $source;
    /**
     * @var array<string, Template>
     */
    private array $macros = [];

    public function __construct(Environment $env)
    {
        parent::__construct($env);

        $this->source = $this->getSourceContext();

        $this->blocks = [
            'outer__block_fallback' => [$this, 'block_outer__block_fallback'],
            'content' => [$this, 'block_content'],
        ];
    }

    protected function doGetParent(array $context): bool|string|Template|TemplateWrapper
    {
        // line 56
        return $this->loadTemplate((isset($context["__parent__"]) || array_key_exists("__parent__", $context) ? $context["__parent__"] : (function () { throw new RuntimeError('Variable "__parent__" does not exist.', 56, $this->source); })()), "components/Features.html.twig", 56);
    }

    protected function doDisplay(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        yield from $this->getParent($context)->unwrap()->yield($context, array_merge($this->blocks, $blocks));
        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

    }

    /**
     * @return iterable<null|scalar|\Stringable>
     */
    public function block_outer__block_fallback(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        yield from [];
    }

    // line 57
    /**
     * @return iterable<null|scalar|\Stringable>
     */
    public function block_content(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        yield $this->env->getRuntime('Symfony\UX\TwigComponent\Twig\ComponentRuntime')->render("ux:icon", ["name" => "ic:baseline-insert-drive-file", "class" => "icon size-32 color-white", "alt" => "File System"]);
        yield "
                ";
        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        yield from [];
    }

    /**
     * @codeCoverageIgnore
     */
    public function getTemplateName(): string
    {
        return "components/Features.html.twig";
    }

    /**
     * @codeCoverageIgnore
     */
    public function isTraitable(): bool
    {
        return false;
    }

    /**
     * @codeCoverageIgnore
     */
    public function getDebugInfo(): array
    {
        return array (  4163 => 57,  4108 => 56,  3786 => 51,  3731 => 50,  3409 => 45,  3354 => 44,  3032 => 39,  2977 => 38,  2655 => 33,  2600 => 32,  2278 => 27,  2223 => 26,  1901 => 21,  1846 => 20,  1524 => 15,  1469 => 14,  1147 => 9,  1092 => 8,  782 => 233,  768 => 230,  763 => 227,  749 => 224,  744 => 221,  730 => 218,  725 => 215,  711 => 212,  706 => 209,  692 => 206,  687 => 203,  673 => 200,  668 => 197,  654 => 194,  649 => 191,  635 => 188,  630 => 185,  616 => 182,  611 => 179,  597 => 176,  592 => 173,  578 => 170,  573 => 167,  559 => 164,  554 => 161,  540 => 158,  535 => 155,  521 => 152,  516 => 149,  502 => 146,  497 => 143,  483 => 140,  478 => 137,  464 => 134,  459 => 131,  445 => 128,  440 => 125,  426 => 122,  421 => 119,  407 => 116,  402 => 113,  388 => 110,  383 => 107,  369 => 104,  364 => 101,  350 => 98,  345 => 95,  331 => 92,  326 => 89,  312 => 86,  307 => 83,  293 => 80,  288 => 77,  274 => 74,  269 => 71,  255 => 68,  250 => 65,  236 => 62,  231 => 59,  217 => 56,  212 => 53,  198 => 50,  193 => 47,  179 => 44,  174 => 41,  160 => 38,  155 => 35,  141 => 32,  136 => 29,  122 => 26,  117 => 23,  103 => 20,  98 => 17,  84 => 14,  79 => 11,  65 => 8,  57 => 3,  51 => 1,);
    }

    public function getSourceContext(): Source
    {
        return new Source("<section {{ attributes }}>

    <h2 class=\"block-title block-title-medium\">{{ 'homepage.demo'|trans }}</h2>
    <div class=\"list cards-list media-list inset margin-vertical-half\">
        <ul class=\"row align-items-stretch justify-content-flex-start\" style=\"column-gap: var(--f7-grid-gap);\">

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_installation')), title: 'Installation', description: 'Using the beforeinstallprompt event, a native dialog can be displayed to install a web app' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:install-mobile', class: 'icon size-32 color-white', alt: 'Install' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_offline_support')), title: 'Offline support', description: 'The Service Worker enables web apps to work offline' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:download-for-offline', class: 'icon size-32 color-white', alt: 'Offline support' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_notifications')), title: 'Notifications', description: 'The Notifications API enables web apps to display notifications, even when the app is not active.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:notifications-outline', class: 'icon size-32 color-white', alt: 'Notifications' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_shortcuts')), title: 'Shortcuts', description: 'Shortcuts provide quick access to pages in your app from the app icon.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'tdesign:mobile-shortcut-filled', class: 'icon size-32 color-white', alt: 'Shortcuts' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_view_transition')), title: 'View Transitions', description: 'The View Transitions API enables app-like transitions between pages.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:auto-awesome-motion', class: 'icon size-32 color-white', alt: 'View Transitions' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_geolocation')), title: 'Geolocation', description: 'The Geolocation API enables users to share their location with web apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-gps-fixed', class: 'icon size-32 color-white', alt: 'Geolocation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_media_capture')), title: 'Media capture', description: 'Media capture allows web apps to use the camera and microphone of a device' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:videocam', class: 'icon size-32 color-white', alt: 'Media capture' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-deeporange\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_picture_in_picture')), title: 'Picture-in-picture', description: 'The Document Picture-in-Picture API makes it possible to open an always-on-top window that can be populated with arbitrary HTML content.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:picture-in-picture', class: 'icon size-32 color-white', alt: 'Picture-in-picture' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_file_system')), title: 'File System', description: 'Access to the file system of the user\\'s device' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-insert-drive-file', class: 'icon size-32 color-white', alt: 'File System' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_authentication')), title: 'Authentication', description: 'Web Authentication API (WebAuthn) enables passwordless authentication through your device\\'s fingerprint reader or an external USB Security Key.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-fingerprint', class: 'icon size-32 color-white', alt: 'Authentication' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_protocol_handling')), title: 'Protocol Handling', description: 'Protocol handling enables web apps to register their ability to open links with particular URL schemes.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:language', class: 'icon size-32 color-white', alt: 'Protocol Handling' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_file_handling')), title: 'File Handling API', description: 'The File Handling API enables web apps to register as file handlers with the operating system' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:folder-open', class: 'icon size-32 color-white', alt: 'File Handling API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { link: (path('app_feature_contact_picker')), title: 'Contact picker', description: 'The Contact Picker API allows web apps to select the user\\'s contacts after permission has been granted.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:account-box', class: 'icon size-32 color-white', alt: 'Contact picker' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_web_share')), title: 'Web share', description: 'The Web Share API invokes the native share mechanism of the device and allows users to share text, URLs or files.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:share', class: 'icon size-32 color-white', alt: 'Web share' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { link: (path('app_feature_barcode_detection')), title: 'Barcode detection', description: 'The Barcode Detection API detects barcodes and QR codes in images.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:qr-code-scanner', class: 'icon size-32 color-white', alt: 'Barcode detection' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { link: (path('app_feature_face_detection')), title: 'Face detection', description: 'The Shape Detection API detects faces in images.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:face', class: 'icon size-32 color-white', alt: 'Face detection' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_vibration')), title: 'Vibration', description: 'The Vibration API enables web apps to make a mobile device vibrate.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:vibration', class: 'icon size-32 color-white', alt: 'Vibration' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_audio_recording')), title: 'Audio recording', description: 'Record audio using MediaRecorder and visualize audio using Web Audio API.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:mic', class: 'icon size-32 color-white', alt: 'Audio recording' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_audio')), title: 'Audio', description: 'The Media Session API allows web apps to display controls for media playback on a device\\'s lock screen.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:round-play-circle-filled', class: 'icon size-32 color-white', alt: 'Audio' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { link: (path('app_feature_audio_session')), title: 'Audio Session API', description: 'The Audio Session API configures how audio from web apps should mix with audio from native apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:tune', class: 'icon size-32 color-white', alt: 'Audio Session API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_screen_capture')), title: 'Screen Capturing', description: 'Capture Handle and Captured Surface Control enable screen capturing web apps to remotely control captured web apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-share', class: 'icon size-32 color-white', alt: 'Screen Capturing' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_element_capture')), title: 'Element Capture', description: 'Element Capture enables screen capturing web apps to record specific HTML elements.' } %}
                    {% block content %}<img src=\"{{ asset('images/element-capture.svg') }}\" alt=\"Element capture\" />
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { link: (path('app_feature_background_sync')), title: 'Background Sync API', description: 'The Background Sync API enables web apps to defer tasks when it\\'s offline so they can be run when the network connection is restored.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:sync', class: 'icon size-32 color-white', alt: 'Background Sync API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { link: (path('app_feature_background_fetch')), title: 'Background Fetch API', description: 'The Background Fetch API enables web apps to download large files in the background even when the app is not running.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:downloading', class: 'icon size-32 color-white', alt: 'Background Fetch API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_storage')), title: 'Storage API', description: 'The Storage API enables web apps to persist structured data in the user\\'s browser.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:inventory', class: 'icon size-32 color-white', alt: 'Storage API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_bluetooth')), title: 'Bluetooth', description: 'The Web Bluetooth API enables web apps to connect to Bluetooth Low Energy (BLE) devices and read values from or write values to it.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:bluetooth', class: 'icon size-32 color-white', alt: 'Bluetooth' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_nfc')), title: 'NFC', description: 'The Web NFC API enables web apps to read and write to NFC tags.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:nfc', class: 'icon size-32 color-white', alt: 'NFC' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { link: (path('app_feature_ar_vr')), title: 'AR/VR', description: 'Augmented reality enables web apps to place virtual objects in reality.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:layers', class: 'icon size-32 color-white', alt: 'AR/VR' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { link: (path('app_feature_payment')), title: 'Payment', description: 'The Payment Request API provides a browser-based method to enable users to make payments on the web, using a credit card, Apple Pay or Google Pay.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:credit-card', class: 'icon size-32 color-white', alt: 'Payment' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_wake_lock')), title: 'Wake lock', description: 'The Screen Wake Lock API enables web apps to prevent devices from dimming or locking the screen when the app needs to keep running.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-lock-portrait', class: 'icon size-32 color-white', alt: 'Wake lock' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_orientation')), title: 'Orientation', description: 'The DeviceOrientationEvent gives information about the physical orientation of the user\\'s device.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-rotation', class: 'icon size-32 color-white', alt: 'Orientation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_device_motion')), title: 'Motion', description: 'The DeviceMotionEvent gives information about the speed of changes for the position and orientation of the user\\'s device.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:3d-rotation', class: 'icon size-32 color-white', alt: 'Motion' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_network_info')), title: 'Network info', description: 'The NetworkInformation API provides information about the connection of a device, allowing web apps to adapt functionality based on network quality.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:network-check', class: 'icon size-32 color-white', alt: 'Network info' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_speech_synthesis')), title: 'Speech synthesis', description: 'Speech synthesis provides text-to-speech and allows programs to read out their text content.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:record-voice-over', class: 'icon size-32 color-white', alt: 'Speech synthesis' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_speech_recognition')), title: 'Speech recognition', description: 'Speech recognition is part of the Web Speech API and provides the ability to recognize voice context from an audio input.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:hearing', class: 'icon size-32 color-white', alt: 'Speech recognition' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_multi_touch')), title: 'Multi touch', description: 'Touch events enable web apps to capture complex touch behaviour.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:touch-app', class: 'icon size-32 color-white', alt: 'Multi touch' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_i18n')), title: 'i18n', description: 'Internationalization (i18n) enables web apps to adapt to different languages and regions.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'fluent-mdl2:locale-language', class: 'icon size-32 color-white', alt: 'i18n' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_presentation')), title: 'Presentation', description: 'The Presentation API enables web apps to display content on external screens.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ri:presentation-fill', class: 'icon size-32 color-white', alt: 'presentation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

        </ul>
    </div>

</section>", "components/Features.html.twig", "/Users/praveenmujawdiya/Documents/survos/pwa-f7/templates/components/Features.html.twig");
    }
}


/* components/Features.html.twig */
class __TwigTemplate_1fb5cbdf94a162448bd258deeed21be9___29720609431 extends Template
{
    private Source $source;
    /**
     * @var array<string, Template>
     */
    private array $macros = [];

    public function __construct(Environment $env)
    {
        parent::__construct($env);

        $this->source = $this->getSourceContext();

        $this->blocks = [
            'outer__block_fallback' => [$this, 'block_outer__block_fallback'],
            'content' => [$this, 'block_content'],
        ];
    }

    protected function doGetParent(array $context): bool|string|Template|TemplateWrapper
    {
        // line 62
        return $this->loadTemplate((isset($context["__parent__"]) || array_key_exists("__parent__", $context) ? $context["__parent__"] : (function () { throw new RuntimeError('Variable "__parent__" does not exist.', 62, $this->source); })()), "components/Features.html.twig", 62);
    }

    protected function doDisplay(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        yield from $this->getParent($context)->unwrap()->yield($context, array_merge($this->blocks, $blocks));
        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

    }

    /**
     * @return iterable<null|scalar|\Stringable>
     */
    public function block_outer__block_fallback(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        yield from [];
    }

    // line 63
    /**
     * @return iterable<null|scalar|\Stringable>
     */
    public function block_content(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        yield $this->env->getRuntime('Symfony\UX\TwigComponent\Twig\ComponentRuntime')->render("ux:icon", ["name" => "ic:baseline-fingerprint", "class" => "icon size-32 color-white", "alt" => "Authentication"]);
        yield "
                ";
        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        yield from [];
    }

    /**
     * @codeCoverageIgnore
     */
    public function getTemplateName(): string
    {
        return "components/Features.html.twig";
    }

    /**
     * @codeCoverageIgnore
     */
    public function isTraitable(): bool
    {
        return false;
    }

    /**
     * @codeCoverageIgnore
     */
    public function getDebugInfo(): array
    {
        return array (  4540 => 63,  4485 => 62,  4163 => 57,  4108 => 56,  3786 => 51,  3731 => 50,  3409 => 45,  3354 => 44,  3032 => 39,  2977 => 38,  2655 => 33,  2600 => 32,  2278 => 27,  2223 => 26,  1901 => 21,  1846 => 20,  1524 => 15,  1469 => 14,  1147 => 9,  1092 => 8,  782 => 233,  768 => 230,  763 => 227,  749 => 224,  744 => 221,  730 => 218,  725 => 215,  711 => 212,  706 => 209,  692 => 206,  687 => 203,  673 => 200,  668 => 197,  654 => 194,  649 => 191,  635 => 188,  630 => 185,  616 => 182,  611 => 179,  597 => 176,  592 => 173,  578 => 170,  573 => 167,  559 => 164,  554 => 161,  540 => 158,  535 => 155,  521 => 152,  516 => 149,  502 => 146,  497 => 143,  483 => 140,  478 => 137,  464 => 134,  459 => 131,  445 => 128,  440 => 125,  426 => 122,  421 => 119,  407 => 116,  402 => 113,  388 => 110,  383 => 107,  369 => 104,  364 => 101,  350 => 98,  345 => 95,  331 => 92,  326 => 89,  312 => 86,  307 => 83,  293 => 80,  288 => 77,  274 => 74,  269 => 71,  255 => 68,  250 => 65,  236 => 62,  231 => 59,  217 => 56,  212 => 53,  198 => 50,  193 => 47,  179 => 44,  174 => 41,  160 => 38,  155 => 35,  141 => 32,  136 => 29,  122 => 26,  117 => 23,  103 => 20,  98 => 17,  84 => 14,  79 => 11,  65 => 8,  57 => 3,  51 => 1,);
    }

    public function getSourceContext(): Source
    {
        return new Source("<section {{ attributes }}>

    <h2 class=\"block-title block-title-medium\">{{ 'homepage.demo'|trans }}</h2>
    <div class=\"list cards-list media-list inset margin-vertical-half\">
        <ul class=\"row align-items-stretch justify-content-flex-start\" style=\"column-gap: var(--f7-grid-gap);\">

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_installation')), title: 'Installation', description: 'Using the beforeinstallprompt event, a native dialog can be displayed to install a web app' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:install-mobile', class: 'icon size-32 color-white', alt: 'Install' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_offline_support')), title: 'Offline support', description: 'The Service Worker enables web apps to work offline' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:download-for-offline', class: 'icon size-32 color-white', alt: 'Offline support' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_notifications')), title: 'Notifications', description: 'The Notifications API enables web apps to display notifications, even when the app is not active.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:notifications-outline', class: 'icon size-32 color-white', alt: 'Notifications' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_shortcuts')), title: 'Shortcuts', description: 'Shortcuts provide quick access to pages in your app from the app icon.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'tdesign:mobile-shortcut-filled', class: 'icon size-32 color-white', alt: 'Shortcuts' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_view_transition')), title: 'View Transitions', description: 'The View Transitions API enables app-like transitions between pages.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:auto-awesome-motion', class: 'icon size-32 color-white', alt: 'View Transitions' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_geolocation')), title: 'Geolocation', description: 'The Geolocation API enables users to share their location with web apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-gps-fixed', class: 'icon size-32 color-white', alt: 'Geolocation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_media_capture')), title: 'Media capture', description: 'Media capture allows web apps to use the camera and microphone of a device' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:videocam', class: 'icon size-32 color-white', alt: 'Media capture' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-deeporange\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_picture_in_picture')), title: 'Picture-in-picture', description: 'The Document Picture-in-Picture API makes it possible to open an always-on-top window that can be populated with arbitrary HTML content.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:picture-in-picture', class: 'icon size-32 color-white', alt: 'Picture-in-picture' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_file_system')), title: 'File System', description: 'Access to the file system of the user\\'s device' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-insert-drive-file', class: 'icon size-32 color-white', alt: 'File System' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_authentication')), title: 'Authentication', description: 'Web Authentication API (WebAuthn) enables passwordless authentication through your device\\'s fingerprint reader or an external USB Security Key.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-fingerprint', class: 'icon size-32 color-white', alt: 'Authentication' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_protocol_handling')), title: 'Protocol Handling', description: 'Protocol handling enables web apps to register their ability to open links with particular URL schemes.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:language', class: 'icon size-32 color-white', alt: 'Protocol Handling' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_file_handling')), title: 'File Handling API', description: 'The File Handling API enables web apps to register as file handlers with the operating system' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:folder-open', class: 'icon size-32 color-white', alt: 'File Handling API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { link: (path('app_feature_contact_picker')), title: 'Contact picker', description: 'The Contact Picker API allows web apps to select the user\\'s contacts after permission has been granted.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:account-box', class: 'icon size-32 color-white', alt: 'Contact picker' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_web_share')), title: 'Web share', description: 'The Web Share API invokes the native share mechanism of the device and allows users to share text, URLs or files.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:share', class: 'icon size-32 color-white', alt: 'Web share' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { link: (path('app_feature_barcode_detection')), title: 'Barcode detection', description: 'The Barcode Detection API detects barcodes and QR codes in images.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:qr-code-scanner', class: 'icon size-32 color-white', alt: 'Barcode detection' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { link: (path('app_feature_face_detection')), title: 'Face detection', description: 'The Shape Detection API detects faces in images.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:face', class: 'icon size-32 color-white', alt: 'Face detection' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_vibration')), title: 'Vibration', description: 'The Vibration API enables web apps to make a mobile device vibrate.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:vibration', class: 'icon size-32 color-white', alt: 'Vibration' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_audio_recording')), title: 'Audio recording', description: 'Record audio using MediaRecorder and visualize audio using Web Audio API.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:mic', class: 'icon size-32 color-white', alt: 'Audio recording' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_audio')), title: 'Audio', description: 'The Media Session API allows web apps to display controls for media playback on a device\\'s lock screen.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:round-play-circle-filled', class: 'icon size-32 color-white', alt: 'Audio' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { link: (path('app_feature_audio_session')), title: 'Audio Session API', description: 'The Audio Session API configures how audio from web apps should mix with audio from native apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:tune', class: 'icon size-32 color-white', alt: 'Audio Session API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_screen_capture')), title: 'Screen Capturing', description: 'Capture Handle and Captured Surface Control enable screen capturing web apps to remotely control captured web apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-share', class: 'icon size-32 color-white', alt: 'Screen Capturing' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_element_capture')), title: 'Element Capture', description: 'Element Capture enables screen capturing web apps to record specific HTML elements.' } %}
                    {% block content %}<img src=\"{{ asset('images/element-capture.svg') }}\" alt=\"Element capture\" />
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { link: (path('app_feature_background_sync')), title: 'Background Sync API', description: 'The Background Sync API enables web apps to defer tasks when it\\'s offline so they can be run when the network connection is restored.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:sync', class: 'icon size-32 color-white', alt: 'Background Sync API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { link: (path('app_feature_background_fetch')), title: 'Background Fetch API', description: 'The Background Fetch API enables web apps to download large files in the background even when the app is not running.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:downloading', class: 'icon size-32 color-white', alt: 'Background Fetch API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_storage')), title: 'Storage API', description: 'The Storage API enables web apps to persist structured data in the user\\'s browser.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:inventory', class: 'icon size-32 color-white', alt: 'Storage API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_bluetooth')), title: 'Bluetooth', description: 'The Web Bluetooth API enables web apps to connect to Bluetooth Low Energy (BLE) devices and read values from or write values to it.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:bluetooth', class: 'icon size-32 color-white', alt: 'Bluetooth' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_nfc')), title: 'NFC', description: 'The Web NFC API enables web apps to read and write to NFC tags.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:nfc', class: 'icon size-32 color-white', alt: 'NFC' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { link: (path('app_feature_ar_vr')), title: 'AR/VR', description: 'Augmented reality enables web apps to place virtual objects in reality.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:layers', class: 'icon size-32 color-white', alt: 'AR/VR' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { link: (path('app_feature_payment')), title: 'Payment', description: 'The Payment Request API provides a browser-based method to enable users to make payments on the web, using a credit card, Apple Pay or Google Pay.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:credit-card', class: 'icon size-32 color-white', alt: 'Payment' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_wake_lock')), title: 'Wake lock', description: 'The Screen Wake Lock API enables web apps to prevent devices from dimming or locking the screen when the app needs to keep running.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-lock-portrait', class: 'icon size-32 color-white', alt: 'Wake lock' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_orientation')), title: 'Orientation', description: 'The DeviceOrientationEvent gives information about the physical orientation of the user\\'s device.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-rotation', class: 'icon size-32 color-white', alt: 'Orientation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_device_motion')), title: 'Motion', description: 'The DeviceMotionEvent gives information about the speed of changes for the position and orientation of the user\\'s device.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:3d-rotation', class: 'icon size-32 color-white', alt: 'Motion' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_network_info')), title: 'Network info', description: 'The NetworkInformation API provides information about the connection of a device, allowing web apps to adapt functionality based on network quality.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:network-check', class: 'icon size-32 color-white', alt: 'Network info' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_speech_synthesis')), title: 'Speech synthesis', description: 'Speech synthesis provides text-to-speech and allows programs to read out their text content.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:record-voice-over', class: 'icon size-32 color-white', alt: 'Speech synthesis' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_speech_recognition')), title: 'Speech recognition', description: 'Speech recognition is part of the Web Speech API and provides the ability to recognize voice context from an audio input.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:hearing', class: 'icon size-32 color-white', alt: 'Speech recognition' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_multi_touch')), title: 'Multi touch', description: 'Touch events enable web apps to capture complex touch behaviour.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:touch-app', class: 'icon size-32 color-white', alt: 'Multi touch' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_i18n')), title: 'i18n', description: 'Internationalization (i18n) enables web apps to adapt to different languages and regions.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'fluent-mdl2:locale-language', class: 'icon size-32 color-white', alt: 'i18n' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_presentation')), title: 'Presentation', description: 'The Presentation API enables web apps to display content on external screens.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ri:presentation-fill', class: 'icon size-32 color-white', alt: 'presentation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

        </ul>
    </div>

</section>", "components/Features.html.twig", "/Users/praveenmujawdiya/Documents/survos/pwa-f7/templates/components/Features.html.twig");
    }
}


/* components/Features.html.twig */
class __TwigTemplate_1fb5cbdf94a162448bd258deeed21be9___13749381291 extends Template
{
    private Source $source;
    /**
     * @var array<string, Template>
     */
    private array $macros = [];

    public function __construct(Environment $env)
    {
        parent::__construct($env);

        $this->source = $this->getSourceContext();

        $this->blocks = [
            'outer__block_fallback' => [$this, 'block_outer__block_fallback'],
            'content' => [$this, 'block_content'],
        ];
    }

    protected function doGetParent(array $context): bool|string|Template|TemplateWrapper
    {
        // line 68
        return $this->loadTemplate((isset($context["__parent__"]) || array_key_exists("__parent__", $context) ? $context["__parent__"] : (function () { throw new RuntimeError('Variable "__parent__" does not exist.', 68, $this->source); })()), "components/Features.html.twig", 68);
    }

    protected function doDisplay(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        yield from $this->getParent($context)->unwrap()->yield($context, array_merge($this->blocks, $blocks));
        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

    }

    /**
     * @return iterable<null|scalar|\Stringable>
     */
    public function block_outer__block_fallback(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        yield from [];
    }

    // line 69
    /**
     * @return iterable<null|scalar|\Stringable>
     */
    public function block_content(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        yield $this->env->getRuntime('Symfony\UX\TwigComponent\Twig\ComponentRuntime')->render("ux:icon", ["name" => "material-symbols:language", "class" => "icon size-32 color-white", "alt" => "Protocol Handling"]);
        yield "
                ";
        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        yield from [];
    }

    /**
     * @codeCoverageIgnore
     */
    public function getTemplateName(): string
    {
        return "components/Features.html.twig";
    }

    /**
     * @codeCoverageIgnore
     */
    public function isTraitable(): bool
    {
        return false;
    }

    /**
     * @codeCoverageIgnore
     */
    public function getDebugInfo(): array
    {
        return array (  4917 => 69,  4862 => 68,  4540 => 63,  4485 => 62,  4163 => 57,  4108 => 56,  3786 => 51,  3731 => 50,  3409 => 45,  3354 => 44,  3032 => 39,  2977 => 38,  2655 => 33,  2600 => 32,  2278 => 27,  2223 => 26,  1901 => 21,  1846 => 20,  1524 => 15,  1469 => 14,  1147 => 9,  1092 => 8,  782 => 233,  768 => 230,  763 => 227,  749 => 224,  744 => 221,  730 => 218,  725 => 215,  711 => 212,  706 => 209,  692 => 206,  687 => 203,  673 => 200,  668 => 197,  654 => 194,  649 => 191,  635 => 188,  630 => 185,  616 => 182,  611 => 179,  597 => 176,  592 => 173,  578 => 170,  573 => 167,  559 => 164,  554 => 161,  540 => 158,  535 => 155,  521 => 152,  516 => 149,  502 => 146,  497 => 143,  483 => 140,  478 => 137,  464 => 134,  459 => 131,  445 => 128,  440 => 125,  426 => 122,  421 => 119,  407 => 116,  402 => 113,  388 => 110,  383 => 107,  369 => 104,  364 => 101,  350 => 98,  345 => 95,  331 => 92,  326 => 89,  312 => 86,  307 => 83,  293 => 80,  288 => 77,  274 => 74,  269 => 71,  255 => 68,  250 => 65,  236 => 62,  231 => 59,  217 => 56,  212 => 53,  198 => 50,  193 => 47,  179 => 44,  174 => 41,  160 => 38,  155 => 35,  141 => 32,  136 => 29,  122 => 26,  117 => 23,  103 => 20,  98 => 17,  84 => 14,  79 => 11,  65 => 8,  57 => 3,  51 => 1,);
    }

    public function getSourceContext(): Source
    {
        return new Source("<section {{ attributes }}>

    <h2 class=\"block-title block-title-medium\">{{ 'homepage.demo'|trans }}</h2>
    <div class=\"list cards-list media-list inset margin-vertical-half\">
        <ul class=\"row align-items-stretch justify-content-flex-start\" style=\"column-gap: var(--f7-grid-gap);\">

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_installation')), title: 'Installation', description: 'Using the beforeinstallprompt event, a native dialog can be displayed to install a web app' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:install-mobile', class: 'icon size-32 color-white', alt: 'Install' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_offline_support')), title: 'Offline support', description: 'The Service Worker enables web apps to work offline' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:download-for-offline', class: 'icon size-32 color-white', alt: 'Offline support' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_notifications')), title: 'Notifications', description: 'The Notifications API enables web apps to display notifications, even when the app is not active.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:notifications-outline', class: 'icon size-32 color-white', alt: 'Notifications' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_shortcuts')), title: 'Shortcuts', description: 'Shortcuts provide quick access to pages in your app from the app icon.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'tdesign:mobile-shortcut-filled', class: 'icon size-32 color-white', alt: 'Shortcuts' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_view_transition')), title: 'View Transitions', description: 'The View Transitions API enables app-like transitions between pages.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:auto-awesome-motion', class: 'icon size-32 color-white', alt: 'View Transitions' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_geolocation')), title: 'Geolocation', description: 'The Geolocation API enables users to share their location with web apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-gps-fixed', class: 'icon size-32 color-white', alt: 'Geolocation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_media_capture')), title: 'Media capture', description: 'Media capture allows web apps to use the camera and microphone of a device' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:videocam', class: 'icon size-32 color-white', alt: 'Media capture' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-deeporange\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_picture_in_picture')), title: 'Picture-in-picture', description: 'The Document Picture-in-Picture API makes it possible to open an always-on-top window that can be populated with arbitrary HTML content.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:picture-in-picture', class: 'icon size-32 color-white', alt: 'Picture-in-picture' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_file_system')), title: 'File System', description: 'Access to the file system of the user\\'s device' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-insert-drive-file', class: 'icon size-32 color-white', alt: 'File System' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_authentication')), title: 'Authentication', description: 'Web Authentication API (WebAuthn) enables passwordless authentication through your device\\'s fingerprint reader or an external USB Security Key.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-fingerprint', class: 'icon size-32 color-white', alt: 'Authentication' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_protocol_handling')), title: 'Protocol Handling', description: 'Protocol handling enables web apps to register their ability to open links with particular URL schemes.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:language', class: 'icon size-32 color-white', alt: 'Protocol Handling' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_file_handling')), title: 'File Handling API', description: 'The File Handling API enables web apps to register as file handlers with the operating system' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:folder-open', class: 'icon size-32 color-white', alt: 'File Handling API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { link: (path('app_feature_contact_picker')), title: 'Contact picker', description: 'The Contact Picker API allows web apps to select the user\\'s contacts after permission has been granted.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:account-box', class: 'icon size-32 color-white', alt: 'Contact picker' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_web_share')), title: 'Web share', description: 'The Web Share API invokes the native share mechanism of the device and allows users to share text, URLs or files.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:share', class: 'icon size-32 color-white', alt: 'Web share' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { link: (path('app_feature_barcode_detection')), title: 'Barcode detection', description: 'The Barcode Detection API detects barcodes and QR codes in images.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:qr-code-scanner', class: 'icon size-32 color-white', alt: 'Barcode detection' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { link: (path('app_feature_face_detection')), title: 'Face detection', description: 'The Shape Detection API detects faces in images.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:face', class: 'icon size-32 color-white', alt: 'Face detection' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_vibration')), title: 'Vibration', description: 'The Vibration API enables web apps to make a mobile device vibrate.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:vibration', class: 'icon size-32 color-white', alt: 'Vibration' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_audio_recording')), title: 'Audio recording', description: 'Record audio using MediaRecorder and visualize audio using Web Audio API.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:mic', class: 'icon size-32 color-white', alt: 'Audio recording' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_audio')), title: 'Audio', description: 'The Media Session API allows web apps to display controls for media playback on a device\\'s lock screen.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:round-play-circle-filled', class: 'icon size-32 color-white', alt: 'Audio' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { link: (path('app_feature_audio_session')), title: 'Audio Session API', description: 'The Audio Session API configures how audio from web apps should mix with audio from native apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:tune', class: 'icon size-32 color-white', alt: 'Audio Session API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_screen_capture')), title: 'Screen Capturing', description: 'Capture Handle and Captured Surface Control enable screen capturing web apps to remotely control captured web apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-share', class: 'icon size-32 color-white', alt: 'Screen Capturing' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_element_capture')), title: 'Element Capture', description: 'Element Capture enables screen capturing web apps to record specific HTML elements.' } %}
                    {% block content %}<img src=\"{{ asset('images/element-capture.svg') }}\" alt=\"Element capture\" />
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { link: (path('app_feature_background_sync')), title: 'Background Sync API', description: 'The Background Sync API enables web apps to defer tasks when it\\'s offline so they can be run when the network connection is restored.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:sync', class: 'icon size-32 color-white', alt: 'Background Sync API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { link: (path('app_feature_background_fetch')), title: 'Background Fetch API', description: 'The Background Fetch API enables web apps to download large files in the background even when the app is not running.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:downloading', class: 'icon size-32 color-white', alt: 'Background Fetch API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_storage')), title: 'Storage API', description: 'The Storage API enables web apps to persist structured data in the user\\'s browser.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:inventory', class: 'icon size-32 color-white', alt: 'Storage API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_bluetooth')), title: 'Bluetooth', description: 'The Web Bluetooth API enables web apps to connect to Bluetooth Low Energy (BLE) devices and read values from or write values to it.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:bluetooth', class: 'icon size-32 color-white', alt: 'Bluetooth' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_nfc')), title: 'NFC', description: 'The Web NFC API enables web apps to read and write to NFC tags.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:nfc', class: 'icon size-32 color-white', alt: 'NFC' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { link: (path('app_feature_ar_vr')), title: 'AR/VR', description: 'Augmented reality enables web apps to place virtual objects in reality.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:layers', class: 'icon size-32 color-white', alt: 'AR/VR' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { link: (path('app_feature_payment')), title: 'Payment', description: 'The Payment Request API provides a browser-based method to enable users to make payments on the web, using a credit card, Apple Pay or Google Pay.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:credit-card', class: 'icon size-32 color-white', alt: 'Payment' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_wake_lock')), title: 'Wake lock', description: 'The Screen Wake Lock API enables web apps to prevent devices from dimming or locking the screen when the app needs to keep running.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-lock-portrait', class: 'icon size-32 color-white', alt: 'Wake lock' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_orientation')), title: 'Orientation', description: 'The DeviceOrientationEvent gives information about the physical orientation of the user\\'s device.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-rotation', class: 'icon size-32 color-white', alt: 'Orientation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_device_motion')), title: 'Motion', description: 'The DeviceMotionEvent gives information about the speed of changes for the position and orientation of the user\\'s device.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:3d-rotation', class: 'icon size-32 color-white', alt: 'Motion' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_network_info')), title: 'Network info', description: 'The NetworkInformation API provides information about the connection of a device, allowing web apps to adapt functionality based on network quality.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:network-check', class: 'icon size-32 color-white', alt: 'Network info' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_speech_synthesis')), title: 'Speech synthesis', description: 'Speech synthesis provides text-to-speech and allows programs to read out their text content.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:record-voice-over', class: 'icon size-32 color-white', alt: 'Speech synthesis' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_speech_recognition')), title: 'Speech recognition', description: 'Speech recognition is part of the Web Speech API and provides the ability to recognize voice context from an audio input.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:hearing', class: 'icon size-32 color-white', alt: 'Speech recognition' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_multi_touch')), title: 'Multi touch', description: 'Touch events enable web apps to capture complex touch behaviour.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:touch-app', class: 'icon size-32 color-white', alt: 'Multi touch' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_i18n')), title: 'i18n', description: 'Internationalization (i18n) enables web apps to adapt to different languages and regions.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'fluent-mdl2:locale-language', class: 'icon size-32 color-white', alt: 'i18n' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_presentation')), title: 'Presentation', description: 'The Presentation API enables web apps to display content on external screens.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ri:presentation-fill', class: 'icon size-32 color-white', alt: 'presentation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

        </ul>
    </div>

</section>", "components/Features.html.twig", "/Users/praveenmujawdiya/Documents/survos/pwa-f7/templates/components/Features.html.twig");
    }
}


/* components/Features.html.twig */
class __TwigTemplate_1fb5cbdf94a162448bd258deeed21be9___10967187151 extends Template
{
    private Source $source;
    /**
     * @var array<string, Template>
     */
    private array $macros = [];

    public function __construct(Environment $env)
    {
        parent::__construct($env);

        $this->source = $this->getSourceContext();

        $this->blocks = [
            'outer__block_fallback' => [$this, 'block_outer__block_fallback'],
            'content' => [$this, 'block_content'],
        ];
    }

    protected function doGetParent(array $context): bool|string|Template|TemplateWrapper
    {
        // line 74
        return $this->loadTemplate((isset($context["__parent__"]) || array_key_exists("__parent__", $context) ? $context["__parent__"] : (function () { throw new RuntimeError('Variable "__parent__" does not exist.', 74, $this->source); })()), "components/Features.html.twig", 74);
    }

    protected function doDisplay(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        yield from $this->getParent($context)->unwrap()->yield($context, array_merge($this->blocks, $blocks));
        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

    }

    /**
     * @return iterable<null|scalar|\Stringable>
     */
    public function block_outer__block_fallback(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        yield from [];
    }

    // line 75
    /**
     * @return iterable<null|scalar|\Stringable>
     */
    public function block_content(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        yield $this->env->getRuntime('Symfony\UX\TwigComponent\Twig\ComponentRuntime')->render("ux:icon", ["name" => "material-symbols:folder-open", "class" => "icon size-32 color-white", "alt" => "File Handling API"]);
        yield "
                ";
        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        yield from [];
    }

    /**
     * @codeCoverageIgnore
     */
    public function getTemplateName(): string
    {
        return "components/Features.html.twig";
    }

    /**
     * @codeCoverageIgnore
     */
    public function isTraitable(): bool
    {
        return false;
    }

    /**
     * @codeCoverageIgnore
     */
    public function getDebugInfo(): array
    {
        return array (  5294 => 75,  5239 => 74,  4917 => 69,  4862 => 68,  4540 => 63,  4485 => 62,  4163 => 57,  4108 => 56,  3786 => 51,  3731 => 50,  3409 => 45,  3354 => 44,  3032 => 39,  2977 => 38,  2655 => 33,  2600 => 32,  2278 => 27,  2223 => 26,  1901 => 21,  1846 => 20,  1524 => 15,  1469 => 14,  1147 => 9,  1092 => 8,  782 => 233,  768 => 230,  763 => 227,  749 => 224,  744 => 221,  730 => 218,  725 => 215,  711 => 212,  706 => 209,  692 => 206,  687 => 203,  673 => 200,  668 => 197,  654 => 194,  649 => 191,  635 => 188,  630 => 185,  616 => 182,  611 => 179,  597 => 176,  592 => 173,  578 => 170,  573 => 167,  559 => 164,  554 => 161,  540 => 158,  535 => 155,  521 => 152,  516 => 149,  502 => 146,  497 => 143,  483 => 140,  478 => 137,  464 => 134,  459 => 131,  445 => 128,  440 => 125,  426 => 122,  421 => 119,  407 => 116,  402 => 113,  388 => 110,  383 => 107,  369 => 104,  364 => 101,  350 => 98,  345 => 95,  331 => 92,  326 => 89,  312 => 86,  307 => 83,  293 => 80,  288 => 77,  274 => 74,  269 => 71,  255 => 68,  250 => 65,  236 => 62,  231 => 59,  217 => 56,  212 => 53,  198 => 50,  193 => 47,  179 => 44,  174 => 41,  160 => 38,  155 => 35,  141 => 32,  136 => 29,  122 => 26,  117 => 23,  103 => 20,  98 => 17,  84 => 14,  79 => 11,  65 => 8,  57 => 3,  51 => 1,);
    }

    public function getSourceContext(): Source
    {
        return new Source("<section {{ attributes }}>

    <h2 class=\"block-title block-title-medium\">{{ 'homepage.demo'|trans }}</h2>
    <div class=\"list cards-list media-list inset margin-vertical-half\">
        <ul class=\"row align-items-stretch justify-content-flex-start\" style=\"column-gap: var(--f7-grid-gap);\">

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_installation')), title: 'Installation', description: 'Using the beforeinstallprompt event, a native dialog can be displayed to install a web app' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:install-mobile', class: 'icon size-32 color-white', alt: 'Install' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_offline_support')), title: 'Offline support', description: 'The Service Worker enables web apps to work offline' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:download-for-offline', class: 'icon size-32 color-white', alt: 'Offline support' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_notifications')), title: 'Notifications', description: 'The Notifications API enables web apps to display notifications, even when the app is not active.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:notifications-outline', class: 'icon size-32 color-white', alt: 'Notifications' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_shortcuts')), title: 'Shortcuts', description: 'Shortcuts provide quick access to pages in your app from the app icon.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'tdesign:mobile-shortcut-filled', class: 'icon size-32 color-white', alt: 'Shortcuts' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_view_transition')), title: 'View Transitions', description: 'The View Transitions API enables app-like transitions between pages.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:auto-awesome-motion', class: 'icon size-32 color-white', alt: 'View Transitions' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_geolocation')), title: 'Geolocation', description: 'The Geolocation API enables users to share their location with web apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-gps-fixed', class: 'icon size-32 color-white', alt: 'Geolocation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_media_capture')), title: 'Media capture', description: 'Media capture allows web apps to use the camera and microphone of a device' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:videocam', class: 'icon size-32 color-white', alt: 'Media capture' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-deeporange\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_picture_in_picture')), title: 'Picture-in-picture', description: 'The Document Picture-in-Picture API makes it possible to open an always-on-top window that can be populated with arbitrary HTML content.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:picture-in-picture', class: 'icon size-32 color-white', alt: 'Picture-in-picture' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_file_system')), title: 'File System', description: 'Access to the file system of the user\\'s device' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-insert-drive-file', class: 'icon size-32 color-white', alt: 'File System' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_authentication')), title: 'Authentication', description: 'Web Authentication API (WebAuthn) enables passwordless authentication through your device\\'s fingerprint reader or an external USB Security Key.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-fingerprint', class: 'icon size-32 color-white', alt: 'Authentication' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_protocol_handling')), title: 'Protocol Handling', description: 'Protocol handling enables web apps to register their ability to open links with particular URL schemes.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:language', class: 'icon size-32 color-white', alt: 'Protocol Handling' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_file_handling')), title: 'File Handling API', description: 'The File Handling API enables web apps to register as file handlers with the operating system' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:folder-open', class: 'icon size-32 color-white', alt: 'File Handling API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { link: (path('app_feature_contact_picker')), title: 'Contact picker', description: 'The Contact Picker API allows web apps to select the user\\'s contacts after permission has been granted.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:account-box', class: 'icon size-32 color-white', alt: 'Contact picker' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_web_share')), title: 'Web share', description: 'The Web Share API invokes the native share mechanism of the device and allows users to share text, URLs or files.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:share', class: 'icon size-32 color-white', alt: 'Web share' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { link: (path('app_feature_barcode_detection')), title: 'Barcode detection', description: 'The Barcode Detection API detects barcodes and QR codes in images.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:qr-code-scanner', class: 'icon size-32 color-white', alt: 'Barcode detection' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { link: (path('app_feature_face_detection')), title: 'Face detection', description: 'The Shape Detection API detects faces in images.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:face', class: 'icon size-32 color-white', alt: 'Face detection' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_vibration')), title: 'Vibration', description: 'The Vibration API enables web apps to make a mobile device vibrate.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:vibration', class: 'icon size-32 color-white', alt: 'Vibration' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_audio_recording')), title: 'Audio recording', description: 'Record audio using MediaRecorder and visualize audio using Web Audio API.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:mic', class: 'icon size-32 color-white', alt: 'Audio recording' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_audio')), title: 'Audio', description: 'The Media Session API allows web apps to display controls for media playback on a device\\'s lock screen.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:round-play-circle-filled', class: 'icon size-32 color-white', alt: 'Audio' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { link: (path('app_feature_audio_session')), title: 'Audio Session API', description: 'The Audio Session API configures how audio from web apps should mix with audio from native apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:tune', class: 'icon size-32 color-white', alt: 'Audio Session API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_screen_capture')), title: 'Screen Capturing', description: 'Capture Handle and Captured Surface Control enable screen capturing web apps to remotely control captured web apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-share', class: 'icon size-32 color-white', alt: 'Screen Capturing' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_element_capture')), title: 'Element Capture', description: 'Element Capture enables screen capturing web apps to record specific HTML elements.' } %}
                    {% block content %}<img src=\"{{ asset('images/element-capture.svg') }}\" alt=\"Element capture\" />
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { link: (path('app_feature_background_sync')), title: 'Background Sync API', description: 'The Background Sync API enables web apps to defer tasks when it\\'s offline so they can be run when the network connection is restored.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:sync', class: 'icon size-32 color-white', alt: 'Background Sync API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { link: (path('app_feature_background_fetch')), title: 'Background Fetch API', description: 'The Background Fetch API enables web apps to download large files in the background even when the app is not running.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:downloading', class: 'icon size-32 color-white', alt: 'Background Fetch API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_storage')), title: 'Storage API', description: 'The Storage API enables web apps to persist structured data in the user\\'s browser.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:inventory', class: 'icon size-32 color-white', alt: 'Storage API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_bluetooth')), title: 'Bluetooth', description: 'The Web Bluetooth API enables web apps to connect to Bluetooth Low Energy (BLE) devices and read values from or write values to it.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:bluetooth', class: 'icon size-32 color-white', alt: 'Bluetooth' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_nfc')), title: 'NFC', description: 'The Web NFC API enables web apps to read and write to NFC tags.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:nfc', class: 'icon size-32 color-white', alt: 'NFC' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { link: (path('app_feature_ar_vr')), title: 'AR/VR', description: 'Augmented reality enables web apps to place virtual objects in reality.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:layers', class: 'icon size-32 color-white', alt: 'AR/VR' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { link: (path('app_feature_payment')), title: 'Payment', description: 'The Payment Request API provides a browser-based method to enable users to make payments on the web, using a credit card, Apple Pay or Google Pay.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:credit-card', class: 'icon size-32 color-white', alt: 'Payment' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_wake_lock')), title: 'Wake lock', description: 'The Screen Wake Lock API enables web apps to prevent devices from dimming or locking the screen when the app needs to keep running.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-lock-portrait', class: 'icon size-32 color-white', alt: 'Wake lock' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_orientation')), title: 'Orientation', description: 'The DeviceOrientationEvent gives information about the physical orientation of the user\\'s device.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-rotation', class: 'icon size-32 color-white', alt: 'Orientation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_device_motion')), title: 'Motion', description: 'The DeviceMotionEvent gives information about the speed of changes for the position and orientation of the user\\'s device.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:3d-rotation', class: 'icon size-32 color-white', alt: 'Motion' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_network_info')), title: 'Network info', description: 'The NetworkInformation API provides information about the connection of a device, allowing web apps to adapt functionality based on network quality.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:network-check', class: 'icon size-32 color-white', alt: 'Network info' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_speech_synthesis')), title: 'Speech synthesis', description: 'Speech synthesis provides text-to-speech and allows programs to read out their text content.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:record-voice-over', class: 'icon size-32 color-white', alt: 'Speech synthesis' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_speech_recognition')), title: 'Speech recognition', description: 'Speech recognition is part of the Web Speech API and provides the ability to recognize voice context from an audio input.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:hearing', class: 'icon size-32 color-white', alt: 'Speech recognition' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_multi_touch')), title: 'Multi touch', description: 'Touch events enable web apps to capture complex touch behaviour.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:touch-app', class: 'icon size-32 color-white', alt: 'Multi touch' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_i18n')), title: 'i18n', description: 'Internationalization (i18n) enables web apps to adapt to different languages and regions.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'fluent-mdl2:locale-language', class: 'icon size-32 color-white', alt: 'i18n' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_presentation')), title: 'Presentation', description: 'The Presentation API enables web apps to display content on external screens.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ri:presentation-fill', class: 'icon size-32 color-white', alt: 'presentation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

        </ul>
    </div>

</section>", "components/Features.html.twig", "/Users/praveenmujawdiya/Documents/survos/pwa-f7/templates/components/Features.html.twig");
    }
}


/* components/Features.html.twig */
class __TwigTemplate_1fb5cbdf94a162448bd258deeed21be9___32492261571 extends Template
{
    private Source $source;
    /**
     * @var array<string, Template>
     */
    private array $macros = [];

    public function __construct(Environment $env)
    {
        parent::__construct($env);

        $this->source = $this->getSourceContext();

        $this->blocks = [
            'outer__block_fallback' => [$this, 'block_outer__block_fallback'],
            'content' => [$this, 'block_content'],
        ];
    }

    protected function doGetParent(array $context): bool|string|Template|TemplateWrapper
    {
        // line 80
        return $this->loadTemplate((isset($context["__parent__"]) || array_key_exists("__parent__", $context) ? $context["__parent__"] : (function () { throw new RuntimeError('Variable "__parent__" does not exist.', 80, $this->source); })()), "components/Features.html.twig", 80);
    }

    protected function doDisplay(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        yield from $this->getParent($context)->unwrap()->yield($context, array_merge($this->blocks, $blocks));
        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

    }

    /**
     * @return iterable<null|scalar|\Stringable>
     */
    public function block_outer__block_fallback(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        yield from [];
    }

    // line 81
    /**
     * @return iterable<null|scalar|\Stringable>
     */
    public function block_content(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        yield $this->env->getRuntime('Symfony\UX\TwigComponent\Twig\ComponentRuntime')->render("ux:icon", ["name" => "material-symbols:account-box", "class" => "icon size-32 color-white", "alt" => "Contact picker"]);
        yield "
                ";
        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        yield from [];
    }

    /**
     * @codeCoverageIgnore
     */
    public function getTemplateName(): string
    {
        return "components/Features.html.twig";
    }

    /**
     * @codeCoverageIgnore
     */
    public function isTraitable(): bool
    {
        return false;
    }

    /**
     * @codeCoverageIgnore
     */
    public function getDebugInfo(): array
    {
        return array (  5671 => 81,  5616 => 80,  5294 => 75,  5239 => 74,  4917 => 69,  4862 => 68,  4540 => 63,  4485 => 62,  4163 => 57,  4108 => 56,  3786 => 51,  3731 => 50,  3409 => 45,  3354 => 44,  3032 => 39,  2977 => 38,  2655 => 33,  2600 => 32,  2278 => 27,  2223 => 26,  1901 => 21,  1846 => 20,  1524 => 15,  1469 => 14,  1147 => 9,  1092 => 8,  782 => 233,  768 => 230,  763 => 227,  749 => 224,  744 => 221,  730 => 218,  725 => 215,  711 => 212,  706 => 209,  692 => 206,  687 => 203,  673 => 200,  668 => 197,  654 => 194,  649 => 191,  635 => 188,  630 => 185,  616 => 182,  611 => 179,  597 => 176,  592 => 173,  578 => 170,  573 => 167,  559 => 164,  554 => 161,  540 => 158,  535 => 155,  521 => 152,  516 => 149,  502 => 146,  497 => 143,  483 => 140,  478 => 137,  464 => 134,  459 => 131,  445 => 128,  440 => 125,  426 => 122,  421 => 119,  407 => 116,  402 => 113,  388 => 110,  383 => 107,  369 => 104,  364 => 101,  350 => 98,  345 => 95,  331 => 92,  326 => 89,  312 => 86,  307 => 83,  293 => 80,  288 => 77,  274 => 74,  269 => 71,  255 => 68,  250 => 65,  236 => 62,  231 => 59,  217 => 56,  212 => 53,  198 => 50,  193 => 47,  179 => 44,  174 => 41,  160 => 38,  155 => 35,  141 => 32,  136 => 29,  122 => 26,  117 => 23,  103 => 20,  98 => 17,  84 => 14,  79 => 11,  65 => 8,  57 => 3,  51 => 1,);
    }

    public function getSourceContext(): Source
    {
        return new Source("<section {{ attributes }}>

    <h2 class=\"block-title block-title-medium\">{{ 'homepage.demo'|trans }}</h2>
    <div class=\"list cards-list media-list inset margin-vertical-half\">
        <ul class=\"row align-items-stretch justify-content-flex-start\" style=\"column-gap: var(--f7-grid-gap);\">

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_installation')), title: 'Installation', description: 'Using the beforeinstallprompt event, a native dialog can be displayed to install a web app' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:install-mobile', class: 'icon size-32 color-white', alt: 'Install' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_offline_support')), title: 'Offline support', description: 'The Service Worker enables web apps to work offline' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:download-for-offline', class: 'icon size-32 color-white', alt: 'Offline support' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_notifications')), title: 'Notifications', description: 'The Notifications API enables web apps to display notifications, even when the app is not active.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:notifications-outline', class: 'icon size-32 color-white', alt: 'Notifications' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_shortcuts')), title: 'Shortcuts', description: 'Shortcuts provide quick access to pages in your app from the app icon.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'tdesign:mobile-shortcut-filled', class: 'icon size-32 color-white', alt: 'Shortcuts' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_view_transition')), title: 'View Transitions', description: 'The View Transitions API enables app-like transitions between pages.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:auto-awesome-motion', class: 'icon size-32 color-white', alt: 'View Transitions' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_geolocation')), title: 'Geolocation', description: 'The Geolocation API enables users to share their location with web apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-gps-fixed', class: 'icon size-32 color-white', alt: 'Geolocation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_media_capture')), title: 'Media capture', description: 'Media capture allows web apps to use the camera and microphone of a device' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:videocam', class: 'icon size-32 color-white', alt: 'Media capture' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-deeporange\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_picture_in_picture')), title: 'Picture-in-picture', description: 'The Document Picture-in-Picture API makes it possible to open an always-on-top window that can be populated with arbitrary HTML content.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:picture-in-picture', class: 'icon size-32 color-white', alt: 'Picture-in-picture' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_file_system')), title: 'File System', description: 'Access to the file system of the user\\'s device' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-insert-drive-file', class: 'icon size-32 color-white', alt: 'File System' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_authentication')), title: 'Authentication', description: 'Web Authentication API (WebAuthn) enables passwordless authentication through your device\\'s fingerprint reader or an external USB Security Key.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-fingerprint', class: 'icon size-32 color-white', alt: 'Authentication' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_protocol_handling')), title: 'Protocol Handling', description: 'Protocol handling enables web apps to register their ability to open links with particular URL schemes.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:language', class: 'icon size-32 color-white', alt: 'Protocol Handling' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_file_handling')), title: 'File Handling API', description: 'The File Handling API enables web apps to register as file handlers with the operating system' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:folder-open', class: 'icon size-32 color-white', alt: 'File Handling API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { link: (path('app_feature_contact_picker')), title: 'Contact picker', description: 'The Contact Picker API allows web apps to select the user\\'s contacts after permission has been granted.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:account-box', class: 'icon size-32 color-white', alt: 'Contact picker' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_web_share')), title: 'Web share', description: 'The Web Share API invokes the native share mechanism of the device and allows users to share text, URLs or files.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:share', class: 'icon size-32 color-white', alt: 'Web share' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { link: (path('app_feature_barcode_detection')), title: 'Barcode detection', description: 'The Barcode Detection API detects barcodes and QR codes in images.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:qr-code-scanner', class: 'icon size-32 color-white', alt: 'Barcode detection' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { link: (path('app_feature_face_detection')), title: 'Face detection', description: 'The Shape Detection API detects faces in images.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:face', class: 'icon size-32 color-white', alt: 'Face detection' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_vibration')), title: 'Vibration', description: 'The Vibration API enables web apps to make a mobile device vibrate.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:vibration', class: 'icon size-32 color-white', alt: 'Vibration' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_audio_recording')), title: 'Audio recording', description: 'Record audio using MediaRecorder and visualize audio using Web Audio API.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:mic', class: 'icon size-32 color-white', alt: 'Audio recording' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_audio')), title: 'Audio', description: 'The Media Session API allows web apps to display controls for media playback on a device\\'s lock screen.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:round-play-circle-filled', class: 'icon size-32 color-white', alt: 'Audio' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { link: (path('app_feature_audio_session')), title: 'Audio Session API', description: 'The Audio Session API configures how audio from web apps should mix with audio from native apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:tune', class: 'icon size-32 color-white', alt: 'Audio Session API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_screen_capture')), title: 'Screen Capturing', description: 'Capture Handle and Captured Surface Control enable screen capturing web apps to remotely control captured web apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-share', class: 'icon size-32 color-white', alt: 'Screen Capturing' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_element_capture')), title: 'Element Capture', description: 'Element Capture enables screen capturing web apps to record specific HTML elements.' } %}
                    {% block content %}<img src=\"{{ asset('images/element-capture.svg') }}\" alt=\"Element capture\" />
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { link: (path('app_feature_background_sync')), title: 'Background Sync API', description: 'The Background Sync API enables web apps to defer tasks when it\\'s offline so they can be run when the network connection is restored.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:sync', class: 'icon size-32 color-white', alt: 'Background Sync API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { link: (path('app_feature_background_fetch')), title: 'Background Fetch API', description: 'The Background Fetch API enables web apps to download large files in the background even when the app is not running.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:downloading', class: 'icon size-32 color-white', alt: 'Background Fetch API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_storage')), title: 'Storage API', description: 'The Storage API enables web apps to persist structured data in the user\\'s browser.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:inventory', class: 'icon size-32 color-white', alt: 'Storage API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_bluetooth')), title: 'Bluetooth', description: 'The Web Bluetooth API enables web apps to connect to Bluetooth Low Energy (BLE) devices and read values from or write values to it.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:bluetooth', class: 'icon size-32 color-white', alt: 'Bluetooth' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_nfc')), title: 'NFC', description: 'The Web NFC API enables web apps to read and write to NFC tags.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:nfc', class: 'icon size-32 color-white', alt: 'NFC' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { link: (path('app_feature_ar_vr')), title: 'AR/VR', description: 'Augmented reality enables web apps to place virtual objects in reality.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:layers', class: 'icon size-32 color-white', alt: 'AR/VR' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { link: (path('app_feature_payment')), title: 'Payment', description: 'The Payment Request API provides a browser-based method to enable users to make payments on the web, using a credit card, Apple Pay or Google Pay.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:credit-card', class: 'icon size-32 color-white', alt: 'Payment' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_wake_lock')), title: 'Wake lock', description: 'The Screen Wake Lock API enables web apps to prevent devices from dimming or locking the screen when the app needs to keep running.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-lock-portrait', class: 'icon size-32 color-white', alt: 'Wake lock' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_orientation')), title: 'Orientation', description: 'The DeviceOrientationEvent gives information about the physical orientation of the user\\'s device.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-rotation', class: 'icon size-32 color-white', alt: 'Orientation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_device_motion')), title: 'Motion', description: 'The DeviceMotionEvent gives information about the speed of changes for the position and orientation of the user\\'s device.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:3d-rotation', class: 'icon size-32 color-white', alt: 'Motion' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_network_info')), title: 'Network info', description: 'The NetworkInformation API provides information about the connection of a device, allowing web apps to adapt functionality based on network quality.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:network-check', class: 'icon size-32 color-white', alt: 'Network info' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_speech_synthesis')), title: 'Speech synthesis', description: 'Speech synthesis provides text-to-speech and allows programs to read out their text content.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:record-voice-over', class: 'icon size-32 color-white', alt: 'Speech synthesis' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_speech_recognition')), title: 'Speech recognition', description: 'Speech recognition is part of the Web Speech API and provides the ability to recognize voice context from an audio input.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:hearing', class: 'icon size-32 color-white', alt: 'Speech recognition' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_multi_touch')), title: 'Multi touch', description: 'Touch events enable web apps to capture complex touch behaviour.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:touch-app', class: 'icon size-32 color-white', alt: 'Multi touch' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_i18n')), title: 'i18n', description: 'Internationalization (i18n) enables web apps to adapt to different languages and regions.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'fluent-mdl2:locale-language', class: 'icon size-32 color-white', alt: 'i18n' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_presentation')), title: 'Presentation', description: 'The Presentation API enables web apps to display content on external screens.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ri:presentation-fill', class: 'icon size-32 color-white', alt: 'presentation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

        </ul>
    </div>

</section>", "components/Features.html.twig", "/Users/praveenmujawdiya/Documents/survos/pwa-f7/templates/components/Features.html.twig");
    }
}


/* components/Features.html.twig */
class __TwigTemplate_1fb5cbdf94a162448bd258deeed21be9___6842543601 extends Template
{
    private Source $source;
    /**
     * @var array<string, Template>
     */
    private array $macros = [];

    public function __construct(Environment $env)
    {
        parent::__construct($env);

        $this->source = $this->getSourceContext();

        $this->blocks = [
            'outer__block_fallback' => [$this, 'block_outer__block_fallback'],
            'content' => [$this, 'block_content'],
        ];
    }

    protected function doGetParent(array $context): bool|string|Template|TemplateWrapper
    {
        // line 86
        return $this->loadTemplate((isset($context["__parent__"]) || array_key_exists("__parent__", $context) ? $context["__parent__"] : (function () { throw new RuntimeError('Variable "__parent__" does not exist.', 86, $this->source); })()), "components/Features.html.twig", 86);
    }

    protected function doDisplay(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        yield from $this->getParent($context)->unwrap()->yield($context, array_merge($this->blocks, $blocks));
        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

    }

    /**
     * @return iterable<null|scalar|\Stringable>
     */
    public function block_outer__block_fallback(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        yield from [];
    }

    // line 87
    /**
     * @return iterable<null|scalar|\Stringable>
     */
    public function block_content(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        yield $this->env->getRuntime('Symfony\UX\TwigComponent\Twig\ComponentRuntime')->render("ux:icon", ["name" => "material-symbols:share", "class" => "icon size-32 color-white", "alt" => "Web share"]);
        yield "
                ";
        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        yield from [];
    }

    /**
     * @codeCoverageIgnore
     */
    public function getTemplateName(): string
    {
        return "components/Features.html.twig";
    }

    /**
     * @codeCoverageIgnore
     */
    public function isTraitable(): bool
    {
        return false;
    }

    /**
     * @codeCoverageIgnore
     */
    public function getDebugInfo(): array
    {
        return array (  6048 => 87,  5993 => 86,  5671 => 81,  5616 => 80,  5294 => 75,  5239 => 74,  4917 => 69,  4862 => 68,  4540 => 63,  4485 => 62,  4163 => 57,  4108 => 56,  3786 => 51,  3731 => 50,  3409 => 45,  3354 => 44,  3032 => 39,  2977 => 38,  2655 => 33,  2600 => 32,  2278 => 27,  2223 => 26,  1901 => 21,  1846 => 20,  1524 => 15,  1469 => 14,  1147 => 9,  1092 => 8,  782 => 233,  768 => 230,  763 => 227,  749 => 224,  744 => 221,  730 => 218,  725 => 215,  711 => 212,  706 => 209,  692 => 206,  687 => 203,  673 => 200,  668 => 197,  654 => 194,  649 => 191,  635 => 188,  630 => 185,  616 => 182,  611 => 179,  597 => 176,  592 => 173,  578 => 170,  573 => 167,  559 => 164,  554 => 161,  540 => 158,  535 => 155,  521 => 152,  516 => 149,  502 => 146,  497 => 143,  483 => 140,  478 => 137,  464 => 134,  459 => 131,  445 => 128,  440 => 125,  426 => 122,  421 => 119,  407 => 116,  402 => 113,  388 => 110,  383 => 107,  369 => 104,  364 => 101,  350 => 98,  345 => 95,  331 => 92,  326 => 89,  312 => 86,  307 => 83,  293 => 80,  288 => 77,  274 => 74,  269 => 71,  255 => 68,  250 => 65,  236 => 62,  231 => 59,  217 => 56,  212 => 53,  198 => 50,  193 => 47,  179 => 44,  174 => 41,  160 => 38,  155 => 35,  141 => 32,  136 => 29,  122 => 26,  117 => 23,  103 => 20,  98 => 17,  84 => 14,  79 => 11,  65 => 8,  57 => 3,  51 => 1,);
    }

    public function getSourceContext(): Source
    {
        return new Source("<section {{ attributes }}>

    <h2 class=\"block-title block-title-medium\">{{ 'homepage.demo'|trans }}</h2>
    <div class=\"list cards-list media-list inset margin-vertical-half\">
        <ul class=\"row align-items-stretch justify-content-flex-start\" style=\"column-gap: var(--f7-grid-gap);\">

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_installation')), title: 'Installation', description: 'Using the beforeinstallprompt event, a native dialog can be displayed to install a web app' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:install-mobile', class: 'icon size-32 color-white', alt: 'Install' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_offline_support')), title: 'Offline support', description: 'The Service Worker enables web apps to work offline' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:download-for-offline', class: 'icon size-32 color-white', alt: 'Offline support' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_notifications')), title: 'Notifications', description: 'The Notifications API enables web apps to display notifications, even when the app is not active.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:notifications-outline', class: 'icon size-32 color-white', alt: 'Notifications' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_shortcuts')), title: 'Shortcuts', description: 'Shortcuts provide quick access to pages in your app from the app icon.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'tdesign:mobile-shortcut-filled', class: 'icon size-32 color-white', alt: 'Shortcuts' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_view_transition')), title: 'View Transitions', description: 'The View Transitions API enables app-like transitions between pages.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:auto-awesome-motion', class: 'icon size-32 color-white', alt: 'View Transitions' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_geolocation')), title: 'Geolocation', description: 'The Geolocation API enables users to share their location with web apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-gps-fixed', class: 'icon size-32 color-white', alt: 'Geolocation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_media_capture')), title: 'Media capture', description: 'Media capture allows web apps to use the camera and microphone of a device' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:videocam', class: 'icon size-32 color-white', alt: 'Media capture' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-deeporange\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_picture_in_picture')), title: 'Picture-in-picture', description: 'The Document Picture-in-Picture API makes it possible to open an always-on-top window that can be populated with arbitrary HTML content.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:picture-in-picture', class: 'icon size-32 color-white', alt: 'Picture-in-picture' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_file_system')), title: 'File System', description: 'Access to the file system of the user\\'s device' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-insert-drive-file', class: 'icon size-32 color-white', alt: 'File System' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_authentication')), title: 'Authentication', description: 'Web Authentication API (WebAuthn) enables passwordless authentication through your device\\'s fingerprint reader or an external USB Security Key.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-fingerprint', class: 'icon size-32 color-white', alt: 'Authentication' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_protocol_handling')), title: 'Protocol Handling', description: 'Protocol handling enables web apps to register their ability to open links with particular URL schemes.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:language', class: 'icon size-32 color-white', alt: 'Protocol Handling' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_file_handling')), title: 'File Handling API', description: 'The File Handling API enables web apps to register as file handlers with the operating system' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:folder-open', class: 'icon size-32 color-white', alt: 'File Handling API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { link: (path('app_feature_contact_picker')), title: 'Contact picker', description: 'The Contact Picker API allows web apps to select the user\\'s contacts after permission has been granted.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:account-box', class: 'icon size-32 color-white', alt: 'Contact picker' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_web_share')), title: 'Web share', description: 'The Web Share API invokes the native share mechanism of the device and allows users to share text, URLs or files.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:share', class: 'icon size-32 color-white', alt: 'Web share' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { link: (path('app_feature_barcode_detection')), title: 'Barcode detection', description: 'The Barcode Detection API detects barcodes and QR codes in images.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:qr-code-scanner', class: 'icon size-32 color-white', alt: 'Barcode detection' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { link: (path('app_feature_face_detection')), title: 'Face detection', description: 'The Shape Detection API detects faces in images.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:face', class: 'icon size-32 color-white', alt: 'Face detection' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_vibration')), title: 'Vibration', description: 'The Vibration API enables web apps to make a mobile device vibrate.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:vibration', class: 'icon size-32 color-white', alt: 'Vibration' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_audio_recording')), title: 'Audio recording', description: 'Record audio using MediaRecorder and visualize audio using Web Audio API.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:mic', class: 'icon size-32 color-white', alt: 'Audio recording' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_audio')), title: 'Audio', description: 'The Media Session API allows web apps to display controls for media playback on a device\\'s lock screen.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:round-play-circle-filled', class: 'icon size-32 color-white', alt: 'Audio' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { link: (path('app_feature_audio_session')), title: 'Audio Session API', description: 'The Audio Session API configures how audio from web apps should mix with audio from native apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:tune', class: 'icon size-32 color-white', alt: 'Audio Session API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_screen_capture')), title: 'Screen Capturing', description: 'Capture Handle and Captured Surface Control enable screen capturing web apps to remotely control captured web apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-share', class: 'icon size-32 color-white', alt: 'Screen Capturing' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_element_capture')), title: 'Element Capture', description: 'Element Capture enables screen capturing web apps to record specific HTML elements.' } %}
                    {% block content %}<img src=\"{{ asset('images/element-capture.svg') }}\" alt=\"Element capture\" />
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { link: (path('app_feature_background_sync')), title: 'Background Sync API', description: 'The Background Sync API enables web apps to defer tasks when it\\'s offline so they can be run when the network connection is restored.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:sync', class: 'icon size-32 color-white', alt: 'Background Sync API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { link: (path('app_feature_background_fetch')), title: 'Background Fetch API', description: 'The Background Fetch API enables web apps to download large files in the background even when the app is not running.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:downloading', class: 'icon size-32 color-white', alt: 'Background Fetch API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_storage')), title: 'Storage API', description: 'The Storage API enables web apps to persist structured data in the user\\'s browser.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:inventory', class: 'icon size-32 color-white', alt: 'Storage API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_bluetooth')), title: 'Bluetooth', description: 'The Web Bluetooth API enables web apps to connect to Bluetooth Low Energy (BLE) devices and read values from or write values to it.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:bluetooth', class: 'icon size-32 color-white', alt: 'Bluetooth' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_nfc')), title: 'NFC', description: 'The Web NFC API enables web apps to read and write to NFC tags.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:nfc', class: 'icon size-32 color-white', alt: 'NFC' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { link: (path('app_feature_ar_vr')), title: 'AR/VR', description: 'Augmented reality enables web apps to place virtual objects in reality.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:layers', class: 'icon size-32 color-white', alt: 'AR/VR' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { link: (path('app_feature_payment')), title: 'Payment', description: 'The Payment Request API provides a browser-based method to enable users to make payments on the web, using a credit card, Apple Pay or Google Pay.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:credit-card', class: 'icon size-32 color-white', alt: 'Payment' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_wake_lock')), title: 'Wake lock', description: 'The Screen Wake Lock API enables web apps to prevent devices from dimming or locking the screen when the app needs to keep running.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-lock-portrait', class: 'icon size-32 color-white', alt: 'Wake lock' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_orientation')), title: 'Orientation', description: 'The DeviceOrientationEvent gives information about the physical orientation of the user\\'s device.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-rotation', class: 'icon size-32 color-white', alt: 'Orientation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_device_motion')), title: 'Motion', description: 'The DeviceMotionEvent gives information about the speed of changes for the position and orientation of the user\\'s device.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:3d-rotation', class: 'icon size-32 color-white', alt: 'Motion' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_network_info')), title: 'Network info', description: 'The NetworkInformation API provides information about the connection of a device, allowing web apps to adapt functionality based on network quality.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:network-check', class: 'icon size-32 color-white', alt: 'Network info' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_speech_synthesis')), title: 'Speech synthesis', description: 'Speech synthesis provides text-to-speech and allows programs to read out their text content.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:record-voice-over', class: 'icon size-32 color-white', alt: 'Speech synthesis' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_speech_recognition')), title: 'Speech recognition', description: 'Speech recognition is part of the Web Speech API and provides the ability to recognize voice context from an audio input.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:hearing', class: 'icon size-32 color-white', alt: 'Speech recognition' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_multi_touch')), title: 'Multi touch', description: 'Touch events enable web apps to capture complex touch behaviour.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:touch-app', class: 'icon size-32 color-white', alt: 'Multi touch' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_i18n')), title: 'i18n', description: 'Internationalization (i18n) enables web apps to adapt to different languages and regions.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'fluent-mdl2:locale-language', class: 'icon size-32 color-white', alt: 'i18n' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_presentation')), title: 'Presentation', description: 'The Presentation API enables web apps to display content on external screens.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ri:presentation-fill', class: 'icon size-32 color-white', alt: 'presentation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

        </ul>
    </div>

</section>", "components/Features.html.twig", "/Users/praveenmujawdiya/Documents/survos/pwa-f7/templates/components/Features.html.twig");
    }
}


/* components/Features.html.twig */
class __TwigTemplate_1fb5cbdf94a162448bd258deeed21be9___9184260481 extends Template
{
    private Source $source;
    /**
     * @var array<string, Template>
     */
    private array $macros = [];

    public function __construct(Environment $env)
    {
        parent::__construct($env);

        $this->source = $this->getSourceContext();

        $this->blocks = [
            'outer__block_fallback' => [$this, 'block_outer__block_fallback'],
            'content' => [$this, 'block_content'],
        ];
    }

    protected function doGetParent(array $context): bool|string|Template|TemplateWrapper
    {
        // line 92
        return $this->loadTemplate((isset($context["__parent__"]) || array_key_exists("__parent__", $context) ? $context["__parent__"] : (function () { throw new RuntimeError('Variable "__parent__" does not exist.', 92, $this->source); })()), "components/Features.html.twig", 92);
    }

    protected function doDisplay(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        yield from $this->getParent($context)->unwrap()->yield($context, array_merge($this->blocks, $blocks));
        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

    }

    /**
     * @return iterable<null|scalar|\Stringable>
     */
    public function block_outer__block_fallback(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        yield from [];
    }

    // line 93
    /**
     * @return iterable<null|scalar|\Stringable>
     */
    public function block_content(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        yield $this->env->getRuntime('Symfony\UX\TwigComponent\Twig\ComponentRuntime')->render("ux:icon", ["name" => "material-symbols:qr-code-scanner", "class" => "icon size-32 color-white", "alt" => "Barcode detection"]);
        yield "
                ";
        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        yield from [];
    }

    /**
     * @codeCoverageIgnore
     */
    public function getTemplateName(): string
    {
        return "components/Features.html.twig";
    }

    /**
     * @codeCoverageIgnore
     */
    public function isTraitable(): bool
    {
        return false;
    }

    /**
     * @codeCoverageIgnore
     */
    public function getDebugInfo(): array
    {
        return array (  6425 => 93,  6370 => 92,  6048 => 87,  5993 => 86,  5671 => 81,  5616 => 80,  5294 => 75,  5239 => 74,  4917 => 69,  4862 => 68,  4540 => 63,  4485 => 62,  4163 => 57,  4108 => 56,  3786 => 51,  3731 => 50,  3409 => 45,  3354 => 44,  3032 => 39,  2977 => 38,  2655 => 33,  2600 => 32,  2278 => 27,  2223 => 26,  1901 => 21,  1846 => 20,  1524 => 15,  1469 => 14,  1147 => 9,  1092 => 8,  782 => 233,  768 => 230,  763 => 227,  749 => 224,  744 => 221,  730 => 218,  725 => 215,  711 => 212,  706 => 209,  692 => 206,  687 => 203,  673 => 200,  668 => 197,  654 => 194,  649 => 191,  635 => 188,  630 => 185,  616 => 182,  611 => 179,  597 => 176,  592 => 173,  578 => 170,  573 => 167,  559 => 164,  554 => 161,  540 => 158,  535 => 155,  521 => 152,  516 => 149,  502 => 146,  497 => 143,  483 => 140,  478 => 137,  464 => 134,  459 => 131,  445 => 128,  440 => 125,  426 => 122,  421 => 119,  407 => 116,  402 => 113,  388 => 110,  383 => 107,  369 => 104,  364 => 101,  350 => 98,  345 => 95,  331 => 92,  326 => 89,  312 => 86,  307 => 83,  293 => 80,  288 => 77,  274 => 74,  269 => 71,  255 => 68,  250 => 65,  236 => 62,  231 => 59,  217 => 56,  212 => 53,  198 => 50,  193 => 47,  179 => 44,  174 => 41,  160 => 38,  155 => 35,  141 => 32,  136 => 29,  122 => 26,  117 => 23,  103 => 20,  98 => 17,  84 => 14,  79 => 11,  65 => 8,  57 => 3,  51 => 1,);
    }

    public function getSourceContext(): Source
    {
        return new Source("<section {{ attributes }}>

    <h2 class=\"block-title block-title-medium\">{{ 'homepage.demo'|trans }}</h2>
    <div class=\"list cards-list media-list inset margin-vertical-half\">
        <ul class=\"row align-items-stretch justify-content-flex-start\" style=\"column-gap: var(--f7-grid-gap);\">

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_installation')), title: 'Installation', description: 'Using the beforeinstallprompt event, a native dialog can be displayed to install a web app' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:install-mobile', class: 'icon size-32 color-white', alt: 'Install' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_offline_support')), title: 'Offline support', description: 'The Service Worker enables web apps to work offline' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:download-for-offline', class: 'icon size-32 color-white', alt: 'Offline support' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_notifications')), title: 'Notifications', description: 'The Notifications API enables web apps to display notifications, even when the app is not active.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:notifications-outline', class: 'icon size-32 color-white', alt: 'Notifications' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_shortcuts')), title: 'Shortcuts', description: 'Shortcuts provide quick access to pages in your app from the app icon.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'tdesign:mobile-shortcut-filled', class: 'icon size-32 color-white', alt: 'Shortcuts' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_view_transition')), title: 'View Transitions', description: 'The View Transitions API enables app-like transitions between pages.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:auto-awesome-motion', class: 'icon size-32 color-white', alt: 'View Transitions' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_geolocation')), title: 'Geolocation', description: 'The Geolocation API enables users to share their location with web apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-gps-fixed', class: 'icon size-32 color-white', alt: 'Geolocation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_media_capture')), title: 'Media capture', description: 'Media capture allows web apps to use the camera and microphone of a device' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:videocam', class: 'icon size-32 color-white', alt: 'Media capture' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-deeporange\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_picture_in_picture')), title: 'Picture-in-picture', description: 'The Document Picture-in-Picture API makes it possible to open an always-on-top window that can be populated with arbitrary HTML content.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:picture-in-picture', class: 'icon size-32 color-white', alt: 'Picture-in-picture' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_file_system')), title: 'File System', description: 'Access to the file system of the user\\'s device' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-insert-drive-file', class: 'icon size-32 color-white', alt: 'File System' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_authentication')), title: 'Authentication', description: 'Web Authentication API (WebAuthn) enables passwordless authentication through your device\\'s fingerprint reader or an external USB Security Key.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-fingerprint', class: 'icon size-32 color-white', alt: 'Authentication' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_protocol_handling')), title: 'Protocol Handling', description: 'Protocol handling enables web apps to register their ability to open links with particular URL schemes.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:language', class: 'icon size-32 color-white', alt: 'Protocol Handling' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_file_handling')), title: 'File Handling API', description: 'The File Handling API enables web apps to register as file handlers with the operating system' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:folder-open', class: 'icon size-32 color-white', alt: 'File Handling API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { link: (path('app_feature_contact_picker')), title: 'Contact picker', description: 'The Contact Picker API allows web apps to select the user\\'s contacts after permission has been granted.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:account-box', class: 'icon size-32 color-white', alt: 'Contact picker' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_web_share')), title: 'Web share', description: 'The Web Share API invokes the native share mechanism of the device and allows users to share text, URLs or files.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:share', class: 'icon size-32 color-white', alt: 'Web share' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { link: (path('app_feature_barcode_detection')), title: 'Barcode detection', description: 'The Barcode Detection API detects barcodes and QR codes in images.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:qr-code-scanner', class: 'icon size-32 color-white', alt: 'Barcode detection' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { link: (path('app_feature_face_detection')), title: 'Face detection', description: 'The Shape Detection API detects faces in images.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:face', class: 'icon size-32 color-white', alt: 'Face detection' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_vibration')), title: 'Vibration', description: 'The Vibration API enables web apps to make a mobile device vibrate.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:vibration', class: 'icon size-32 color-white', alt: 'Vibration' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_audio_recording')), title: 'Audio recording', description: 'Record audio using MediaRecorder and visualize audio using Web Audio API.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:mic', class: 'icon size-32 color-white', alt: 'Audio recording' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_audio')), title: 'Audio', description: 'The Media Session API allows web apps to display controls for media playback on a device\\'s lock screen.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:round-play-circle-filled', class: 'icon size-32 color-white', alt: 'Audio' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { link: (path('app_feature_audio_session')), title: 'Audio Session API', description: 'The Audio Session API configures how audio from web apps should mix with audio from native apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:tune', class: 'icon size-32 color-white', alt: 'Audio Session API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_screen_capture')), title: 'Screen Capturing', description: 'Capture Handle and Captured Surface Control enable screen capturing web apps to remotely control captured web apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-share', class: 'icon size-32 color-white', alt: 'Screen Capturing' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_element_capture')), title: 'Element Capture', description: 'Element Capture enables screen capturing web apps to record specific HTML elements.' } %}
                    {% block content %}<img src=\"{{ asset('images/element-capture.svg') }}\" alt=\"Element capture\" />
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { link: (path('app_feature_background_sync')), title: 'Background Sync API', description: 'The Background Sync API enables web apps to defer tasks when it\\'s offline so they can be run when the network connection is restored.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:sync', class: 'icon size-32 color-white', alt: 'Background Sync API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { link: (path('app_feature_background_fetch')), title: 'Background Fetch API', description: 'The Background Fetch API enables web apps to download large files in the background even when the app is not running.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:downloading', class: 'icon size-32 color-white', alt: 'Background Fetch API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_storage')), title: 'Storage API', description: 'The Storage API enables web apps to persist structured data in the user\\'s browser.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:inventory', class: 'icon size-32 color-white', alt: 'Storage API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_bluetooth')), title: 'Bluetooth', description: 'The Web Bluetooth API enables web apps to connect to Bluetooth Low Energy (BLE) devices and read values from or write values to it.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:bluetooth', class: 'icon size-32 color-white', alt: 'Bluetooth' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_nfc')), title: 'NFC', description: 'The Web NFC API enables web apps to read and write to NFC tags.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:nfc', class: 'icon size-32 color-white', alt: 'NFC' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { link: (path('app_feature_ar_vr')), title: 'AR/VR', description: 'Augmented reality enables web apps to place virtual objects in reality.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:layers', class: 'icon size-32 color-white', alt: 'AR/VR' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { link: (path('app_feature_payment')), title: 'Payment', description: 'The Payment Request API provides a browser-based method to enable users to make payments on the web, using a credit card, Apple Pay or Google Pay.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:credit-card', class: 'icon size-32 color-white', alt: 'Payment' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_wake_lock')), title: 'Wake lock', description: 'The Screen Wake Lock API enables web apps to prevent devices from dimming or locking the screen when the app needs to keep running.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-lock-portrait', class: 'icon size-32 color-white', alt: 'Wake lock' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_orientation')), title: 'Orientation', description: 'The DeviceOrientationEvent gives information about the physical orientation of the user\\'s device.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-rotation', class: 'icon size-32 color-white', alt: 'Orientation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_device_motion')), title: 'Motion', description: 'The DeviceMotionEvent gives information about the speed of changes for the position and orientation of the user\\'s device.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:3d-rotation', class: 'icon size-32 color-white', alt: 'Motion' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_network_info')), title: 'Network info', description: 'The NetworkInformation API provides information about the connection of a device, allowing web apps to adapt functionality based on network quality.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:network-check', class: 'icon size-32 color-white', alt: 'Network info' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_speech_synthesis')), title: 'Speech synthesis', description: 'Speech synthesis provides text-to-speech and allows programs to read out their text content.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:record-voice-over', class: 'icon size-32 color-white', alt: 'Speech synthesis' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_speech_recognition')), title: 'Speech recognition', description: 'Speech recognition is part of the Web Speech API and provides the ability to recognize voice context from an audio input.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:hearing', class: 'icon size-32 color-white', alt: 'Speech recognition' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_multi_touch')), title: 'Multi touch', description: 'Touch events enable web apps to capture complex touch behaviour.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:touch-app', class: 'icon size-32 color-white', alt: 'Multi touch' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_i18n')), title: 'i18n', description: 'Internationalization (i18n) enables web apps to adapt to different languages and regions.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'fluent-mdl2:locale-language', class: 'icon size-32 color-white', alt: 'i18n' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_presentation')), title: 'Presentation', description: 'The Presentation API enables web apps to display content on external screens.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ri:presentation-fill', class: 'icon size-32 color-white', alt: 'presentation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

        </ul>
    </div>

</section>", "components/Features.html.twig", "/Users/praveenmujawdiya/Documents/survos/pwa-f7/templates/components/Features.html.twig");
    }
}


/* components/Features.html.twig */
class __TwigTemplate_1fb5cbdf94a162448bd258deeed21be9___35974002861 extends Template
{
    private Source $source;
    /**
     * @var array<string, Template>
     */
    private array $macros = [];

    public function __construct(Environment $env)
    {
        parent::__construct($env);

        $this->source = $this->getSourceContext();

        $this->blocks = [
            'outer__block_fallback' => [$this, 'block_outer__block_fallback'],
            'content' => [$this, 'block_content'],
        ];
    }

    protected function doGetParent(array $context): bool|string|Template|TemplateWrapper
    {
        // line 98
        return $this->loadTemplate((isset($context["__parent__"]) || array_key_exists("__parent__", $context) ? $context["__parent__"] : (function () { throw new RuntimeError('Variable "__parent__" does not exist.', 98, $this->source); })()), "components/Features.html.twig", 98);
    }

    protected function doDisplay(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        yield from $this->getParent($context)->unwrap()->yield($context, array_merge($this->blocks, $blocks));
        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

    }

    /**
     * @return iterable<null|scalar|\Stringable>
     */
    public function block_outer__block_fallback(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        yield from [];
    }

    // line 99
    /**
     * @return iterable<null|scalar|\Stringable>
     */
    public function block_content(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        yield $this->env->getRuntime('Symfony\UX\TwigComponent\Twig\ComponentRuntime')->render("ux:icon", ["name" => "material-symbols:face", "class" => "icon size-32 color-white", "alt" => "Face detection"]);
        yield "
                ";
        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        yield from [];
    }

    /**
     * @codeCoverageIgnore
     */
    public function getTemplateName(): string
    {
        return "components/Features.html.twig";
    }

    /**
     * @codeCoverageIgnore
     */
    public function isTraitable(): bool
    {
        return false;
    }

    /**
     * @codeCoverageIgnore
     */
    public function getDebugInfo(): array
    {
        return array (  6802 => 99,  6747 => 98,  6425 => 93,  6370 => 92,  6048 => 87,  5993 => 86,  5671 => 81,  5616 => 80,  5294 => 75,  5239 => 74,  4917 => 69,  4862 => 68,  4540 => 63,  4485 => 62,  4163 => 57,  4108 => 56,  3786 => 51,  3731 => 50,  3409 => 45,  3354 => 44,  3032 => 39,  2977 => 38,  2655 => 33,  2600 => 32,  2278 => 27,  2223 => 26,  1901 => 21,  1846 => 20,  1524 => 15,  1469 => 14,  1147 => 9,  1092 => 8,  782 => 233,  768 => 230,  763 => 227,  749 => 224,  744 => 221,  730 => 218,  725 => 215,  711 => 212,  706 => 209,  692 => 206,  687 => 203,  673 => 200,  668 => 197,  654 => 194,  649 => 191,  635 => 188,  630 => 185,  616 => 182,  611 => 179,  597 => 176,  592 => 173,  578 => 170,  573 => 167,  559 => 164,  554 => 161,  540 => 158,  535 => 155,  521 => 152,  516 => 149,  502 => 146,  497 => 143,  483 => 140,  478 => 137,  464 => 134,  459 => 131,  445 => 128,  440 => 125,  426 => 122,  421 => 119,  407 => 116,  402 => 113,  388 => 110,  383 => 107,  369 => 104,  364 => 101,  350 => 98,  345 => 95,  331 => 92,  326 => 89,  312 => 86,  307 => 83,  293 => 80,  288 => 77,  274 => 74,  269 => 71,  255 => 68,  250 => 65,  236 => 62,  231 => 59,  217 => 56,  212 => 53,  198 => 50,  193 => 47,  179 => 44,  174 => 41,  160 => 38,  155 => 35,  141 => 32,  136 => 29,  122 => 26,  117 => 23,  103 => 20,  98 => 17,  84 => 14,  79 => 11,  65 => 8,  57 => 3,  51 => 1,);
    }

    public function getSourceContext(): Source
    {
        return new Source("<section {{ attributes }}>

    <h2 class=\"block-title block-title-medium\">{{ 'homepage.demo'|trans }}</h2>
    <div class=\"list cards-list media-list inset margin-vertical-half\">
        <ul class=\"row align-items-stretch justify-content-flex-start\" style=\"column-gap: var(--f7-grid-gap);\">

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_installation')), title: 'Installation', description: 'Using the beforeinstallprompt event, a native dialog can be displayed to install a web app' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:install-mobile', class: 'icon size-32 color-white', alt: 'Install' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_offline_support')), title: 'Offline support', description: 'The Service Worker enables web apps to work offline' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:download-for-offline', class: 'icon size-32 color-white', alt: 'Offline support' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_notifications')), title: 'Notifications', description: 'The Notifications API enables web apps to display notifications, even when the app is not active.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:notifications-outline', class: 'icon size-32 color-white', alt: 'Notifications' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_shortcuts')), title: 'Shortcuts', description: 'Shortcuts provide quick access to pages in your app from the app icon.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'tdesign:mobile-shortcut-filled', class: 'icon size-32 color-white', alt: 'Shortcuts' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_view_transition')), title: 'View Transitions', description: 'The View Transitions API enables app-like transitions between pages.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:auto-awesome-motion', class: 'icon size-32 color-white', alt: 'View Transitions' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_geolocation')), title: 'Geolocation', description: 'The Geolocation API enables users to share their location with web apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-gps-fixed', class: 'icon size-32 color-white', alt: 'Geolocation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_media_capture')), title: 'Media capture', description: 'Media capture allows web apps to use the camera and microphone of a device' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:videocam', class: 'icon size-32 color-white', alt: 'Media capture' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-deeporange\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_picture_in_picture')), title: 'Picture-in-picture', description: 'The Document Picture-in-Picture API makes it possible to open an always-on-top window that can be populated with arbitrary HTML content.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:picture-in-picture', class: 'icon size-32 color-white', alt: 'Picture-in-picture' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_file_system')), title: 'File System', description: 'Access to the file system of the user\\'s device' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-insert-drive-file', class: 'icon size-32 color-white', alt: 'File System' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_authentication')), title: 'Authentication', description: 'Web Authentication API (WebAuthn) enables passwordless authentication through your device\\'s fingerprint reader or an external USB Security Key.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-fingerprint', class: 'icon size-32 color-white', alt: 'Authentication' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_protocol_handling')), title: 'Protocol Handling', description: 'Protocol handling enables web apps to register their ability to open links with particular URL schemes.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:language', class: 'icon size-32 color-white', alt: 'Protocol Handling' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_file_handling')), title: 'File Handling API', description: 'The File Handling API enables web apps to register as file handlers with the operating system' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:folder-open', class: 'icon size-32 color-white', alt: 'File Handling API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { link: (path('app_feature_contact_picker')), title: 'Contact picker', description: 'The Contact Picker API allows web apps to select the user\\'s contacts after permission has been granted.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:account-box', class: 'icon size-32 color-white', alt: 'Contact picker' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_web_share')), title: 'Web share', description: 'The Web Share API invokes the native share mechanism of the device and allows users to share text, URLs or files.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:share', class: 'icon size-32 color-white', alt: 'Web share' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { link: (path('app_feature_barcode_detection')), title: 'Barcode detection', description: 'The Barcode Detection API detects barcodes and QR codes in images.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:qr-code-scanner', class: 'icon size-32 color-white', alt: 'Barcode detection' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { link: (path('app_feature_face_detection')), title: 'Face detection', description: 'The Shape Detection API detects faces in images.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:face', class: 'icon size-32 color-white', alt: 'Face detection' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_vibration')), title: 'Vibration', description: 'The Vibration API enables web apps to make a mobile device vibrate.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:vibration', class: 'icon size-32 color-white', alt: 'Vibration' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_audio_recording')), title: 'Audio recording', description: 'Record audio using MediaRecorder and visualize audio using Web Audio API.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:mic', class: 'icon size-32 color-white', alt: 'Audio recording' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_audio')), title: 'Audio', description: 'The Media Session API allows web apps to display controls for media playback on a device\\'s lock screen.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:round-play-circle-filled', class: 'icon size-32 color-white', alt: 'Audio' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { link: (path('app_feature_audio_session')), title: 'Audio Session API', description: 'The Audio Session API configures how audio from web apps should mix with audio from native apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:tune', class: 'icon size-32 color-white', alt: 'Audio Session API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_screen_capture')), title: 'Screen Capturing', description: 'Capture Handle and Captured Surface Control enable screen capturing web apps to remotely control captured web apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-share', class: 'icon size-32 color-white', alt: 'Screen Capturing' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_element_capture')), title: 'Element Capture', description: 'Element Capture enables screen capturing web apps to record specific HTML elements.' } %}
                    {% block content %}<img src=\"{{ asset('images/element-capture.svg') }}\" alt=\"Element capture\" />
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { link: (path('app_feature_background_sync')), title: 'Background Sync API', description: 'The Background Sync API enables web apps to defer tasks when it\\'s offline so they can be run when the network connection is restored.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:sync', class: 'icon size-32 color-white', alt: 'Background Sync API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { link: (path('app_feature_background_fetch')), title: 'Background Fetch API', description: 'The Background Fetch API enables web apps to download large files in the background even when the app is not running.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:downloading', class: 'icon size-32 color-white', alt: 'Background Fetch API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_storage')), title: 'Storage API', description: 'The Storage API enables web apps to persist structured data in the user\\'s browser.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:inventory', class: 'icon size-32 color-white', alt: 'Storage API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_bluetooth')), title: 'Bluetooth', description: 'The Web Bluetooth API enables web apps to connect to Bluetooth Low Energy (BLE) devices and read values from or write values to it.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:bluetooth', class: 'icon size-32 color-white', alt: 'Bluetooth' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_nfc')), title: 'NFC', description: 'The Web NFC API enables web apps to read and write to NFC tags.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:nfc', class: 'icon size-32 color-white', alt: 'NFC' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { link: (path('app_feature_ar_vr')), title: 'AR/VR', description: 'Augmented reality enables web apps to place virtual objects in reality.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:layers', class: 'icon size-32 color-white', alt: 'AR/VR' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { link: (path('app_feature_payment')), title: 'Payment', description: 'The Payment Request API provides a browser-based method to enable users to make payments on the web, using a credit card, Apple Pay or Google Pay.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:credit-card', class: 'icon size-32 color-white', alt: 'Payment' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_wake_lock')), title: 'Wake lock', description: 'The Screen Wake Lock API enables web apps to prevent devices from dimming or locking the screen when the app needs to keep running.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-lock-portrait', class: 'icon size-32 color-white', alt: 'Wake lock' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_orientation')), title: 'Orientation', description: 'The DeviceOrientationEvent gives information about the physical orientation of the user\\'s device.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-rotation', class: 'icon size-32 color-white', alt: 'Orientation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_device_motion')), title: 'Motion', description: 'The DeviceMotionEvent gives information about the speed of changes for the position and orientation of the user\\'s device.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:3d-rotation', class: 'icon size-32 color-white', alt: 'Motion' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_network_info')), title: 'Network info', description: 'The NetworkInformation API provides information about the connection of a device, allowing web apps to adapt functionality based on network quality.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:network-check', class: 'icon size-32 color-white', alt: 'Network info' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_speech_synthesis')), title: 'Speech synthesis', description: 'Speech synthesis provides text-to-speech and allows programs to read out their text content.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:record-voice-over', class: 'icon size-32 color-white', alt: 'Speech synthesis' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_speech_recognition')), title: 'Speech recognition', description: 'Speech recognition is part of the Web Speech API and provides the ability to recognize voice context from an audio input.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:hearing', class: 'icon size-32 color-white', alt: 'Speech recognition' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_multi_touch')), title: 'Multi touch', description: 'Touch events enable web apps to capture complex touch behaviour.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:touch-app', class: 'icon size-32 color-white', alt: 'Multi touch' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_i18n')), title: 'i18n', description: 'Internationalization (i18n) enables web apps to adapt to different languages and regions.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'fluent-mdl2:locale-language', class: 'icon size-32 color-white', alt: 'i18n' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_presentation')), title: 'Presentation', description: 'The Presentation API enables web apps to display content on external screens.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ri:presentation-fill', class: 'icon size-32 color-white', alt: 'presentation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

        </ul>
    </div>

</section>", "components/Features.html.twig", "/Users/praveenmujawdiya/Documents/survos/pwa-f7/templates/components/Features.html.twig");
    }
}


/* components/Features.html.twig */
class __TwigTemplate_1fb5cbdf94a162448bd258deeed21be9___14219562591 extends Template
{
    private Source $source;
    /**
     * @var array<string, Template>
     */
    private array $macros = [];

    public function __construct(Environment $env)
    {
        parent::__construct($env);

        $this->source = $this->getSourceContext();

        $this->blocks = [
            'outer__block_fallback' => [$this, 'block_outer__block_fallback'],
            'content' => [$this, 'block_content'],
        ];
    }

    protected function doGetParent(array $context): bool|string|Template|TemplateWrapper
    {
        // line 104
        return $this->loadTemplate((isset($context["__parent__"]) || array_key_exists("__parent__", $context) ? $context["__parent__"] : (function () { throw new RuntimeError('Variable "__parent__" does not exist.', 104, $this->source); })()), "components/Features.html.twig", 104);
    }

    protected function doDisplay(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        yield from $this->getParent($context)->unwrap()->yield($context, array_merge($this->blocks, $blocks));
        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

    }

    /**
     * @return iterable<null|scalar|\Stringable>
     */
    public function block_outer__block_fallback(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        yield from [];
    }

    // line 105
    /**
     * @return iterable<null|scalar|\Stringable>
     */
    public function block_content(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        yield $this->env->getRuntime('Symfony\UX\TwigComponent\Twig\ComponentRuntime')->render("ux:icon", ["name" => "material-symbols:vibration", "class" => "icon size-32 color-white", "alt" => "Vibration"]);
        yield "
                ";
        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        yield from [];
    }

    /**
     * @codeCoverageIgnore
     */
    public function getTemplateName(): string
    {
        return "components/Features.html.twig";
    }

    /**
     * @codeCoverageIgnore
     */
    public function isTraitable(): bool
    {
        return false;
    }

    /**
     * @codeCoverageIgnore
     */
    public function getDebugInfo(): array
    {
        return array (  7179 => 105,  7124 => 104,  6802 => 99,  6747 => 98,  6425 => 93,  6370 => 92,  6048 => 87,  5993 => 86,  5671 => 81,  5616 => 80,  5294 => 75,  5239 => 74,  4917 => 69,  4862 => 68,  4540 => 63,  4485 => 62,  4163 => 57,  4108 => 56,  3786 => 51,  3731 => 50,  3409 => 45,  3354 => 44,  3032 => 39,  2977 => 38,  2655 => 33,  2600 => 32,  2278 => 27,  2223 => 26,  1901 => 21,  1846 => 20,  1524 => 15,  1469 => 14,  1147 => 9,  1092 => 8,  782 => 233,  768 => 230,  763 => 227,  749 => 224,  744 => 221,  730 => 218,  725 => 215,  711 => 212,  706 => 209,  692 => 206,  687 => 203,  673 => 200,  668 => 197,  654 => 194,  649 => 191,  635 => 188,  630 => 185,  616 => 182,  611 => 179,  597 => 176,  592 => 173,  578 => 170,  573 => 167,  559 => 164,  554 => 161,  540 => 158,  535 => 155,  521 => 152,  516 => 149,  502 => 146,  497 => 143,  483 => 140,  478 => 137,  464 => 134,  459 => 131,  445 => 128,  440 => 125,  426 => 122,  421 => 119,  407 => 116,  402 => 113,  388 => 110,  383 => 107,  369 => 104,  364 => 101,  350 => 98,  345 => 95,  331 => 92,  326 => 89,  312 => 86,  307 => 83,  293 => 80,  288 => 77,  274 => 74,  269 => 71,  255 => 68,  250 => 65,  236 => 62,  231 => 59,  217 => 56,  212 => 53,  198 => 50,  193 => 47,  179 => 44,  174 => 41,  160 => 38,  155 => 35,  141 => 32,  136 => 29,  122 => 26,  117 => 23,  103 => 20,  98 => 17,  84 => 14,  79 => 11,  65 => 8,  57 => 3,  51 => 1,);
    }

    public function getSourceContext(): Source
    {
        return new Source("<section {{ attributes }}>

    <h2 class=\"block-title block-title-medium\">{{ 'homepage.demo'|trans }}</h2>
    <div class=\"list cards-list media-list inset margin-vertical-half\">
        <ul class=\"row align-items-stretch justify-content-flex-start\" style=\"column-gap: var(--f7-grid-gap);\">

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_installation')), title: 'Installation', description: 'Using the beforeinstallprompt event, a native dialog can be displayed to install a web app' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:install-mobile', class: 'icon size-32 color-white', alt: 'Install' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_offline_support')), title: 'Offline support', description: 'The Service Worker enables web apps to work offline' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:download-for-offline', class: 'icon size-32 color-white', alt: 'Offline support' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_notifications')), title: 'Notifications', description: 'The Notifications API enables web apps to display notifications, even when the app is not active.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:notifications-outline', class: 'icon size-32 color-white', alt: 'Notifications' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_shortcuts')), title: 'Shortcuts', description: 'Shortcuts provide quick access to pages in your app from the app icon.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'tdesign:mobile-shortcut-filled', class: 'icon size-32 color-white', alt: 'Shortcuts' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_view_transition')), title: 'View Transitions', description: 'The View Transitions API enables app-like transitions between pages.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:auto-awesome-motion', class: 'icon size-32 color-white', alt: 'View Transitions' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_geolocation')), title: 'Geolocation', description: 'The Geolocation API enables users to share their location with web apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-gps-fixed', class: 'icon size-32 color-white', alt: 'Geolocation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_media_capture')), title: 'Media capture', description: 'Media capture allows web apps to use the camera and microphone of a device' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:videocam', class: 'icon size-32 color-white', alt: 'Media capture' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-deeporange\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_picture_in_picture')), title: 'Picture-in-picture', description: 'The Document Picture-in-Picture API makes it possible to open an always-on-top window that can be populated with arbitrary HTML content.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:picture-in-picture', class: 'icon size-32 color-white', alt: 'Picture-in-picture' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_file_system')), title: 'File System', description: 'Access to the file system of the user\\'s device' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-insert-drive-file', class: 'icon size-32 color-white', alt: 'File System' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_authentication')), title: 'Authentication', description: 'Web Authentication API (WebAuthn) enables passwordless authentication through your device\\'s fingerprint reader or an external USB Security Key.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-fingerprint', class: 'icon size-32 color-white', alt: 'Authentication' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_protocol_handling')), title: 'Protocol Handling', description: 'Protocol handling enables web apps to register their ability to open links with particular URL schemes.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:language', class: 'icon size-32 color-white', alt: 'Protocol Handling' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_file_handling')), title: 'File Handling API', description: 'The File Handling API enables web apps to register as file handlers with the operating system' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:folder-open', class: 'icon size-32 color-white', alt: 'File Handling API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { link: (path('app_feature_contact_picker')), title: 'Contact picker', description: 'The Contact Picker API allows web apps to select the user\\'s contacts after permission has been granted.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:account-box', class: 'icon size-32 color-white', alt: 'Contact picker' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_web_share')), title: 'Web share', description: 'The Web Share API invokes the native share mechanism of the device and allows users to share text, URLs or files.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:share', class: 'icon size-32 color-white', alt: 'Web share' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { link: (path('app_feature_barcode_detection')), title: 'Barcode detection', description: 'The Barcode Detection API detects barcodes and QR codes in images.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:qr-code-scanner', class: 'icon size-32 color-white', alt: 'Barcode detection' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { link: (path('app_feature_face_detection')), title: 'Face detection', description: 'The Shape Detection API detects faces in images.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:face', class: 'icon size-32 color-white', alt: 'Face detection' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_vibration')), title: 'Vibration', description: 'The Vibration API enables web apps to make a mobile device vibrate.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:vibration', class: 'icon size-32 color-white', alt: 'Vibration' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_audio_recording')), title: 'Audio recording', description: 'Record audio using MediaRecorder and visualize audio using Web Audio API.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:mic', class: 'icon size-32 color-white', alt: 'Audio recording' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_audio')), title: 'Audio', description: 'The Media Session API allows web apps to display controls for media playback on a device\\'s lock screen.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:round-play-circle-filled', class: 'icon size-32 color-white', alt: 'Audio' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { link: (path('app_feature_audio_session')), title: 'Audio Session API', description: 'The Audio Session API configures how audio from web apps should mix with audio from native apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:tune', class: 'icon size-32 color-white', alt: 'Audio Session API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_screen_capture')), title: 'Screen Capturing', description: 'Capture Handle and Captured Surface Control enable screen capturing web apps to remotely control captured web apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-share', class: 'icon size-32 color-white', alt: 'Screen Capturing' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_element_capture')), title: 'Element Capture', description: 'Element Capture enables screen capturing web apps to record specific HTML elements.' } %}
                    {% block content %}<img src=\"{{ asset('images/element-capture.svg') }}\" alt=\"Element capture\" />
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { link: (path('app_feature_background_sync')), title: 'Background Sync API', description: 'The Background Sync API enables web apps to defer tasks when it\\'s offline so they can be run when the network connection is restored.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:sync', class: 'icon size-32 color-white', alt: 'Background Sync API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { link: (path('app_feature_background_fetch')), title: 'Background Fetch API', description: 'The Background Fetch API enables web apps to download large files in the background even when the app is not running.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:downloading', class: 'icon size-32 color-white', alt: 'Background Fetch API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_storage')), title: 'Storage API', description: 'The Storage API enables web apps to persist structured data in the user\\'s browser.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:inventory', class: 'icon size-32 color-white', alt: 'Storage API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_bluetooth')), title: 'Bluetooth', description: 'The Web Bluetooth API enables web apps to connect to Bluetooth Low Energy (BLE) devices and read values from or write values to it.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:bluetooth', class: 'icon size-32 color-white', alt: 'Bluetooth' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_nfc')), title: 'NFC', description: 'The Web NFC API enables web apps to read and write to NFC tags.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:nfc', class: 'icon size-32 color-white', alt: 'NFC' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { link: (path('app_feature_ar_vr')), title: 'AR/VR', description: 'Augmented reality enables web apps to place virtual objects in reality.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:layers', class: 'icon size-32 color-white', alt: 'AR/VR' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { link: (path('app_feature_payment')), title: 'Payment', description: 'The Payment Request API provides a browser-based method to enable users to make payments on the web, using a credit card, Apple Pay or Google Pay.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:credit-card', class: 'icon size-32 color-white', alt: 'Payment' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_wake_lock')), title: 'Wake lock', description: 'The Screen Wake Lock API enables web apps to prevent devices from dimming or locking the screen when the app needs to keep running.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-lock-portrait', class: 'icon size-32 color-white', alt: 'Wake lock' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_orientation')), title: 'Orientation', description: 'The DeviceOrientationEvent gives information about the physical orientation of the user\\'s device.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-rotation', class: 'icon size-32 color-white', alt: 'Orientation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_device_motion')), title: 'Motion', description: 'The DeviceMotionEvent gives information about the speed of changes for the position and orientation of the user\\'s device.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:3d-rotation', class: 'icon size-32 color-white', alt: 'Motion' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_network_info')), title: 'Network info', description: 'The NetworkInformation API provides information about the connection of a device, allowing web apps to adapt functionality based on network quality.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:network-check', class: 'icon size-32 color-white', alt: 'Network info' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_speech_synthesis')), title: 'Speech synthesis', description: 'Speech synthesis provides text-to-speech and allows programs to read out their text content.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:record-voice-over', class: 'icon size-32 color-white', alt: 'Speech synthesis' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_speech_recognition')), title: 'Speech recognition', description: 'Speech recognition is part of the Web Speech API and provides the ability to recognize voice context from an audio input.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:hearing', class: 'icon size-32 color-white', alt: 'Speech recognition' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_multi_touch')), title: 'Multi touch', description: 'Touch events enable web apps to capture complex touch behaviour.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:touch-app', class: 'icon size-32 color-white', alt: 'Multi touch' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_i18n')), title: 'i18n', description: 'Internationalization (i18n) enables web apps to adapt to different languages and regions.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'fluent-mdl2:locale-language', class: 'icon size-32 color-white', alt: 'i18n' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_presentation')), title: 'Presentation', description: 'The Presentation API enables web apps to display content on external screens.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ri:presentation-fill', class: 'icon size-32 color-white', alt: 'presentation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

        </ul>
    </div>

</section>", "components/Features.html.twig", "/Users/praveenmujawdiya/Documents/survos/pwa-f7/templates/components/Features.html.twig");
    }
}


/* components/Features.html.twig */
class __TwigTemplate_1fb5cbdf94a162448bd258deeed21be9___12535485391 extends Template
{
    private Source $source;
    /**
     * @var array<string, Template>
     */
    private array $macros = [];

    public function __construct(Environment $env)
    {
        parent::__construct($env);

        $this->source = $this->getSourceContext();

        $this->blocks = [
            'outer__block_fallback' => [$this, 'block_outer__block_fallback'],
            'content' => [$this, 'block_content'],
        ];
    }

    protected function doGetParent(array $context): bool|string|Template|TemplateWrapper
    {
        // line 110
        return $this->loadTemplate((isset($context["__parent__"]) || array_key_exists("__parent__", $context) ? $context["__parent__"] : (function () { throw new RuntimeError('Variable "__parent__" does not exist.', 110, $this->source); })()), "components/Features.html.twig", 110);
    }

    protected function doDisplay(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        yield from $this->getParent($context)->unwrap()->yield($context, array_merge($this->blocks, $blocks));
        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

    }

    /**
     * @return iterable<null|scalar|\Stringable>
     */
    public function block_outer__block_fallback(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        yield from [];
    }

    // line 111
    /**
     * @return iterable<null|scalar|\Stringable>
     */
    public function block_content(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        yield $this->env->getRuntime('Symfony\UX\TwigComponent\Twig\ComponentRuntime')->render("ux:icon", ["name" => "material-symbols:mic", "class" => "icon size-32 color-white", "alt" => "Audio recording"]);
        yield "
                ";
        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        yield from [];
    }

    /**
     * @codeCoverageIgnore
     */
    public function getTemplateName(): string
    {
        return "components/Features.html.twig";
    }

    /**
     * @codeCoverageIgnore
     */
    public function isTraitable(): bool
    {
        return false;
    }

    /**
     * @codeCoverageIgnore
     */
    public function getDebugInfo(): array
    {
        return array (  7556 => 111,  7501 => 110,  7179 => 105,  7124 => 104,  6802 => 99,  6747 => 98,  6425 => 93,  6370 => 92,  6048 => 87,  5993 => 86,  5671 => 81,  5616 => 80,  5294 => 75,  5239 => 74,  4917 => 69,  4862 => 68,  4540 => 63,  4485 => 62,  4163 => 57,  4108 => 56,  3786 => 51,  3731 => 50,  3409 => 45,  3354 => 44,  3032 => 39,  2977 => 38,  2655 => 33,  2600 => 32,  2278 => 27,  2223 => 26,  1901 => 21,  1846 => 20,  1524 => 15,  1469 => 14,  1147 => 9,  1092 => 8,  782 => 233,  768 => 230,  763 => 227,  749 => 224,  744 => 221,  730 => 218,  725 => 215,  711 => 212,  706 => 209,  692 => 206,  687 => 203,  673 => 200,  668 => 197,  654 => 194,  649 => 191,  635 => 188,  630 => 185,  616 => 182,  611 => 179,  597 => 176,  592 => 173,  578 => 170,  573 => 167,  559 => 164,  554 => 161,  540 => 158,  535 => 155,  521 => 152,  516 => 149,  502 => 146,  497 => 143,  483 => 140,  478 => 137,  464 => 134,  459 => 131,  445 => 128,  440 => 125,  426 => 122,  421 => 119,  407 => 116,  402 => 113,  388 => 110,  383 => 107,  369 => 104,  364 => 101,  350 => 98,  345 => 95,  331 => 92,  326 => 89,  312 => 86,  307 => 83,  293 => 80,  288 => 77,  274 => 74,  269 => 71,  255 => 68,  250 => 65,  236 => 62,  231 => 59,  217 => 56,  212 => 53,  198 => 50,  193 => 47,  179 => 44,  174 => 41,  160 => 38,  155 => 35,  141 => 32,  136 => 29,  122 => 26,  117 => 23,  103 => 20,  98 => 17,  84 => 14,  79 => 11,  65 => 8,  57 => 3,  51 => 1,);
    }

    public function getSourceContext(): Source
    {
        return new Source("<section {{ attributes }}>

    <h2 class=\"block-title block-title-medium\">{{ 'homepage.demo'|trans }}</h2>
    <div class=\"list cards-list media-list inset margin-vertical-half\">
        <ul class=\"row align-items-stretch justify-content-flex-start\" style=\"column-gap: var(--f7-grid-gap);\">

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_installation')), title: 'Installation', description: 'Using the beforeinstallprompt event, a native dialog can be displayed to install a web app' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:install-mobile', class: 'icon size-32 color-white', alt: 'Install' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_offline_support')), title: 'Offline support', description: 'The Service Worker enables web apps to work offline' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:download-for-offline', class: 'icon size-32 color-white', alt: 'Offline support' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_notifications')), title: 'Notifications', description: 'The Notifications API enables web apps to display notifications, even when the app is not active.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:notifications-outline', class: 'icon size-32 color-white', alt: 'Notifications' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_shortcuts')), title: 'Shortcuts', description: 'Shortcuts provide quick access to pages in your app from the app icon.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'tdesign:mobile-shortcut-filled', class: 'icon size-32 color-white', alt: 'Shortcuts' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_view_transition')), title: 'View Transitions', description: 'The View Transitions API enables app-like transitions between pages.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:auto-awesome-motion', class: 'icon size-32 color-white', alt: 'View Transitions' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_geolocation')), title: 'Geolocation', description: 'The Geolocation API enables users to share their location with web apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-gps-fixed', class: 'icon size-32 color-white', alt: 'Geolocation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_media_capture')), title: 'Media capture', description: 'Media capture allows web apps to use the camera and microphone of a device' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:videocam', class: 'icon size-32 color-white', alt: 'Media capture' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-deeporange\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_picture_in_picture')), title: 'Picture-in-picture', description: 'The Document Picture-in-Picture API makes it possible to open an always-on-top window that can be populated with arbitrary HTML content.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:picture-in-picture', class: 'icon size-32 color-white', alt: 'Picture-in-picture' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_file_system')), title: 'File System', description: 'Access to the file system of the user\\'s device' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-insert-drive-file', class: 'icon size-32 color-white', alt: 'File System' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_authentication')), title: 'Authentication', description: 'Web Authentication API (WebAuthn) enables passwordless authentication through your device\\'s fingerprint reader or an external USB Security Key.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-fingerprint', class: 'icon size-32 color-white', alt: 'Authentication' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_protocol_handling')), title: 'Protocol Handling', description: 'Protocol handling enables web apps to register their ability to open links with particular URL schemes.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:language', class: 'icon size-32 color-white', alt: 'Protocol Handling' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_file_handling')), title: 'File Handling API', description: 'The File Handling API enables web apps to register as file handlers with the operating system' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:folder-open', class: 'icon size-32 color-white', alt: 'File Handling API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { link: (path('app_feature_contact_picker')), title: 'Contact picker', description: 'The Contact Picker API allows web apps to select the user\\'s contacts after permission has been granted.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:account-box', class: 'icon size-32 color-white', alt: 'Contact picker' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_web_share')), title: 'Web share', description: 'The Web Share API invokes the native share mechanism of the device and allows users to share text, URLs or files.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:share', class: 'icon size-32 color-white', alt: 'Web share' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { link: (path('app_feature_barcode_detection')), title: 'Barcode detection', description: 'The Barcode Detection API detects barcodes and QR codes in images.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:qr-code-scanner', class: 'icon size-32 color-white', alt: 'Barcode detection' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { link: (path('app_feature_face_detection')), title: 'Face detection', description: 'The Shape Detection API detects faces in images.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:face', class: 'icon size-32 color-white', alt: 'Face detection' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_vibration')), title: 'Vibration', description: 'The Vibration API enables web apps to make a mobile device vibrate.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:vibration', class: 'icon size-32 color-white', alt: 'Vibration' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_audio_recording')), title: 'Audio recording', description: 'Record audio using MediaRecorder and visualize audio using Web Audio API.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:mic', class: 'icon size-32 color-white', alt: 'Audio recording' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_audio')), title: 'Audio', description: 'The Media Session API allows web apps to display controls for media playback on a device\\'s lock screen.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:round-play-circle-filled', class: 'icon size-32 color-white', alt: 'Audio' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { link: (path('app_feature_audio_session')), title: 'Audio Session API', description: 'The Audio Session API configures how audio from web apps should mix with audio from native apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:tune', class: 'icon size-32 color-white', alt: 'Audio Session API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_screen_capture')), title: 'Screen Capturing', description: 'Capture Handle and Captured Surface Control enable screen capturing web apps to remotely control captured web apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-share', class: 'icon size-32 color-white', alt: 'Screen Capturing' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_element_capture')), title: 'Element Capture', description: 'Element Capture enables screen capturing web apps to record specific HTML elements.' } %}
                    {% block content %}<img src=\"{{ asset('images/element-capture.svg') }}\" alt=\"Element capture\" />
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { link: (path('app_feature_background_sync')), title: 'Background Sync API', description: 'The Background Sync API enables web apps to defer tasks when it\\'s offline so they can be run when the network connection is restored.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:sync', class: 'icon size-32 color-white', alt: 'Background Sync API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { link: (path('app_feature_background_fetch')), title: 'Background Fetch API', description: 'The Background Fetch API enables web apps to download large files in the background even when the app is not running.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:downloading', class: 'icon size-32 color-white', alt: 'Background Fetch API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_storage')), title: 'Storage API', description: 'The Storage API enables web apps to persist structured data in the user\\'s browser.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:inventory', class: 'icon size-32 color-white', alt: 'Storage API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_bluetooth')), title: 'Bluetooth', description: 'The Web Bluetooth API enables web apps to connect to Bluetooth Low Energy (BLE) devices and read values from or write values to it.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:bluetooth', class: 'icon size-32 color-white', alt: 'Bluetooth' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_nfc')), title: 'NFC', description: 'The Web NFC API enables web apps to read and write to NFC tags.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:nfc', class: 'icon size-32 color-white', alt: 'NFC' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { link: (path('app_feature_ar_vr')), title: 'AR/VR', description: 'Augmented reality enables web apps to place virtual objects in reality.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:layers', class: 'icon size-32 color-white', alt: 'AR/VR' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { link: (path('app_feature_payment')), title: 'Payment', description: 'The Payment Request API provides a browser-based method to enable users to make payments on the web, using a credit card, Apple Pay or Google Pay.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:credit-card', class: 'icon size-32 color-white', alt: 'Payment' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_wake_lock')), title: 'Wake lock', description: 'The Screen Wake Lock API enables web apps to prevent devices from dimming or locking the screen when the app needs to keep running.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-lock-portrait', class: 'icon size-32 color-white', alt: 'Wake lock' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_orientation')), title: 'Orientation', description: 'The DeviceOrientationEvent gives information about the physical orientation of the user\\'s device.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-rotation', class: 'icon size-32 color-white', alt: 'Orientation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_device_motion')), title: 'Motion', description: 'The DeviceMotionEvent gives information about the speed of changes for the position and orientation of the user\\'s device.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:3d-rotation', class: 'icon size-32 color-white', alt: 'Motion' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_network_info')), title: 'Network info', description: 'The NetworkInformation API provides information about the connection of a device, allowing web apps to adapt functionality based on network quality.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:network-check', class: 'icon size-32 color-white', alt: 'Network info' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_speech_synthesis')), title: 'Speech synthesis', description: 'Speech synthesis provides text-to-speech and allows programs to read out their text content.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:record-voice-over', class: 'icon size-32 color-white', alt: 'Speech synthesis' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_speech_recognition')), title: 'Speech recognition', description: 'Speech recognition is part of the Web Speech API and provides the ability to recognize voice context from an audio input.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:hearing', class: 'icon size-32 color-white', alt: 'Speech recognition' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_multi_touch')), title: 'Multi touch', description: 'Touch events enable web apps to capture complex touch behaviour.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:touch-app', class: 'icon size-32 color-white', alt: 'Multi touch' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_i18n')), title: 'i18n', description: 'Internationalization (i18n) enables web apps to adapt to different languages and regions.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'fluent-mdl2:locale-language', class: 'icon size-32 color-white', alt: 'i18n' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_presentation')), title: 'Presentation', description: 'The Presentation API enables web apps to display content on external screens.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ri:presentation-fill', class: 'icon size-32 color-white', alt: 'presentation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

        </ul>
    </div>

</section>", "components/Features.html.twig", "/Users/praveenmujawdiya/Documents/survos/pwa-f7/templates/components/Features.html.twig");
    }
}


/* components/Features.html.twig */
class __TwigTemplate_1fb5cbdf94a162448bd258deeed21be9___27485810701 extends Template
{
    private Source $source;
    /**
     * @var array<string, Template>
     */
    private array $macros = [];

    public function __construct(Environment $env)
    {
        parent::__construct($env);

        $this->source = $this->getSourceContext();

        $this->blocks = [
            'outer__block_fallback' => [$this, 'block_outer__block_fallback'],
            'content' => [$this, 'block_content'],
        ];
    }

    protected function doGetParent(array $context): bool|string|Template|TemplateWrapper
    {
        // line 116
        return $this->loadTemplate((isset($context["__parent__"]) || array_key_exists("__parent__", $context) ? $context["__parent__"] : (function () { throw new RuntimeError('Variable "__parent__" does not exist.', 116, $this->source); })()), "components/Features.html.twig", 116);
    }

    protected function doDisplay(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        yield from $this->getParent($context)->unwrap()->yield($context, array_merge($this->blocks, $blocks));
        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

    }

    /**
     * @return iterable<null|scalar|\Stringable>
     */
    public function block_outer__block_fallback(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        yield from [];
    }

    // line 117
    /**
     * @return iterable<null|scalar|\Stringable>
     */
    public function block_content(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        yield $this->env->getRuntime('Symfony\UX\TwigComponent\Twig\ComponentRuntime')->render("ux:icon", ["name" => "ic:round-play-circle-filled", "class" => "icon size-32 color-white", "alt" => "Audio"]);
        yield "
                ";
        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        yield from [];
    }

    /**
     * @codeCoverageIgnore
     */
    public function getTemplateName(): string
    {
        return "components/Features.html.twig";
    }

    /**
     * @codeCoverageIgnore
     */
    public function isTraitable(): bool
    {
        return false;
    }

    /**
     * @codeCoverageIgnore
     */
    public function getDebugInfo(): array
    {
        return array (  7933 => 117,  7878 => 116,  7556 => 111,  7501 => 110,  7179 => 105,  7124 => 104,  6802 => 99,  6747 => 98,  6425 => 93,  6370 => 92,  6048 => 87,  5993 => 86,  5671 => 81,  5616 => 80,  5294 => 75,  5239 => 74,  4917 => 69,  4862 => 68,  4540 => 63,  4485 => 62,  4163 => 57,  4108 => 56,  3786 => 51,  3731 => 50,  3409 => 45,  3354 => 44,  3032 => 39,  2977 => 38,  2655 => 33,  2600 => 32,  2278 => 27,  2223 => 26,  1901 => 21,  1846 => 20,  1524 => 15,  1469 => 14,  1147 => 9,  1092 => 8,  782 => 233,  768 => 230,  763 => 227,  749 => 224,  744 => 221,  730 => 218,  725 => 215,  711 => 212,  706 => 209,  692 => 206,  687 => 203,  673 => 200,  668 => 197,  654 => 194,  649 => 191,  635 => 188,  630 => 185,  616 => 182,  611 => 179,  597 => 176,  592 => 173,  578 => 170,  573 => 167,  559 => 164,  554 => 161,  540 => 158,  535 => 155,  521 => 152,  516 => 149,  502 => 146,  497 => 143,  483 => 140,  478 => 137,  464 => 134,  459 => 131,  445 => 128,  440 => 125,  426 => 122,  421 => 119,  407 => 116,  402 => 113,  388 => 110,  383 => 107,  369 => 104,  364 => 101,  350 => 98,  345 => 95,  331 => 92,  326 => 89,  312 => 86,  307 => 83,  293 => 80,  288 => 77,  274 => 74,  269 => 71,  255 => 68,  250 => 65,  236 => 62,  231 => 59,  217 => 56,  212 => 53,  198 => 50,  193 => 47,  179 => 44,  174 => 41,  160 => 38,  155 => 35,  141 => 32,  136 => 29,  122 => 26,  117 => 23,  103 => 20,  98 => 17,  84 => 14,  79 => 11,  65 => 8,  57 => 3,  51 => 1,);
    }

    public function getSourceContext(): Source
    {
        return new Source("<section {{ attributes }}>

    <h2 class=\"block-title block-title-medium\">{{ 'homepage.demo'|trans }}</h2>
    <div class=\"list cards-list media-list inset margin-vertical-half\">
        <ul class=\"row align-items-stretch justify-content-flex-start\" style=\"column-gap: var(--f7-grid-gap);\">

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_installation')), title: 'Installation', description: 'Using the beforeinstallprompt event, a native dialog can be displayed to install a web app' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:install-mobile', class: 'icon size-32 color-white', alt: 'Install' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_offline_support')), title: 'Offline support', description: 'The Service Worker enables web apps to work offline' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:download-for-offline', class: 'icon size-32 color-white', alt: 'Offline support' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_notifications')), title: 'Notifications', description: 'The Notifications API enables web apps to display notifications, even when the app is not active.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:notifications-outline', class: 'icon size-32 color-white', alt: 'Notifications' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_shortcuts')), title: 'Shortcuts', description: 'Shortcuts provide quick access to pages in your app from the app icon.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'tdesign:mobile-shortcut-filled', class: 'icon size-32 color-white', alt: 'Shortcuts' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_view_transition')), title: 'View Transitions', description: 'The View Transitions API enables app-like transitions between pages.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:auto-awesome-motion', class: 'icon size-32 color-white', alt: 'View Transitions' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_geolocation')), title: 'Geolocation', description: 'The Geolocation API enables users to share their location with web apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-gps-fixed', class: 'icon size-32 color-white', alt: 'Geolocation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_media_capture')), title: 'Media capture', description: 'Media capture allows web apps to use the camera and microphone of a device' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:videocam', class: 'icon size-32 color-white', alt: 'Media capture' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-deeporange\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_picture_in_picture')), title: 'Picture-in-picture', description: 'The Document Picture-in-Picture API makes it possible to open an always-on-top window that can be populated with arbitrary HTML content.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:picture-in-picture', class: 'icon size-32 color-white', alt: 'Picture-in-picture' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_file_system')), title: 'File System', description: 'Access to the file system of the user\\'s device' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-insert-drive-file', class: 'icon size-32 color-white', alt: 'File System' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_authentication')), title: 'Authentication', description: 'Web Authentication API (WebAuthn) enables passwordless authentication through your device\\'s fingerprint reader or an external USB Security Key.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-fingerprint', class: 'icon size-32 color-white', alt: 'Authentication' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_protocol_handling')), title: 'Protocol Handling', description: 'Protocol handling enables web apps to register their ability to open links with particular URL schemes.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:language', class: 'icon size-32 color-white', alt: 'Protocol Handling' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_file_handling')), title: 'File Handling API', description: 'The File Handling API enables web apps to register as file handlers with the operating system' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:folder-open', class: 'icon size-32 color-white', alt: 'File Handling API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { link: (path('app_feature_contact_picker')), title: 'Contact picker', description: 'The Contact Picker API allows web apps to select the user\\'s contacts after permission has been granted.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:account-box', class: 'icon size-32 color-white', alt: 'Contact picker' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_web_share')), title: 'Web share', description: 'The Web Share API invokes the native share mechanism of the device and allows users to share text, URLs or files.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:share', class: 'icon size-32 color-white', alt: 'Web share' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { link: (path('app_feature_barcode_detection')), title: 'Barcode detection', description: 'The Barcode Detection API detects barcodes and QR codes in images.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:qr-code-scanner', class: 'icon size-32 color-white', alt: 'Barcode detection' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { link: (path('app_feature_face_detection')), title: 'Face detection', description: 'The Shape Detection API detects faces in images.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:face', class: 'icon size-32 color-white', alt: 'Face detection' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_vibration')), title: 'Vibration', description: 'The Vibration API enables web apps to make a mobile device vibrate.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:vibration', class: 'icon size-32 color-white', alt: 'Vibration' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_audio_recording')), title: 'Audio recording', description: 'Record audio using MediaRecorder and visualize audio using Web Audio API.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:mic', class: 'icon size-32 color-white', alt: 'Audio recording' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_audio')), title: 'Audio', description: 'The Media Session API allows web apps to display controls for media playback on a device\\'s lock screen.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:round-play-circle-filled', class: 'icon size-32 color-white', alt: 'Audio' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { link: (path('app_feature_audio_session')), title: 'Audio Session API', description: 'The Audio Session API configures how audio from web apps should mix with audio from native apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:tune', class: 'icon size-32 color-white', alt: 'Audio Session API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_screen_capture')), title: 'Screen Capturing', description: 'Capture Handle and Captured Surface Control enable screen capturing web apps to remotely control captured web apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-share', class: 'icon size-32 color-white', alt: 'Screen Capturing' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_element_capture')), title: 'Element Capture', description: 'Element Capture enables screen capturing web apps to record specific HTML elements.' } %}
                    {% block content %}<img src=\"{{ asset('images/element-capture.svg') }}\" alt=\"Element capture\" />
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { link: (path('app_feature_background_sync')), title: 'Background Sync API', description: 'The Background Sync API enables web apps to defer tasks when it\\'s offline so they can be run when the network connection is restored.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:sync', class: 'icon size-32 color-white', alt: 'Background Sync API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { link: (path('app_feature_background_fetch')), title: 'Background Fetch API', description: 'The Background Fetch API enables web apps to download large files in the background even when the app is not running.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:downloading', class: 'icon size-32 color-white', alt: 'Background Fetch API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_storage')), title: 'Storage API', description: 'The Storage API enables web apps to persist structured data in the user\\'s browser.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:inventory', class: 'icon size-32 color-white', alt: 'Storage API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_bluetooth')), title: 'Bluetooth', description: 'The Web Bluetooth API enables web apps to connect to Bluetooth Low Energy (BLE) devices and read values from or write values to it.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:bluetooth', class: 'icon size-32 color-white', alt: 'Bluetooth' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_nfc')), title: 'NFC', description: 'The Web NFC API enables web apps to read and write to NFC tags.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:nfc', class: 'icon size-32 color-white', alt: 'NFC' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { link: (path('app_feature_ar_vr')), title: 'AR/VR', description: 'Augmented reality enables web apps to place virtual objects in reality.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:layers', class: 'icon size-32 color-white', alt: 'AR/VR' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { link: (path('app_feature_payment')), title: 'Payment', description: 'The Payment Request API provides a browser-based method to enable users to make payments on the web, using a credit card, Apple Pay or Google Pay.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:credit-card', class: 'icon size-32 color-white', alt: 'Payment' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_wake_lock')), title: 'Wake lock', description: 'The Screen Wake Lock API enables web apps to prevent devices from dimming or locking the screen when the app needs to keep running.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-lock-portrait', class: 'icon size-32 color-white', alt: 'Wake lock' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_orientation')), title: 'Orientation', description: 'The DeviceOrientationEvent gives information about the physical orientation of the user\\'s device.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-rotation', class: 'icon size-32 color-white', alt: 'Orientation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_device_motion')), title: 'Motion', description: 'The DeviceMotionEvent gives information about the speed of changes for the position and orientation of the user\\'s device.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:3d-rotation', class: 'icon size-32 color-white', alt: 'Motion' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_network_info')), title: 'Network info', description: 'The NetworkInformation API provides information about the connection of a device, allowing web apps to adapt functionality based on network quality.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:network-check', class: 'icon size-32 color-white', alt: 'Network info' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_speech_synthesis')), title: 'Speech synthesis', description: 'Speech synthesis provides text-to-speech and allows programs to read out their text content.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:record-voice-over', class: 'icon size-32 color-white', alt: 'Speech synthesis' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_speech_recognition')), title: 'Speech recognition', description: 'Speech recognition is part of the Web Speech API and provides the ability to recognize voice context from an audio input.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:hearing', class: 'icon size-32 color-white', alt: 'Speech recognition' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_multi_touch')), title: 'Multi touch', description: 'Touch events enable web apps to capture complex touch behaviour.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:touch-app', class: 'icon size-32 color-white', alt: 'Multi touch' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_i18n')), title: 'i18n', description: 'Internationalization (i18n) enables web apps to adapt to different languages and regions.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'fluent-mdl2:locale-language', class: 'icon size-32 color-white', alt: 'i18n' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_presentation')), title: 'Presentation', description: 'The Presentation API enables web apps to display content on external screens.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ri:presentation-fill', class: 'icon size-32 color-white', alt: 'presentation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

        </ul>
    </div>

</section>", "components/Features.html.twig", "/Users/praveenmujawdiya/Documents/survos/pwa-f7/templates/components/Features.html.twig");
    }
}


/* components/Features.html.twig */
class __TwigTemplate_1fb5cbdf94a162448bd258deeed21be9___24088788681 extends Template
{
    private Source $source;
    /**
     * @var array<string, Template>
     */
    private array $macros = [];

    public function __construct(Environment $env)
    {
        parent::__construct($env);

        $this->source = $this->getSourceContext();

        $this->blocks = [
            'outer__block_fallback' => [$this, 'block_outer__block_fallback'],
            'content' => [$this, 'block_content'],
        ];
    }

    protected function doGetParent(array $context): bool|string|Template|TemplateWrapper
    {
        // line 122
        return $this->loadTemplate((isset($context["__parent__"]) || array_key_exists("__parent__", $context) ? $context["__parent__"] : (function () { throw new RuntimeError('Variable "__parent__" does not exist.', 122, $this->source); })()), "components/Features.html.twig", 122);
    }

    protected function doDisplay(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        yield from $this->getParent($context)->unwrap()->yield($context, array_merge($this->blocks, $blocks));
        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

    }

    /**
     * @return iterable<null|scalar|\Stringable>
     */
    public function block_outer__block_fallback(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        yield from [];
    }

    // line 123
    /**
     * @return iterable<null|scalar|\Stringable>
     */
    public function block_content(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        yield $this->env->getRuntime('Symfony\UX\TwigComponent\Twig\ComponentRuntime')->render("ux:icon", ["name" => "material-symbols:tune", "class" => "icon size-32 color-white", "alt" => "Audio Session API"]);
        yield "
                ";
        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        yield from [];
    }

    /**
     * @codeCoverageIgnore
     */
    public function getTemplateName(): string
    {
        return "components/Features.html.twig";
    }

    /**
     * @codeCoverageIgnore
     */
    public function isTraitable(): bool
    {
        return false;
    }

    /**
     * @codeCoverageIgnore
     */
    public function getDebugInfo(): array
    {
        return array (  8310 => 123,  8255 => 122,  7933 => 117,  7878 => 116,  7556 => 111,  7501 => 110,  7179 => 105,  7124 => 104,  6802 => 99,  6747 => 98,  6425 => 93,  6370 => 92,  6048 => 87,  5993 => 86,  5671 => 81,  5616 => 80,  5294 => 75,  5239 => 74,  4917 => 69,  4862 => 68,  4540 => 63,  4485 => 62,  4163 => 57,  4108 => 56,  3786 => 51,  3731 => 50,  3409 => 45,  3354 => 44,  3032 => 39,  2977 => 38,  2655 => 33,  2600 => 32,  2278 => 27,  2223 => 26,  1901 => 21,  1846 => 20,  1524 => 15,  1469 => 14,  1147 => 9,  1092 => 8,  782 => 233,  768 => 230,  763 => 227,  749 => 224,  744 => 221,  730 => 218,  725 => 215,  711 => 212,  706 => 209,  692 => 206,  687 => 203,  673 => 200,  668 => 197,  654 => 194,  649 => 191,  635 => 188,  630 => 185,  616 => 182,  611 => 179,  597 => 176,  592 => 173,  578 => 170,  573 => 167,  559 => 164,  554 => 161,  540 => 158,  535 => 155,  521 => 152,  516 => 149,  502 => 146,  497 => 143,  483 => 140,  478 => 137,  464 => 134,  459 => 131,  445 => 128,  440 => 125,  426 => 122,  421 => 119,  407 => 116,  402 => 113,  388 => 110,  383 => 107,  369 => 104,  364 => 101,  350 => 98,  345 => 95,  331 => 92,  326 => 89,  312 => 86,  307 => 83,  293 => 80,  288 => 77,  274 => 74,  269 => 71,  255 => 68,  250 => 65,  236 => 62,  231 => 59,  217 => 56,  212 => 53,  198 => 50,  193 => 47,  179 => 44,  174 => 41,  160 => 38,  155 => 35,  141 => 32,  136 => 29,  122 => 26,  117 => 23,  103 => 20,  98 => 17,  84 => 14,  79 => 11,  65 => 8,  57 => 3,  51 => 1,);
    }

    public function getSourceContext(): Source
    {
        return new Source("<section {{ attributes }}>

    <h2 class=\"block-title block-title-medium\">{{ 'homepage.demo'|trans }}</h2>
    <div class=\"list cards-list media-list inset margin-vertical-half\">
        <ul class=\"row align-items-stretch justify-content-flex-start\" style=\"column-gap: var(--f7-grid-gap);\">

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_installation')), title: 'Installation', description: 'Using the beforeinstallprompt event, a native dialog can be displayed to install a web app' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:install-mobile', class: 'icon size-32 color-white', alt: 'Install' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_offline_support')), title: 'Offline support', description: 'The Service Worker enables web apps to work offline' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:download-for-offline', class: 'icon size-32 color-white', alt: 'Offline support' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_notifications')), title: 'Notifications', description: 'The Notifications API enables web apps to display notifications, even when the app is not active.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:notifications-outline', class: 'icon size-32 color-white', alt: 'Notifications' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_shortcuts')), title: 'Shortcuts', description: 'Shortcuts provide quick access to pages in your app from the app icon.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'tdesign:mobile-shortcut-filled', class: 'icon size-32 color-white', alt: 'Shortcuts' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_view_transition')), title: 'View Transitions', description: 'The View Transitions API enables app-like transitions between pages.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:auto-awesome-motion', class: 'icon size-32 color-white', alt: 'View Transitions' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_geolocation')), title: 'Geolocation', description: 'The Geolocation API enables users to share their location with web apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-gps-fixed', class: 'icon size-32 color-white', alt: 'Geolocation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_media_capture')), title: 'Media capture', description: 'Media capture allows web apps to use the camera and microphone of a device' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:videocam', class: 'icon size-32 color-white', alt: 'Media capture' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-deeporange\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_picture_in_picture')), title: 'Picture-in-picture', description: 'The Document Picture-in-Picture API makes it possible to open an always-on-top window that can be populated with arbitrary HTML content.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:picture-in-picture', class: 'icon size-32 color-white', alt: 'Picture-in-picture' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_file_system')), title: 'File System', description: 'Access to the file system of the user\\'s device' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-insert-drive-file', class: 'icon size-32 color-white', alt: 'File System' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_authentication')), title: 'Authentication', description: 'Web Authentication API (WebAuthn) enables passwordless authentication through your device\\'s fingerprint reader or an external USB Security Key.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-fingerprint', class: 'icon size-32 color-white', alt: 'Authentication' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_protocol_handling')), title: 'Protocol Handling', description: 'Protocol handling enables web apps to register their ability to open links with particular URL schemes.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:language', class: 'icon size-32 color-white', alt: 'Protocol Handling' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_file_handling')), title: 'File Handling API', description: 'The File Handling API enables web apps to register as file handlers with the operating system' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:folder-open', class: 'icon size-32 color-white', alt: 'File Handling API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { link: (path('app_feature_contact_picker')), title: 'Contact picker', description: 'The Contact Picker API allows web apps to select the user\\'s contacts after permission has been granted.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:account-box', class: 'icon size-32 color-white', alt: 'Contact picker' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_web_share')), title: 'Web share', description: 'The Web Share API invokes the native share mechanism of the device and allows users to share text, URLs or files.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:share', class: 'icon size-32 color-white', alt: 'Web share' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { link: (path('app_feature_barcode_detection')), title: 'Barcode detection', description: 'The Barcode Detection API detects barcodes and QR codes in images.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:qr-code-scanner', class: 'icon size-32 color-white', alt: 'Barcode detection' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { link: (path('app_feature_face_detection')), title: 'Face detection', description: 'The Shape Detection API detects faces in images.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:face', class: 'icon size-32 color-white', alt: 'Face detection' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_vibration')), title: 'Vibration', description: 'The Vibration API enables web apps to make a mobile device vibrate.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:vibration', class: 'icon size-32 color-white', alt: 'Vibration' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_audio_recording')), title: 'Audio recording', description: 'Record audio using MediaRecorder and visualize audio using Web Audio API.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:mic', class: 'icon size-32 color-white', alt: 'Audio recording' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_audio')), title: 'Audio', description: 'The Media Session API allows web apps to display controls for media playback on a device\\'s lock screen.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:round-play-circle-filled', class: 'icon size-32 color-white', alt: 'Audio' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { link: (path('app_feature_audio_session')), title: 'Audio Session API', description: 'The Audio Session API configures how audio from web apps should mix with audio from native apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:tune', class: 'icon size-32 color-white', alt: 'Audio Session API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_screen_capture')), title: 'Screen Capturing', description: 'Capture Handle and Captured Surface Control enable screen capturing web apps to remotely control captured web apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-share', class: 'icon size-32 color-white', alt: 'Screen Capturing' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_element_capture')), title: 'Element Capture', description: 'Element Capture enables screen capturing web apps to record specific HTML elements.' } %}
                    {% block content %}<img src=\"{{ asset('images/element-capture.svg') }}\" alt=\"Element capture\" />
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { link: (path('app_feature_background_sync')), title: 'Background Sync API', description: 'The Background Sync API enables web apps to defer tasks when it\\'s offline so they can be run when the network connection is restored.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:sync', class: 'icon size-32 color-white', alt: 'Background Sync API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { link: (path('app_feature_background_fetch')), title: 'Background Fetch API', description: 'The Background Fetch API enables web apps to download large files in the background even when the app is not running.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:downloading', class: 'icon size-32 color-white', alt: 'Background Fetch API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_storage')), title: 'Storage API', description: 'The Storage API enables web apps to persist structured data in the user\\'s browser.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:inventory', class: 'icon size-32 color-white', alt: 'Storage API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_bluetooth')), title: 'Bluetooth', description: 'The Web Bluetooth API enables web apps to connect to Bluetooth Low Energy (BLE) devices and read values from or write values to it.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:bluetooth', class: 'icon size-32 color-white', alt: 'Bluetooth' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_nfc')), title: 'NFC', description: 'The Web NFC API enables web apps to read and write to NFC tags.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:nfc', class: 'icon size-32 color-white', alt: 'NFC' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { link: (path('app_feature_ar_vr')), title: 'AR/VR', description: 'Augmented reality enables web apps to place virtual objects in reality.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:layers', class: 'icon size-32 color-white', alt: 'AR/VR' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { link: (path('app_feature_payment')), title: 'Payment', description: 'The Payment Request API provides a browser-based method to enable users to make payments on the web, using a credit card, Apple Pay or Google Pay.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:credit-card', class: 'icon size-32 color-white', alt: 'Payment' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_wake_lock')), title: 'Wake lock', description: 'The Screen Wake Lock API enables web apps to prevent devices from dimming or locking the screen when the app needs to keep running.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-lock-portrait', class: 'icon size-32 color-white', alt: 'Wake lock' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_orientation')), title: 'Orientation', description: 'The DeviceOrientationEvent gives information about the physical orientation of the user\\'s device.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-rotation', class: 'icon size-32 color-white', alt: 'Orientation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_device_motion')), title: 'Motion', description: 'The DeviceMotionEvent gives information about the speed of changes for the position and orientation of the user\\'s device.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:3d-rotation', class: 'icon size-32 color-white', alt: 'Motion' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_network_info')), title: 'Network info', description: 'The NetworkInformation API provides information about the connection of a device, allowing web apps to adapt functionality based on network quality.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:network-check', class: 'icon size-32 color-white', alt: 'Network info' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_speech_synthesis')), title: 'Speech synthesis', description: 'Speech synthesis provides text-to-speech and allows programs to read out their text content.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:record-voice-over', class: 'icon size-32 color-white', alt: 'Speech synthesis' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_speech_recognition')), title: 'Speech recognition', description: 'Speech recognition is part of the Web Speech API and provides the ability to recognize voice context from an audio input.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:hearing', class: 'icon size-32 color-white', alt: 'Speech recognition' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_multi_touch')), title: 'Multi touch', description: 'Touch events enable web apps to capture complex touch behaviour.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:touch-app', class: 'icon size-32 color-white', alt: 'Multi touch' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_i18n')), title: 'i18n', description: 'Internationalization (i18n) enables web apps to adapt to different languages and regions.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'fluent-mdl2:locale-language', class: 'icon size-32 color-white', alt: 'i18n' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_presentation')), title: 'Presentation', description: 'The Presentation API enables web apps to display content on external screens.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ri:presentation-fill', class: 'icon size-32 color-white', alt: 'presentation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

        </ul>
    </div>

</section>", "components/Features.html.twig", "/Users/praveenmujawdiya/Documents/survos/pwa-f7/templates/components/Features.html.twig");
    }
}


/* components/Features.html.twig */
class __TwigTemplate_1fb5cbdf94a162448bd258deeed21be9___18665620581 extends Template
{
    private Source $source;
    /**
     * @var array<string, Template>
     */
    private array $macros = [];

    public function __construct(Environment $env)
    {
        parent::__construct($env);

        $this->source = $this->getSourceContext();

        $this->blocks = [
            'outer__block_fallback' => [$this, 'block_outer__block_fallback'],
            'content' => [$this, 'block_content'],
        ];
    }

    protected function doGetParent(array $context): bool|string|Template|TemplateWrapper
    {
        // line 128
        return $this->loadTemplate((isset($context["__parent__"]) || array_key_exists("__parent__", $context) ? $context["__parent__"] : (function () { throw new RuntimeError('Variable "__parent__" does not exist.', 128, $this->source); })()), "components/Features.html.twig", 128);
    }

    protected function doDisplay(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        yield from $this->getParent($context)->unwrap()->yield($context, array_merge($this->blocks, $blocks));
        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

    }

    /**
     * @return iterable<null|scalar|\Stringable>
     */
    public function block_outer__block_fallback(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        yield from [];
    }

    // line 129
    /**
     * @return iterable<null|scalar|\Stringable>
     */
    public function block_content(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        yield $this->env->getRuntime('Symfony\UX\TwigComponent\Twig\ComponentRuntime')->render("ux:icon", ["name" => "material-symbols:screen-share", "class" => "icon size-32 color-white", "alt" => "Screen Capturing"]);
        yield "
                ";
        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        yield from [];
    }

    /**
     * @codeCoverageIgnore
     */
    public function getTemplateName(): string
    {
        return "components/Features.html.twig";
    }

    /**
     * @codeCoverageIgnore
     */
    public function isTraitable(): bool
    {
        return false;
    }

    /**
     * @codeCoverageIgnore
     */
    public function getDebugInfo(): array
    {
        return array (  8687 => 129,  8632 => 128,  8310 => 123,  8255 => 122,  7933 => 117,  7878 => 116,  7556 => 111,  7501 => 110,  7179 => 105,  7124 => 104,  6802 => 99,  6747 => 98,  6425 => 93,  6370 => 92,  6048 => 87,  5993 => 86,  5671 => 81,  5616 => 80,  5294 => 75,  5239 => 74,  4917 => 69,  4862 => 68,  4540 => 63,  4485 => 62,  4163 => 57,  4108 => 56,  3786 => 51,  3731 => 50,  3409 => 45,  3354 => 44,  3032 => 39,  2977 => 38,  2655 => 33,  2600 => 32,  2278 => 27,  2223 => 26,  1901 => 21,  1846 => 20,  1524 => 15,  1469 => 14,  1147 => 9,  1092 => 8,  782 => 233,  768 => 230,  763 => 227,  749 => 224,  744 => 221,  730 => 218,  725 => 215,  711 => 212,  706 => 209,  692 => 206,  687 => 203,  673 => 200,  668 => 197,  654 => 194,  649 => 191,  635 => 188,  630 => 185,  616 => 182,  611 => 179,  597 => 176,  592 => 173,  578 => 170,  573 => 167,  559 => 164,  554 => 161,  540 => 158,  535 => 155,  521 => 152,  516 => 149,  502 => 146,  497 => 143,  483 => 140,  478 => 137,  464 => 134,  459 => 131,  445 => 128,  440 => 125,  426 => 122,  421 => 119,  407 => 116,  402 => 113,  388 => 110,  383 => 107,  369 => 104,  364 => 101,  350 => 98,  345 => 95,  331 => 92,  326 => 89,  312 => 86,  307 => 83,  293 => 80,  288 => 77,  274 => 74,  269 => 71,  255 => 68,  250 => 65,  236 => 62,  231 => 59,  217 => 56,  212 => 53,  198 => 50,  193 => 47,  179 => 44,  174 => 41,  160 => 38,  155 => 35,  141 => 32,  136 => 29,  122 => 26,  117 => 23,  103 => 20,  98 => 17,  84 => 14,  79 => 11,  65 => 8,  57 => 3,  51 => 1,);
    }

    public function getSourceContext(): Source
    {
        return new Source("<section {{ attributes }}>

    <h2 class=\"block-title block-title-medium\">{{ 'homepage.demo'|trans }}</h2>
    <div class=\"list cards-list media-list inset margin-vertical-half\">
        <ul class=\"row align-items-stretch justify-content-flex-start\" style=\"column-gap: var(--f7-grid-gap);\">

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_installation')), title: 'Installation', description: 'Using the beforeinstallprompt event, a native dialog can be displayed to install a web app' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:install-mobile', class: 'icon size-32 color-white', alt: 'Install' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_offline_support')), title: 'Offline support', description: 'The Service Worker enables web apps to work offline' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:download-for-offline', class: 'icon size-32 color-white', alt: 'Offline support' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_notifications')), title: 'Notifications', description: 'The Notifications API enables web apps to display notifications, even when the app is not active.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:notifications-outline', class: 'icon size-32 color-white', alt: 'Notifications' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_shortcuts')), title: 'Shortcuts', description: 'Shortcuts provide quick access to pages in your app from the app icon.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'tdesign:mobile-shortcut-filled', class: 'icon size-32 color-white', alt: 'Shortcuts' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_view_transition')), title: 'View Transitions', description: 'The View Transitions API enables app-like transitions between pages.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:auto-awesome-motion', class: 'icon size-32 color-white', alt: 'View Transitions' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_geolocation')), title: 'Geolocation', description: 'The Geolocation API enables users to share their location with web apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-gps-fixed', class: 'icon size-32 color-white', alt: 'Geolocation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_media_capture')), title: 'Media capture', description: 'Media capture allows web apps to use the camera and microphone of a device' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:videocam', class: 'icon size-32 color-white', alt: 'Media capture' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-deeporange\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_picture_in_picture')), title: 'Picture-in-picture', description: 'The Document Picture-in-Picture API makes it possible to open an always-on-top window that can be populated with arbitrary HTML content.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:picture-in-picture', class: 'icon size-32 color-white', alt: 'Picture-in-picture' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_file_system')), title: 'File System', description: 'Access to the file system of the user\\'s device' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-insert-drive-file', class: 'icon size-32 color-white', alt: 'File System' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_authentication')), title: 'Authentication', description: 'Web Authentication API (WebAuthn) enables passwordless authentication through your device\\'s fingerprint reader or an external USB Security Key.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-fingerprint', class: 'icon size-32 color-white', alt: 'Authentication' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_protocol_handling')), title: 'Protocol Handling', description: 'Protocol handling enables web apps to register their ability to open links with particular URL schemes.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:language', class: 'icon size-32 color-white', alt: 'Protocol Handling' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_file_handling')), title: 'File Handling API', description: 'The File Handling API enables web apps to register as file handlers with the operating system' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:folder-open', class: 'icon size-32 color-white', alt: 'File Handling API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { link: (path('app_feature_contact_picker')), title: 'Contact picker', description: 'The Contact Picker API allows web apps to select the user\\'s contacts after permission has been granted.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:account-box', class: 'icon size-32 color-white', alt: 'Contact picker' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_web_share')), title: 'Web share', description: 'The Web Share API invokes the native share mechanism of the device and allows users to share text, URLs or files.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:share', class: 'icon size-32 color-white', alt: 'Web share' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { link: (path('app_feature_barcode_detection')), title: 'Barcode detection', description: 'The Barcode Detection API detects barcodes and QR codes in images.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:qr-code-scanner', class: 'icon size-32 color-white', alt: 'Barcode detection' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { link: (path('app_feature_face_detection')), title: 'Face detection', description: 'The Shape Detection API detects faces in images.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:face', class: 'icon size-32 color-white', alt: 'Face detection' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_vibration')), title: 'Vibration', description: 'The Vibration API enables web apps to make a mobile device vibrate.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:vibration', class: 'icon size-32 color-white', alt: 'Vibration' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_audio_recording')), title: 'Audio recording', description: 'Record audio using MediaRecorder and visualize audio using Web Audio API.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:mic', class: 'icon size-32 color-white', alt: 'Audio recording' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_audio')), title: 'Audio', description: 'The Media Session API allows web apps to display controls for media playback on a device\\'s lock screen.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:round-play-circle-filled', class: 'icon size-32 color-white', alt: 'Audio' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { link: (path('app_feature_audio_session')), title: 'Audio Session API', description: 'The Audio Session API configures how audio from web apps should mix with audio from native apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:tune', class: 'icon size-32 color-white', alt: 'Audio Session API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_screen_capture')), title: 'Screen Capturing', description: 'Capture Handle and Captured Surface Control enable screen capturing web apps to remotely control captured web apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-share', class: 'icon size-32 color-white', alt: 'Screen Capturing' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_element_capture')), title: 'Element Capture', description: 'Element Capture enables screen capturing web apps to record specific HTML elements.' } %}
                    {% block content %}<img src=\"{{ asset('images/element-capture.svg') }}\" alt=\"Element capture\" />
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { link: (path('app_feature_background_sync')), title: 'Background Sync API', description: 'The Background Sync API enables web apps to defer tasks when it\\'s offline so they can be run when the network connection is restored.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:sync', class: 'icon size-32 color-white', alt: 'Background Sync API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { link: (path('app_feature_background_fetch')), title: 'Background Fetch API', description: 'The Background Fetch API enables web apps to download large files in the background even when the app is not running.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:downloading', class: 'icon size-32 color-white', alt: 'Background Fetch API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_storage')), title: 'Storage API', description: 'The Storage API enables web apps to persist structured data in the user\\'s browser.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:inventory', class: 'icon size-32 color-white', alt: 'Storage API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_bluetooth')), title: 'Bluetooth', description: 'The Web Bluetooth API enables web apps to connect to Bluetooth Low Energy (BLE) devices and read values from or write values to it.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:bluetooth', class: 'icon size-32 color-white', alt: 'Bluetooth' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_nfc')), title: 'NFC', description: 'The Web NFC API enables web apps to read and write to NFC tags.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:nfc', class: 'icon size-32 color-white', alt: 'NFC' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { link: (path('app_feature_ar_vr')), title: 'AR/VR', description: 'Augmented reality enables web apps to place virtual objects in reality.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:layers', class: 'icon size-32 color-white', alt: 'AR/VR' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { link: (path('app_feature_payment')), title: 'Payment', description: 'The Payment Request API provides a browser-based method to enable users to make payments on the web, using a credit card, Apple Pay or Google Pay.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:credit-card', class: 'icon size-32 color-white', alt: 'Payment' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_wake_lock')), title: 'Wake lock', description: 'The Screen Wake Lock API enables web apps to prevent devices from dimming or locking the screen when the app needs to keep running.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-lock-portrait', class: 'icon size-32 color-white', alt: 'Wake lock' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_orientation')), title: 'Orientation', description: 'The DeviceOrientationEvent gives information about the physical orientation of the user\\'s device.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-rotation', class: 'icon size-32 color-white', alt: 'Orientation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_device_motion')), title: 'Motion', description: 'The DeviceMotionEvent gives information about the speed of changes for the position and orientation of the user\\'s device.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:3d-rotation', class: 'icon size-32 color-white', alt: 'Motion' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_network_info')), title: 'Network info', description: 'The NetworkInformation API provides information about the connection of a device, allowing web apps to adapt functionality based on network quality.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:network-check', class: 'icon size-32 color-white', alt: 'Network info' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_speech_synthesis')), title: 'Speech synthesis', description: 'Speech synthesis provides text-to-speech and allows programs to read out their text content.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:record-voice-over', class: 'icon size-32 color-white', alt: 'Speech synthesis' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_speech_recognition')), title: 'Speech recognition', description: 'Speech recognition is part of the Web Speech API and provides the ability to recognize voice context from an audio input.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:hearing', class: 'icon size-32 color-white', alt: 'Speech recognition' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_multi_touch')), title: 'Multi touch', description: 'Touch events enable web apps to capture complex touch behaviour.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:touch-app', class: 'icon size-32 color-white', alt: 'Multi touch' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_i18n')), title: 'i18n', description: 'Internationalization (i18n) enables web apps to adapt to different languages and regions.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'fluent-mdl2:locale-language', class: 'icon size-32 color-white', alt: 'i18n' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_presentation')), title: 'Presentation', description: 'The Presentation API enables web apps to display content on external screens.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ri:presentation-fill', class: 'icon size-32 color-white', alt: 'presentation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

        </ul>
    </div>

</section>", "components/Features.html.twig", "/Users/praveenmujawdiya/Documents/survos/pwa-f7/templates/components/Features.html.twig");
    }
}


/* components/Features.html.twig */
class __TwigTemplate_1fb5cbdf94a162448bd258deeed21be9___21461748161 extends Template
{
    private Source $source;
    /**
     * @var array<string, Template>
     */
    private array $macros = [];

    public function __construct(Environment $env)
    {
        parent::__construct($env);

        $this->source = $this->getSourceContext();

        $this->blocks = [
            'outer__block_fallback' => [$this, 'block_outer__block_fallback'],
            'content' => [$this, 'block_content'],
        ];
    }

    protected function doGetParent(array $context): bool|string|Template|TemplateWrapper
    {
        // line 134
        return $this->loadTemplate((isset($context["__parent__"]) || array_key_exists("__parent__", $context) ? $context["__parent__"] : (function () { throw new RuntimeError('Variable "__parent__" does not exist.', 134, $this->source); })()), "components/Features.html.twig", 134);
    }

    protected function doDisplay(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        yield from $this->getParent($context)->unwrap()->yield($context, array_merge($this->blocks, $blocks));
        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

    }

    /**
     * @return iterable<null|scalar|\Stringable>
     */
    public function block_outer__block_fallback(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        yield from [];
    }

    // line 135
    /**
     * @return iterable<null|scalar|\Stringable>
     */
    public function block_content(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        yield "<img src=\"";
        yield $this->env->getRuntime('Twig\Runtime\EscaperRuntime')->escape($this->extensions['Symfony\Bridge\Twig\Extension\AssetExtension']->getAssetUrl("images/element-capture.svg"), "html", null, true);
        yield "\" alt=\"Element capture\" />
                ";
        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        yield from [];
    }

    /**
     * @codeCoverageIgnore
     */
    public function getTemplateName(): string
    {
        return "components/Features.html.twig";
    }

    /**
     * @codeCoverageIgnore
     */
    public function isTraitable(): bool
    {
        return false;
    }

    /**
     * @codeCoverageIgnore
     */
    public function getDebugInfo(): array
    {
        return array (  9064 => 135,  9009 => 134,  8687 => 129,  8632 => 128,  8310 => 123,  8255 => 122,  7933 => 117,  7878 => 116,  7556 => 111,  7501 => 110,  7179 => 105,  7124 => 104,  6802 => 99,  6747 => 98,  6425 => 93,  6370 => 92,  6048 => 87,  5993 => 86,  5671 => 81,  5616 => 80,  5294 => 75,  5239 => 74,  4917 => 69,  4862 => 68,  4540 => 63,  4485 => 62,  4163 => 57,  4108 => 56,  3786 => 51,  3731 => 50,  3409 => 45,  3354 => 44,  3032 => 39,  2977 => 38,  2655 => 33,  2600 => 32,  2278 => 27,  2223 => 26,  1901 => 21,  1846 => 20,  1524 => 15,  1469 => 14,  1147 => 9,  1092 => 8,  782 => 233,  768 => 230,  763 => 227,  749 => 224,  744 => 221,  730 => 218,  725 => 215,  711 => 212,  706 => 209,  692 => 206,  687 => 203,  673 => 200,  668 => 197,  654 => 194,  649 => 191,  635 => 188,  630 => 185,  616 => 182,  611 => 179,  597 => 176,  592 => 173,  578 => 170,  573 => 167,  559 => 164,  554 => 161,  540 => 158,  535 => 155,  521 => 152,  516 => 149,  502 => 146,  497 => 143,  483 => 140,  478 => 137,  464 => 134,  459 => 131,  445 => 128,  440 => 125,  426 => 122,  421 => 119,  407 => 116,  402 => 113,  388 => 110,  383 => 107,  369 => 104,  364 => 101,  350 => 98,  345 => 95,  331 => 92,  326 => 89,  312 => 86,  307 => 83,  293 => 80,  288 => 77,  274 => 74,  269 => 71,  255 => 68,  250 => 65,  236 => 62,  231 => 59,  217 => 56,  212 => 53,  198 => 50,  193 => 47,  179 => 44,  174 => 41,  160 => 38,  155 => 35,  141 => 32,  136 => 29,  122 => 26,  117 => 23,  103 => 20,  98 => 17,  84 => 14,  79 => 11,  65 => 8,  57 => 3,  51 => 1,);
    }

    public function getSourceContext(): Source
    {
        return new Source("<section {{ attributes }}>

    <h2 class=\"block-title block-title-medium\">{{ 'homepage.demo'|trans }}</h2>
    <div class=\"list cards-list media-list inset margin-vertical-half\">
        <ul class=\"row align-items-stretch justify-content-flex-start\" style=\"column-gap: var(--f7-grid-gap);\">

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_installation')), title: 'Installation', description: 'Using the beforeinstallprompt event, a native dialog can be displayed to install a web app' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:install-mobile', class: 'icon size-32 color-white', alt: 'Install' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_offline_support')), title: 'Offline support', description: 'The Service Worker enables web apps to work offline' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:download-for-offline', class: 'icon size-32 color-white', alt: 'Offline support' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_notifications')), title: 'Notifications', description: 'The Notifications API enables web apps to display notifications, even when the app is not active.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:notifications-outline', class: 'icon size-32 color-white', alt: 'Notifications' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_shortcuts')), title: 'Shortcuts', description: 'Shortcuts provide quick access to pages in your app from the app icon.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'tdesign:mobile-shortcut-filled', class: 'icon size-32 color-white', alt: 'Shortcuts' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_view_transition')), title: 'View Transitions', description: 'The View Transitions API enables app-like transitions between pages.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:auto-awesome-motion', class: 'icon size-32 color-white', alt: 'View Transitions' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_geolocation')), title: 'Geolocation', description: 'The Geolocation API enables users to share their location with web apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-gps-fixed', class: 'icon size-32 color-white', alt: 'Geolocation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_media_capture')), title: 'Media capture', description: 'Media capture allows web apps to use the camera and microphone of a device' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:videocam', class: 'icon size-32 color-white', alt: 'Media capture' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-deeporange\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_picture_in_picture')), title: 'Picture-in-picture', description: 'The Document Picture-in-Picture API makes it possible to open an always-on-top window that can be populated with arbitrary HTML content.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:picture-in-picture', class: 'icon size-32 color-white', alt: 'Picture-in-picture' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_file_system')), title: 'File System', description: 'Access to the file system of the user\\'s device' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-insert-drive-file', class: 'icon size-32 color-white', alt: 'File System' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_authentication')), title: 'Authentication', description: 'Web Authentication API (WebAuthn) enables passwordless authentication through your device\\'s fingerprint reader or an external USB Security Key.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-fingerprint', class: 'icon size-32 color-white', alt: 'Authentication' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_protocol_handling')), title: 'Protocol Handling', description: 'Protocol handling enables web apps to register their ability to open links with particular URL schemes.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:language', class: 'icon size-32 color-white', alt: 'Protocol Handling' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_file_handling')), title: 'File Handling API', description: 'The File Handling API enables web apps to register as file handlers with the operating system' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:folder-open', class: 'icon size-32 color-white', alt: 'File Handling API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { link: (path('app_feature_contact_picker')), title: 'Contact picker', description: 'The Contact Picker API allows web apps to select the user\\'s contacts after permission has been granted.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:account-box', class: 'icon size-32 color-white', alt: 'Contact picker' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_web_share')), title: 'Web share', description: 'The Web Share API invokes the native share mechanism of the device and allows users to share text, URLs or files.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:share', class: 'icon size-32 color-white', alt: 'Web share' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { link: (path('app_feature_barcode_detection')), title: 'Barcode detection', description: 'The Barcode Detection API detects barcodes and QR codes in images.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:qr-code-scanner', class: 'icon size-32 color-white', alt: 'Barcode detection' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { link: (path('app_feature_face_detection')), title: 'Face detection', description: 'The Shape Detection API detects faces in images.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:face', class: 'icon size-32 color-white', alt: 'Face detection' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_vibration')), title: 'Vibration', description: 'The Vibration API enables web apps to make a mobile device vibrate.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:vibration', class: 'icon size-32 color-white', alt: 'Vibration' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_audio_recording')), title: 'Audio recording', description: 'Record audio using MediaRecorder and visualize audio using Web Audio API.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:mic', class: 'icon size-32 color-white', alt: 'Audio recording' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_audio')), title: 'Audio', description: 'The Media Session API allows web apps to display controls for media playback on a device\\'s lock screen.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:round-play-circle-filled', class: 'icon size-32 color-white', alt: 'Audio' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { link: (path('app_feature_audio_session')), title: 'Audio Session API', description: 'The Audio Session API configures how audio from web apps should mix with audio from native apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:tune', class: 'icon size-32 color-white', alt: 'Audio Session API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_screen_capture')), title: 'Screen Capturing', description: 'Capture Handle and Captured Surface Control enable screen capturing web apps to remotely control captured web apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-share', class: 'icon size-32 color-white', alt: 'Screen Capturing' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_element_capture')), title: 'Element Capture', description: 'Element Capture enables screen capturing web apps to record specific HTML elements.' } %}
                    {% block content %}<img src=\"{{ asset('images/element-capture.svg') }}\" alt=\"Element capture\" />
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { link: (path('app_feature_background_sync')), title: 'Background Sync API', description: 'The Background Sync API enables web apps to defer tasks when it\\'s offline so they can be run when the network connection is restored.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:sync', class: 'icon size-32 color-white', alt: 'Background Sync API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { link: (path('app_feature_background_fetch')), title: 'Background Fetch API', description: 'The Background Fetch API enables web apps to download large files in the background even when the app is not running.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:downloading', class: 'icon size-32 color-white', alt: 'Background Fetch API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_storage')), title: 'Storage API', description: 'The Storage API enables web apps to persist structured data in the user\\'s browser.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:inventory', class: 'icon size-32 color-white', alt: 'Storage API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_bluetooth')), title: 'Bluetooth', description: 'The Web Bluetooth API enables web apps to connect to Bluetooth Low Energy (BLE) devices and read values from or write values to it.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:bluetooth', class: 'icon size-32 color-white', alt: 'Bluetooth' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_nfc')), title: 'NFC', description: 'The Web NFC API enables web apps to read and write to NFC tags.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:nfc', class: 'icon size-32 color-white', alt: 'NFC' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { link: (path('app_feature_ar_vr')), title: 'AR/VR', description: 'Augmented reality enables web apps to place virtual objects in reality.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:layers', class: 'icon size-32 color-white', alt: 'AR/VR' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { link: (path('app_feature_payment')), title: 'Payment', description: 'The Payment Request API provides a browser-based method to enable users to make payments on the web, using a credit card, Apple Pay or Google Pay.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:credit-card', class: 'icon size-32 color-white', alt: 'Payment' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_wake_lock')), title: 'Wake lock', description: 'The Screen Wake Lock API enables web apps to prevent devices from dimming or locking the screen when the app needs to keep running.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-lock-portrait', class: 'icon size-32 color-white', alt: 'Wake lock' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_orientation')), title: 'Orientation', description: 'The DeviceOrientationEvent gives information about the physical orientation of the user\\'s device.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-rotation', class: 'icon size-32 color-white', alt: 'Orientation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_device_motion')), title: 'Motion', description: 'The DeviceMotionEvent gives information about the speed of changes for the position and orientation of the user\\'s device.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:3d-rotation', class: 'icon size-32 color-white', alt: 'Motion' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_network_info')), title: 'Network info', description: 'The NetworkInformation API provides information about the connection of a device, allowing web apps to adapt functionality based on network quality.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:network-check', class: 'icon size-32 color-white', alt: 'Network info' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_speech_synthesis')), title: 'Speech synthesis', description: 'Speech synthesis provides text-to-speech and allows programs to read out their text content.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:record-voice-over', class: 'icon size-32 color-white', alt: 'Speech synthesis' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_speech_recognition')), title: 'Speech recognition', description: 'Speech recognition is part of the Web Speech API and provides the ability to recognize voice context from an audio input.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:hearing', class: 'icon size-32 color-white', alt: 'Speech recognition' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_multi_touch')), title: 'Multi touch', description: 'Touch events enable web apps to capture complex touch behaviour.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:touch-app', class: 'icon size-32 color-white', alt: 'Multi touch' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_i18n')), title: 'i18n', description: 'Internationalization (i18n) enables web apps to adapt to different languages and regions.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'fluent-mdl2:locale-language', class: 'icon size-32 color-white', alt: 'i18n' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_presentation')), title: 'Presentation', description: 'The Presentation API enables web apps to display content on external screens.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ri:presentation-fill', class: 'icon size-32 color-white', alt: 'presentation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

        </ul>
    </div>

</section>", "components/Features.html.twig", "/Users/praveenmujawdiya/Documents/survos/pwa-f7/templates/components/Features.html.twig");
    }
}


/* components/Features.html.twig */
class __TwigTemplate_1fb5cbdf94a162448bd258deeed21be9___9353517421 extends Template
{
    private Source $source;
    /**
     * @var array<string, Template>
     */
    private array $macros = [];

    public function __construct(Environment $env)
    {
        parent::__construct($env);

        $this->source = $this->getSourceContext();

        $this->blocks = [
            'outer__block_fallback' => [$this, 'block_outer__block_fallback'],
            'content' => [$this, 'block_content'],
        ];
    }

    protected function doGetParent(array $context): bool|string|Template|TemplateWrapper
    {
        // line 140
        return $this->loadTemplate((isset($context["__parent__"]) || array_key_exists("__parent__", $context) ? $context["__parent__"] : (function () { throw new RuntimeError('Variable "__parent__" does not exist.', 140, $this->source); })()), "components/Features.html.twig", 140);
    }

    protected function doDisplay(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        yield from $this->getParent($context)->unwrap()->yield($context, array_merge($this->blocks, $blocks));
        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

    }

    /**
     * @return iterable<null|scalar|\Stringable>
     */
    public function block_outer__block_fallback(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        yield from [];
    }

    // line 141
    /**
     * @return iterable<null|scalar|\Stringable>
     */
    public function block_content(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        yield $this->env->getRuntime('Symfony\UX\TwigComponent\Twig\ComponentRuntime')->render("ux:icon", ["name" => "material-symbols:sync", "class" => "icon size-32 color-white", "alt" => "Background Sync API"]);
        yield "
                ";
        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        yield from [];
    }

    /**
     * @codeCoverageIgnore
     */
    public function getTemplateName(): string
    {
        return "components/Features.html.twig";
    }

    /**
     * @codeCoverageIgnore
     */
    public function isTraitable(): bool
    {
        return false;
    }

    /**
     * @codeCoverageIgnore
     */
    public function getDebugInfo(): array
    {
        return array (  9442 => 141,  9387 => 140,  9064 => 135,  9009 => 134,  8687 => 129,  8632 => 128,  8310 => 123,  8255 => 122,  7933 => 117,  7878 => 116,  7556 => 111,  7501 => 110,  7179 => 105,  7124 => 104,  6802 => 99,  6747 => 98,  6425 => 93,  6370 => 92,  6048 => 87,  5993 => 86,  5671 => 81,  5616 => 80,  5294 => 75,  5239 => 74,  4917 => 69,  4862 => 68,  4540 => 63,  4485 => 62,  4163 => 57,  4108 => 56,  3786 => 51,  3731 => 50,  3409 => 45,  3354 => 44,  3032 => 39,  2977 => 38,  2655 => 33,  2600 => 32,  2278 => 27,  2223 => 26,  1901 => 21,  1846 => 20,  1524 => 15,  1469 => 14,  1147 => 9,  1092 => 8,  782 => 233,  768 => 230,  763 => 227,  749 => 224,  744 => 221,  730 => 218,  725 => 215,  711 => 212,  706 => 209,  692 => 206,  687 => 203,  673 => 200,  668 => 197,  654 => 194,  649 => 191,  635 => 188,  630 => 185,  616 => 182,  611 => 179,  597 => 176,  592 => 173,  578 => 170,  573 => 167,  559 => 164,  554 => 161,  540 => 158,  535 => 155,  521 => 152,  516 => 149,  502 => 146,  497 => 143,  483 => 140,  478 => 137,  464 => 134,  459 => 131,  445 => 128,  440 => 125,  426 => 122,  421 => 119,  407 => 116,  402 => 113,  388 => 110,  383 => 107,  369 => 104,  364 => 101,  350 => 98,  345 => 95,  331 => 92,  326 => 89,  312 => 86,  307 => 83,  293 => 80,  288 => 77,  274 => 74,  269 => 71,  255 => 68,  250 => 65,  236 => 62,  231 => 59,  217 => 56,  212 => 53,  198 => 50,  193 => 47,  179 => 44,  174 => 41,  160 => 38,  155 => 35,  141 => 32,  136 => 29,  122 => 26,  117 => 23,  103 => 20,  98 => 17,  84 => 14,  79 => 11,  65 => 8,  57 => 3,  51 => 1,);
    }

    public function getSourceContext(): Source
    {
        return new Source("<section {{ attributes }}>

    <h2 class=\"block-title block-title-medium\">{{ 'homepage.demo'|trans }}</h2>
    <div class=\"list cards-list media-list inset margin-vertical-half\">
        <ul class=\"row align-items-stretch justify-content-flex-start\" style=\"column-gap: var(--f7-grid-gap);\">

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_installation')), title: 'Installation', description: 'Using the beforeinstallprompt event, a native dialog can be displayed to install a web app' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:install-mobile', class: 'icon size-32 color-white', alt: 'Install' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_offline_support')), title: 'Offline support', description: 'The Service Worker enables web apps to work offline' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:download-for-offline', class: 'icon size-32 color-white', alt: 'Offline support' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_notifications')), title: 'Notifications', description: 'The Notifications API enables web apps to display notifications, even when the app is not active.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:notifications-outline', class: 'icon size-32 color-white', alt: 'Notifications' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_shortcuts')), title: 'Shortcuts', description: 'Shortcuts provide quick access to pages in your app from the app icon.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'tdesign:mobile-shortcut-filled', class: 'icon size-32 color-white', alt: 'Shortcuts' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_view_transition')), title: 'View Transitions', description: 'The View Transitions API enables app-like transitions between pages.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:auto-awesome-motion', class: 'icon size-32 color-white', alt: 'View Transitions' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_geolocation')), title: 'Geolocation', description: 'The Geolocation API enables users to share their location with web apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-gps-fixed', class: 'icon size-32 color-white', alt: 'Geolocation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_media_capture')), title: 'Media capture', description: 'Media capture allows web apps to use the camera and microphone of a device' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:videocam', class: 'icon size-32 color-white', alt: 'Media capture' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-deeporange\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_picture_in_picture')), title: 'Picture-in-picture', description: 'The Document Picture-in-Picture API makes it possible to open an always-on-top window that can be populated with arbitrary HTML content.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:picture-in-picture', class: 'icon size-32 color-white', alt: 'Picture-in-picture' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_file_system')), title: 'File System', description: 'Access to the file system of the user\\'s device' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-insert-drive-file', class: 'icon size-32 color-white', alt: 'File System' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_authentication')), title: 'Authentication', description: 'Web Authentication API (WebAuthn) enables passwordless authentication through your device\\'s fingerprint reader or an external USB Security Key.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-fingerprint', class: 'icon size-32 color-white', alt: 'Authentication' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_protocol_handling')), title: 'Protocol Handling', description: 'Protocol handling enables web apps to register their ability to open links with particular URL schemes.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:language', class: 'icon size-32 color-white', alt: 'Protocol Handling' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_file_handling')), title: 'File Handling API', description: 'The File Handling API enables web apps to register as file handlers with the operating system' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:folder-open', class: 'icon size-32 color-white', alt: 'File Handling API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { link: (path('app_feature_contact_picker')), title: 'Contact picker', description: 'The Contact Picker API allows web apps to select the user\\'s contacts after permission has been granted.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:account-box', class: 'icon size-32 color-white', alt: 'Contact picker' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_web_share')), title: 'Web share', description: 'The Web Share API invokes the native share mechanism of the device and allows users to share text, URLs or files.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:share', class: 'icon size-32 color-white', alt: 'Web share' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { link: (path('app_feature_barcode_detection')), title: 'Barcode detection', description: 'The Barcode Detection API detects barcodes and QR codes in images.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:qr-code-scanner', class: 'icon size-32 color-white', alt: 'Barcode detection' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { link: (path('app_feature_face_detection')), title: 'Face detection', description: 'The Shape Detection API detects faces in images.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:face', class: 'icon size-32 color-white', alt: 'Face detection' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_vibration')), title: 'Vibration', description: 'The Vibration API enables web apps to make a mobile device vibrate.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:vibration', class: 'icon size-32 color-white', alt: 'Vibration' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_audio_recording')), title: 'Audio recording', description: 'Record audio using MediaRecorder and visualize audio using Web Audio API.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:mic', class: 'icon size-32 color-white', alt: 'Audio recording' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_audio')), title: 'Audio', description: 'The Media Session API allows web apps to display controls for media playback on a device\\'s lock screen.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:round-play-circle-filled', class: 'icon size-32 color-white', alt: 'Audio' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { link: (path('app_feature_audio_session')), title: 'Audio Session API', description: 'The Audio Session API configures how audio from web apps should mix with audio from native apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:tune', class: 'icon size-32 color-white', alt: 'Audio Session API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_screen_capture')), title: 'Screen Capturing', description: 'Capture Handle and Captured Surface Control enable screen capturing web apps to remotely control captured web apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-share', class: 'icon size-32 color-white', alt: 'Screen Capturing' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_element_capture')), title: 'Element Capture', description: 'Element Capture enables screen capturing web apps to record specific HTML elements.' } %}
                    {% block content %}<img src=\"{{ asset('images/element-capture.svg') }}\" alt=\"Element capture\" />
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { link: (path('app_feature_background_sync')), title: 'Background Sync API', description: 'The Background Sync API enables web apps to defer tasks when it\\'s offline so they can be run when the network connection is restored.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:sync', class: 'icon size-32 color-white', alt: 'Background Sync API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { link: (path('app_feature_background_fetch')), title: 'Background Fetch API', description: 'The Background Fetch API enables web apps to download large files in the background even when the app is not running.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:downloading', class: 'icon size-32 color-white', alt: 'Background Fetch API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_storage')), title: 'Storage API', description: 'The Storage API enables web apps to persist structured data in the user\\'s browser.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:inventory', class: 'icon size-32 color-white', alt: 'Storage API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_bluetooth')), title: 'Bluetooth', description: 'The Web Bluetooth API enables web apps to connect to Bluetooth Low Energy (BLE) devices and read values from or write values to it.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:bluetooth', class: 'icon size-32 color-white', alt: 'Bluetooth' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_nfc')), title: 'NFC', description: 'The Web NFC API enables web apps to read and write to NFC tags.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:nfc', class: 'icon size-32 color-white', alt: 'NFC' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { link: (path('app_feature_ar_vr')), title: 'AR/VR', description: 'Augmented reality enables web apps to place virtual objects in reality.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:layers', class: 'icon size-32 color-white', alt: 'AR/VR' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { link: (path('app_feature_payment')), title: 'Payment', description: 'The Payment Request API provides a browser-based method to enable users to make payments on the web, using a credit card, Apple Pay or Google Pay.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:credit-card', class: 'icon size-32 color-white', alt: 'Payment' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_wake_lock')), title: 'Wake lock', description: 'The Screen Wake Lock API enables web apps to prevent devices from dimming or locking the screen when the app needs to keep running.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-lock-portrait', class: 'icon size-32 color-white', alt: 'Wake lock' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_orientation')), title: 'Orientation', description: 'The DeviceOrientationEvent gives information about the physical orientation of the user\\'s device.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-rotation', class: 'icon size-32 color-white', alt: 'Orientation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_device_motion')), title: 'Motion', description: 'The DeviceMotionEvent gives information about the speed of changes for the position and orientation of the user\\'s device.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:3d-rotation', class: 'icon size-32 color-white', alt: 'Motion' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_network_info')), title: 'Network info', description: 'The NetworkInformation API provides information about the connection of a device, allowing web apps to adapt functionality based on network quality.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:network-check', class: 'icon size-32 color-white', alt: 'Network info' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_speech_synthesis')), title: 'Speech synthesis', description: 'Speech synthesis provides text-to-speech and allows programs to read out their text content.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:record-voice-over', class: 'icon size-32 color-white', alt: 'Speech synthesis' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_speech_recognition')), title: 'Speech recognition', description: 'Speech recognition is part of the Web Speech API and provides the ability to recognize voice context from an audio input.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:hearing', class: 'icon size-32 color-white', alt: 'Speech recognition' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_multi_touch')), title: 'Multi touch', description: 'Touch events enable web apps to capture complex touch behaviour.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:touch-app', class: 'icon size-32 color-white', alt: 'Multi touch' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_i18n')), title: 'i18n', description: 'Internationalization (i18n) enables web apps to adapt to different languages and regions.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'fluent-mdl2:locale-language', class: 'icon size-32 color-white', alt: 'i18n' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_presentation')), title: 'Presentation', description: 'The Presentation API enables web apps to display content on external screens.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ri:presentation-fill', class: 'icon size-32 color-white', alt: 'presentation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

        </ul>
    </div>

</section>", "components/Features.html.twig", "/Users/praveenmujawdiya/Documents/survos/pwa-f7/templates/components/Features.html.twig");
    }
}


/* components/Features.html.twig */
class __TwigTemplate_1fb5cbdf94a162448bd258deeed21be9___37352858991 extends Template
{
    private Source $source;
    /**
     * @var array<string, Template>
     */
    private array $macros = [];

    public function __construct(Environment $env)
    {
        parent::__construct($env);

        $this->source = $this->getSourceContext();

        $this->blocks = [
            'outer__block_fallback' => [$this, 'block_outer__block_fallback'],
            'content' => [$this, 'block_content'],
        ];
    }

    protected function doGetParent(array $context): bool|string|Template|TemplateWrapper
    {
        // line 146
        return $this->loadTemplate((isset($context["__parent__"]) || array_key_exists("__parent__", $context) ? $context["__parent__"] : (function () { throw new RuntimeError('Variable "__parent__" does not exist.', 146, $this->source); })()), "components/Features.html.twig", 146);
    }

    protected function doDisplay(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        yield from $this->getParent($context)->unwrap()->yield($context, array_merge($this->blocks, $blocks));
        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

    }

    /**
     * @return iterable<null|scalar|\Stringable>
     */
    public function block_outer__block_fallback(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        yield from [];
    }

    // line 147
    /**
     * @return iterable<null|scalar|\Stringable>
     */
    public function block_content(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        yield $this->env->getRuntime('Symfony\UX\TwigComponent\Twig\ComponentRuntime')->render("ux:icon", ["name" => "material-symbols:downloading", "class" => "icon size-32 color-white", "alt" => "Background Fetch API"]);
        yield "
                ";
        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        yield from [];
    }

    /**
     * @codeCoverageIgnore
     */
    public function getTemplateName(): string
    {
        return "components/Features.html.twig";
    }

    /**
     * @codeCoverageIgnore
     */
    public function isTraitable(): bool
    {
        return false;
    }

    /**
     * @codeCoverageIgnore
     */
    public function getDebugInfo(): array
    {
        return array (  9819 => 147,  9764 => 146,  9442 => 141,  9387 => 140,  9064 => 135,  9009 => 134,  8687 => 129,  8632 => 128,  8310 => 123,  8255 => 122,  7933 => 117,  7878 => 116,  7556 => 111,  7501 => 110,  7179 => 105,  7124 => 104,  6802 => 99,  6747 => 98,  6425 => 93,  6370 => 92,  6048 => 87,  5993 => 86,  5671 => 81,  5616 => 80,  5294 => 75,  5239 => 74,  4917 => 69,  4862 => 68,  4540 => 63,  4485 => 62,  4163 => 57,  4108 => 56,  3786 => 51,  3731 => 50,  3409 => 45,  3354 => 44,  3032 => 39,  2977 => 38,  2655 => 33,  2600 => 32,  2278 => 27,  2223 => 26,  1901 => 21,  1846 => 20,  1524 => 15,  1469 => 14,  1147 => 9,  1092 => 8,  782 => 233,  768 => 230,  763 => 227,  749 => 224,  744 => 221,  730 => 218,  725 => 215,  711 => 212,  706 => 209,  692 => 206,  687 => 203,  673 => 200,  668 => 197,  654 => 194,  649 => 191,  635 => 188,  630 => 185,  616 => 182,  611 => 179,  597 => 176,  592 => 173,  578 => 170,  573 => 167,  559 => 164,  554 => 161,  540 => 158,  535 => 155,  521 => 152,  516 => 149,  502 => 146,  497 => 143,  483 => 140,  478 => 137,  464 => 134,  459 => 131,  445 => 128,  440 => 125,  426 => 122,  421 => 119,  407 => 116,  402 => 113,  388 => 110,  383 => 107,  369 => 104,  364 => 101,  350 => 98,  345 => 95,  331 => 92,  326 => 89,  312 => 86,  307 => 83,  293 => 80,  288 => 77,  274 => 74,  269 => 71,  255 => 68,  250 => 65,  236 => 62,  231 => 59,  217 => 56,  212 => 53,  198 => 50,  193 => 47,  179 => 44,  174 => 41,  160 => 38,  155 => 35,  141 => 32,  136 => 29,  122 => 26,  117 => 23,  103 => 20,  98 => 17,  84 => 14,  79 => 11,  65 => 8,  57 => 3,  51 => 1,);
    }

    public function getSourceContext(): Source
    {
        return new Source("<section {{ attributes }}>

    <h2 class=\"block-title block-title-medium\">{{ 'homepage.demo'|trans }}</h2>
    <div class=\"list cards-list media-list inset margin-vertical-half\">
        <ul class=\"row align-items-stretch justify-content-flex-start\" style=\"column-gap: var(--f7-grid-gap);\">

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_installation')), title: 'Installation', description: 'Using the beforeinstallprompt event, a native dialog can be displayed to install a web app' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:install-mobile', class: 'icon size-32 color-white', alt: 'Install' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_offline_support')), title: 'Offline support', description: 'The Service Worker enables web apps to work offline' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:download-for-offline', class: 'icon size-32 color-white', alt: 'Offline support' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_notifications')), title: 'Notifications', description: 'The Notifications API enables web apps to display notifications, even when the app is not active.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:notifications-outline', class: 'icon size-32 color-white', alt: 'Notifications' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_shortcuts')), title: 'Shortcuts', description: 'Shortcuts provide quick access to pages in your app from the app icon.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'tdesign:mobile-shortcut-filled', class: 'icon size-32 color-white', alt: 'Shortcuts' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_view_transition')), title: 'View Transitions', description: 'The View Transitions API enables app-like transitions between pages.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:auto-awesome-motion', class: 'icon size-32 color-white', alt: 'View Transitions' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_geolocation')), title: 'Geolocation', description: 'The Geolocation API enables users to share their location with web apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-gps-fixed', class: 'icon size-32 color-white', alt: 'Geolocation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_media_capture')), title: 'Media capture', description: 'Media capture allows web apps to use the camera and microphone of a device' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:videocam', class: 'icon size-32 color-white', alt: 'Media capture' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-deeporange\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_picture_in_picture')), title: 'Picture-in-picture', description: 'The Document Picture-in-Picture API makes it possible to open an always-on-top window that can be populated with arbitrary HTML content.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:picture-in-picture', class: 'icon size-32 color-white', alt: 'Picture-in-picture' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_file_system')), title: 'File System', description: 'Access to the file system of the user\\'s device' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-insert-drive-file', class: 'icon size-32 color-white', alt: 'File System' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_authentication')), title: 'Authentication', description: 'Web Authentication API (WebAuthn) enables passwordless authentication through your device\\'s fingerprint reader or an external USB Security Key.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-fingerprint', class: 'icon size-32 color-white', alt: 'Authentication' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_protocol_handling')), title: 'Protocol Handling', description: 'Protocol handling enables web apps to register their ability to open links with particular URL schemes.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:language', class: 'icon size-32 color-white', alt: 'Protocol Handling' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_file_handling')), title: 'File Handling API', description: 'The File Handling API enables web apps to register as file handlers with the operating system' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:folder-open', class: 'icon size-32 color-white', alt: 'File Handling API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { link: (path('app_feature_contact_picker')), title: 'Contact picker', description: 'The Contact Picker API allows web apps to select the user\\'s contacts after permission has been granted.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:account-box', class: 'icon size-32 color-white', alt: 'Contact picker' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_web_share')), title: 'Web share', description: 'The Web Share API invokes the native share mechanism of the device and allows users to share text, URLs or files.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:share', class: 'icon size-32 color-white', alt: 'Web share' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { link: (path('app_feature_barcode_detection')), title: 'Barcode detection', description: 'The Barcode Detection API detects barcodes and QR codes in images.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:qr-code-scanner', class: 'icon size-32 color-white', alt: 'Barcode detection' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { link: (path('app_feature_face_detection')), title: 'Face detection', description: 'The Shape Detection API detects faces in images.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:face', class: 'icon size-32 color-white', alt: 'Face detection' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_vibration')), title: 'Vibration', description: 'The Vibration API enables web apps to make a mobile device vibrate.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:vibration', class: 'icon size-32 color-white', alt: 'Vibration' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_audio_recording')), title: 'Audio recording', description: 'Record audio using MediaRecorder and visualize audio using Web Audio API.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:mic', class: 'icon size-32 color-white', alt: 'Audio recording' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_audio')), title: 'Audio', description: 'The Media Session API allows web apps to display controls for media playback on a device\\'s lock screen.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:round-play-circle-filled', class: 'icon size-32 color-white', alt: 'Audio' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { link: (path('app_feature_audio_session')), title: 'Audio Session API', description: 'The Audio Session API configures how audio from web apps should mix with audio from native apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:tune', class: 'icon size-32 color-white', alt: 'Audio Session API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_screen_capture')), title: 'Screen Capturing', description: 'Capture Handle and Captured Surface Control enable screen capturing web apps to remotely control captured web apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-share', class: 'icon size-32 color-white', alt: 'Screen Capturing' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_element_capture')), title: 'Element Capture', description: 'Element Capture enables screen capturing web apps to record specific HTML elements.' } %}
                    {% block content %}<img src=\"{{ asset('images/element-capture.svg') }}\" alt=\"Element capture\" />
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { link: (path('app_feature_background_sync')), title: 'Background Sync API', description: 'The Background Sync API enables web apps to defer tasks when it\\'s offline so they can be run when the network connection is restored.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:sync', class: 'icon size-32 color-white', alt: 'Background Sync API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { link: (path('app_feature_background_fetch')), title: 'Background Fetch API', description: 'The Background Fetch API enables web apps to download large files in the background even when the app is not running.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:downloading', class: 'icon size-32 color-white', alt: 'Background Fetch API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_storage')), title: 'Storage API', description: 'The Storage API enables web apps to persist structured data in the user\\'s browser.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:inventory', class: 'icon size-32 color-white', alt: 'Storage API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_bluetooth')), title: 'Bluetooth', description: 'The Web Bluetooth API enables web apps to connect to Bluetooth Low Energy (BLE) devices and read values from or write values to it.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:bluetooth', class: 'icon size-32 color-white', alt: 'Bluetooth' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_nfc')), title: 'NFC', description: 'The Web NFC API enables web apps to read and write to NFC tags.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:nfc', class: 'icon size-32 color-white', alt: 'NFC' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { link: (path('app_feature_ar_vr')), title: 'AR/VR', description: 'Augmented reality enables web apps to place virtual objects in reality.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:layers', class: 'icon size-32 color-white', alt: 'AR/VR' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { link: (path('app_feature_payment')), title: 'Payment', description: 'The Payment Request API provides a browser-based method to enable users to make payments on the web, using a credit card, Apple Pay or Google Pay.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:credit-card', class: 'icon size-32 color-white', alt: 'Payment' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_wake_lock')), title: 'Wake lock', description: 'The Screen Wake Lock API enables web apps to prevent devices from dimming or locking the screen when the app needs to keep running.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-lock-portrait', class: 'icon size-32 color-white', alt: 'Wake lock' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_orientation')), title: 'Orientation', description: 'The DeviceOrientationEvent gives information about the physical orientation of the user\\'s device.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-rotation', class: 'icon size-32 color-white', alt: 'Orientation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_device_motion')), title: 'Motion', description: 'The DeviceMotionEvent gives information about the speed of changes for the position and orientation of the user\\'s device.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:3d-rotation', class: 'icon size-32 color-white', alt: 'Motion' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_network_info')), title: 'Network info', description: 'The NetworkInformation API provides information about the connection of a device, allowing web apps to adapt functionality based on network quality.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:network-check', class: 'icon size-32 color-white', alt: 'Network info' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_speech_synthesis')), title: 'Speech synthesis', description: 'Speech synthesis provides text-to-speech and allows programs to read out their text content.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:record-voice-over', class: 'icon size-32 color-white', alt: 'Speech synthesis' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_speech_recognition')), title: 'Speech recognition', description: 'Speech recognition is part of the Web Speech API and provides the ability to recognize voice context from an audio input.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:hearing', class: 'icon size-32 color-white', alt: 'Speech recognition' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_multi_touch')), title: 'Multi touch', description: 'Touch events enable web apps to capture complex touch behaviour.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:touch-app', class: 'icon size-32 color-white', alt: 'Multi touch' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_i18n')), title: 'i18n', description: 'Internationalization (i18n) enables web apps to adapt to different languages and regions.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'fluent-mdl2:locale-language', class: 'icon size-32 color-white', alt: 'i18n' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_presentation')), title: 'Presentation', description: 'The Presentation API enables web apps to display content on external screens.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ri:presentation-fill', class: 'icon size-32 color-white', alt: 'presentation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

        </ul>
    </div>

</section>", "components/Features.html.twig", "/Users/praveenmujawdiya/Documents/survos/pwa-f7/templates/components/Features.html.twig");
    }
}


/* components/Features.html.twig */
class __TwigTemplate_1fb5cbdf94a162448bd258deeed21be9___32351861311 extends Template
{
    private Source $source;
    /**
     * @var array<string, Template>
     */
    private array $macros = [];

    public function __construct(Environment $env)
    {
        parent::__construct($env);

        $this->source = $this->getSourceContext();

        $this->blocks = [
            'outer__block_fallback' => [$this, 'block_outer__block_fallback'],
            'content' => [$this, 'block_content'],
        ];
    }

    protected function doGetParent(array $context): bool|string|Template|TemplateWrapper
    {
        // line 152
        return $this->loadTemplate((isset($context["__parent__"]) || array_key_exists("__parent__", $context) ? $context["__parent__"] : (function () { throw new RuntimeError('Variable "__parent__" does not exist.', 152, $this->source); })()), "components/Features.html.twig", 152);
    }

    protected function doDisplay(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        yield from $this->getParent($context)->unwrap()->yield($context, array_merge($this->blocks, $blocks));
        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

    }

    /**
     * @return iterable<null|scalar|\Stringable>
     */
    public function block_outer__block_fallback(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        yield from [];
    }

    // line 153
    /**
     * @return iterable<null|scalar|\Stringable>
     */
    public function block_content(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        yield $this->env->getRuntime('Symfony\UX\TwigComponent\Twig\ComponentRuntime')->render("ux:icon", ["name" => "material-symbols:inventory", "class" => "icon size-32 color-white", "alt" => "Storage API"]);
        yield "
                ";
        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        yield from [];
    }

    /**
     * @codeCoverageIgnore
     */
    public function getTemplateName(): string
    {
        return "components/Features.html.twig";
    }

    /**
     * @codeCoverageIgnore
     */
    public function isTraitable(): bool
    {
        return false;
    }

    /**
     * @codeCoverageIgnore
     */
    public function getDebugInfo(): array
    {
        return array (  10196 => 153,  10141 => 152,  9819 => 147,  9764 => 146,  9442 => 141,  9387 => 140,  9064 => 135,  9009 => 134,  8687 => 129,  8632 => 128,  8310 => 123,  8255 => 122,  7933 => 117,  7878 => 116,  7556 => 111,  7501 => 110,  7179 => 105,  7124 => 104,  6802 => 99,  6747 => 98,  6425 => 93,  6370 => 92,  6048 => 87,  5993 => 86,  5671 => 81,  5616 => 80,  5294 => 75,  5239 => 74,  4917 => 69,  4862 => 68,  4540 => 63,  4485 => 62,  4163 => 57,  4108 => 56,  3786 => 51,  3731 => 50,  3409 => 45,  3354 => 44,  3032 => 39,  2977 => 38,  2655 => 33,  2600 => 32,  2278 => 27,  2223 => 26,  1901 => 21,  1846 => 20,  1524 => 15,  1469 => 14,  1147 => 9,  1092 => 8,  782 => 233,  768 => 230,  763 => 227,  749 => 224,  744 => 221,  730 => 218,  725 => 215,  711 => 212,  706 => 209,  692 => 206,  687 => 203,  673 => 200,  668 => 197,  654 => 194,  649 => 191,  635 => 188,  630 => 185,  616 => 182,  611 => 179,  597 => 176,  592 => 173,  578 => 170,  573 => 167,  559 => 164,  554 => 161,  540 => 158,  535 => 155,  521 => 152,  516 => 149,  502 => 146,  497 => 143,  483 => 140,  478 => 137,  464 => 134,  459 => 131,  445 => 128,  440 => 125,  426 => 122,  421 => 119,  407 => 116,  402 => 113,  388 => 110,  383 => 107,  369 => 104,  364 => 101,  350 => 98,  345 => 95,  331 => 92,  326 => 89,  312 => 86,  307 => 83,  293 => 80,  288 => 77,  274 => 74,  269 => 71,  255 => 68,  250 => 65,  236 => 62,  231 => 59,  217 => 56,  212 => 53,  198 => 50,  193 => 47,  179 => 44,  174 => 41,  160 => 38,  155 => 35,  141 => 32,  136 => 29,  122 => 26,  117 => 23,  103 => 20,  98 => 17,  84 => 14,  79 => 11,  65 => 8,  57 => 3,  51 => 1,);
    }

    public function getSourceContext(): Source
    {
        return new Source("<section {{ attributes }}>

    <h2 class=\"block-title block-title-medium\">{{ 'homepage.demo'|trans }}</h2>
    <div class=\"list cards-list media-list inset margin-vertical-half\">
        <ul class=\"row align-items-stretch justify-content-flex-start\" style=\"column-gap: var(--f7-grid-gap);\">

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_installation')), title: 'Installation', description: 'Using the beforeinstallprompt event, a native dialog can be displayed to install a web app' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:install-mobile', class: 'icon size-32 color-white', alt: 'Install' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_offline_support')), title: 'Offline support', description: 'The Service Worker enables web apps to work offline' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:download-for-offline', class: 'icon size-32 color-white', alt: 'Offline support' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_notifications')), title: 'Notifications', description: 'The Notifications API enables web apps to display notifications, even when the app is not active.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:notifications-outline', class: 'icon size-32 color-white', alt: 'Notifications' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_shortcuts')), title: 'Shortcuts', description: 'Shortcuts provide quick access to pages in your app from the app icon.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'tdesign:mobile-shortcut-filled', class: 'icon size-32 color-white', alt: 'Shortcuts' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_view_transition')), title: 'View Transitions', description: 'The View Transitions API enables app-like transitions between pages.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:auto-awesome-motion', class: 'icon size-32 color-white', alt: 'View Transitions' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_geolocation')), title: 'Geolocation', description: 'The Geolocation API enables users to share their location with web apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-gps-fixed', class: 'icon size-32 color-white', alt: 'Geolocation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_media_capture')), title: 'Media capture', description: 'Media capture allows web apps to use the camera and microphone of a device' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:videocam', class: 'icon size-32 color-white', alt: 'Media capture' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-deeporange\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_picture_in_picture')), title: 'Picture-in-picture', description: 'The Document Picture-in-Picture API makes it possible to open an always-on-top window that can be populated with arbitrary HTML content.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:picture-in-picture', class: 'icon size-32 color-white', alt: 'Picture-in-picture' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_file_system')), title: 'File System', description: 'Access to the file system of the user\\'s device' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-insert-drive-file', class: 'icon size-32 color-white', alt: 'File System' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_authentication')), title: 'Authentication', description: 'Web Authentication API (WebAuthn) enables passwordless authentication through your device\\'s fingerprint reader or an external USB Security Key.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-fingerprint', class: 'icon size-32 color-white', alt: 'Authentication' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_protocol_handling')), title: 'Protocol Handling', description: 'Protocol handling enables web apps to register their ability to open links with particular URL schemes.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:language', class: 'icon size-32 color-white', alt: 'Protocol Handling' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_file_handling')), title: 'File Handling API', description: 'The File Handling API enables web apps to register as file handlers with the operating system' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:folder-open', class: 'icon size-32 color-white', alt: 'File Handling API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { link: (path('app_feature_contact_picker')), title: 'Contact picker', description: 'The Contact Picker API allows web apps to select the user\\'s contacts after permission has been granted.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:account-box', class: 'icon size-32 color-white', alt: 'Contact picker' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_web_share')), title: 'Web share', description: 'The Web Share API invokes the native share mechanism of the device and allows users to share text, URLs or files.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:share', class: 'icon size-32 color-white', alt: 'Web share' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { link: (path('app_feature_barcode_detection')), title: 'Barcode detection', description: 'The Barcode Detection API detects barcodes and QR codes in images.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:qr-code-scanner', class: 'icon size-32 color-white', alt: 'Barcode detection' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { link: (path('app_feature_face_detection')), title: 'Face detection', description: 'The Shape Detection API detects faces in images.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:face', class: 'icon size-32 color-white', alt: 'Face detection' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_vibration')), title: 'Vibration', description: 'The Vibration API enables web apps to make a mobile device vibrate.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:vibration', class: 'icon size-32 color-white', alt: 'Vibration' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_audio_recording')), title: 'Audio recording', description: 'Record audio using MediaRecorder and visualize audio using Web Audio API.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:mic', class: 'icon size-32 color-white', alt: 'Audio recording' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_audio')), title: 'Audio', description: 'The Media Session API allows web apps to display controls for media playback on a device\\'s lock screen.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:round-play-circle-filled', class: 'icon size-32 color-white', alt: 'Audio' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { link: (path('app_feature_audio_session')), title: 'Audio Session API', description: 'The Audio Session API configures how audio from web apps should mix with audio from native apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:tune', class: 'icon size-32 color-white', alt: 'Audio Session API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_screen_capture')), title: 'Screen Capturing', description: 'Capture Handle and Captured Surface Control enable screen capturing web apps to remotely control captured web apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-share', class: 'icon size-32 color-white', alt: 'Screen Capturing' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_element_capture')), title: 'Element Capture', description: 'Element Capture enables screen capturing web apps to record specific HTML elements.' } %}
                    {% block content %}<img src=\"{{ asset('images/element-capture.svg') }}\" alt=\"Element capture\" />
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { link: (path('app_feature_background_sync')), title: 'Background Sync API', description: 'The Background Sync API enables web apps to defer tasks when it\\'s offline so they can be run when the network connection is restored.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:sync', class: 'icon size-32 color-white', alt: 'Background Sync API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { link: (path('app_feature_background_fetch')), title: 'Background Fetch API', description: 'The Background Fetch API enables web apps to download large files in the background even when the app is not running.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:downloading', class: 'icon size-32 color-white', alt: 'Background Fetch API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_storage')), title: 'Storage API', description: 'The Storage API enables web apps to persist structured data in the user\\'s browser.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:inventory', class: 'icon size-32 color-white', alt: 'Storage API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_bluetooth')), title: 'Bluetooth', description: 'The Web Bluetooth API enables web apps to connect to Bluetooth Low Energy (BLE) devices and read values from or write values to it.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:bluetooth', class: 'icon size-32 color-white', alt: 'Bluetooth' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_nfc')), title: 'NFC', description: 'The Web NFC API enables web apps to read and write to NFC tags.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:nfc', class: 'icon size-32 color-white', alt: 'NFC' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { link: (path('app_feature_ar_vr')), title: 'AR/VR', description: 'Augmented reality enables web apps to place virtual objects in reality.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:layers', class: 'icon size-32 color-white', alt: 'AR/VR' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { link: (path('app_feature_payment')), title: 'Payment', description: 'The Payment Request API provides a browser-based method to enable users to make payments on the web, using a credit card, Apple Pay or Google Pay.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:credit-card', class: 'icon size-32 color-white', alt: 'Payment' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_wake_lock')), title: 'Wake lock', description: 'The Screen Wake Lock API enables web apps to prevent devices from dimming or locking the screen when the app needs to keep running.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-lock-portrait', class: 'icon size-32 color-white', alt: 'Wake lock' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_orientation')), title: 'Orientation', description: 'The DeviceOrientationEvent gives information about the physical orientation of the user\\'s device.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-rotation', class: 'icon size-32 color-white', alt: 'Orientation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_device_motion')), title: 'Motion', description: 'The DeviceMotionEvent gives information about the speed of changes for the position and orientation of the user\\'s device.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:3d-rotation', class: 'icon size-32 color-white', alt: 'Motion' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_network_info')), title: 'Network info', description: 'The NetworkInformation API provides information about the connection of a device, allowing web apps to adapt functionality based on network quality.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:network-check', class: 'icon size-32 color-white', alt: 'Network info' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_speech_synthesis')), title: 'Speech synthesis', description: 'Speech synthesis provides text-to-speech and allows programs to read out their text content.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:record-voice-over', class: 'icon size-32 color-white', alt: 'Speech synthesis' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_speech_recognition')), title: 'Speech recognition', description: 'Speech recognition is part of the Web Speech API and provides the ability to recognize voice context from an audio input.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:hearing', class: 'icon size-32 color-white', alt: 'Speech recognition' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_multi_touch')), title: 'Multi touch', description: 'Touch events enable web apps to capture complex touch behaviour.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:touch-app', class: 'icon size-32 color-white', alt: 'Multi touch' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_i18n')), title: 'i18n', description: 'Internationalization (i18n) enables web apps to adapt to different languages and regions.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'fluent-mdl2:locale-language', class: 'icon size-32 color-white', alt: 'i18n' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_presentation')), title: 'Presentation', description: 'The Presentation API enables web apps to display content on external screens.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ri:presentation-fill', class: 'icon size-32 color-white', alt: 'presentation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

        </ul>
    </div>

</section>", "components/Features.html.twig", "/Users/praveenmujawdiya/Documents/survos/pwa-f7/templates/components/Features.html.twig");
    }
}


/* components/Features.html.twig */
class __TwigTemplate_1fb5cbdf94a162448bd258deeed21be9___5369315331 extends Template
{
    private Source $source;
    /**
     * @var array<string, Template>
     */
    private array $macros = [];

    public function __construct(Environment $env)
    {
        parent::__construct($env);

        $this->source = $this->getSourceContext();

        $this->blocks = [
            'outer__block_fallback' => [$this, 'block_outer__block_fallback'],
            'content' => [$this, 'block_content'],
        ];
    }

    protected function doGetParent(array $context): bool|string|Template|TemplateWrapper
    {
        // line 158
        return $this->loadTemplate((isset($context["__parent__"]) || array_key_exists("__parent__", $context) ? $context["__parent__"] : (function () { throw new RuntimeError('Variable "__parent__" does not exist.', 158, $this->source); })()), "components/Features.html.twig", 158);
    }

    protected function doDisplay(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        yield from $this->getParent($context)->unwrap()->yield($context, array_merge($this->blocks, $blocks));
        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

    }

    /**
     * @return iterable<null|scalar|\Stringable>
     */
    public function block_outer__block_fallback(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        yield from [];
    }

    // line 159
    /**
     * @return iterable<null|scalar|\Stringable>
     */
    public function block_content(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        yield $this->env->getRuntime('Symfony\UX\TwigComponent\Twig\ComponentRuntime')->render("ux:icon", ["name" => "material-symbols:bluetooth", "class" => "icon size-32 color-white", "alt" => "Bluetooth"]);
        yield "
                ";
        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        yield from [];
    }

    /**
     * @codeCoverageIgnore
     */
    public function getTemplateName(): string
    {
        return "components/Features.html.twig";
    }

    /**
     * @codeCoverageIgnore
     */
    public function isTraitable(): bool
    {
        return false;
    }

    /**
     * @codeCoverageIgnore
     */
    public function getDebugInfo(): array
    {
        return array (  10573 => 159,  10518 => 158,  10196 => 153,  10141 => 152,  9819 => 147,  9764 => 146,  9442 => 141,  9387 => 140,  9064 => 135,  9009 => 134,  8687 => 129,  8632 => 128,  8310 => 123,  8255 => 122,  7933 => 117,  7878 => 116,  7556 => 111,  7501 => 110,  7179 => 105,  7124 => 104,  6802 => 99,  6747 => 98,  6425 => 93,  6370 => 92,  6048 => 87,  5993 => 86,  5671 => 81,  5616 => 80,  5294 => 75,  5239 => 74,  4917 => 69,  4862 => 68,  4540 => 63,  4485 => 62,  4163 => 57,  4108 => 56,  3786 => 51,  3731 => 50,  3409 => 45,  3354 => 44,  3032 => 39,  2977 => 38,  2655 => 33,  2600 => 32,  2278 => 27,  2223 => 26,  1901 => 21,  1846 => 20,  1524 => 15,  1469 => 14,  1147 => 9,  1092 => 8,  782 => 233,  768 => 230,  763 => 227,  749 => 224,  744 => 221,  730 => 218,  725 => 215,  711 => 212,  706 => 209,  692 => 206,  687 => 203,  673 => 200,  668 => 197,  654 => 194,  649 => 191,  635 => 188,  630 => 185,  616 => 182,  611 => 179,  597 => 176,  592 => 173,  578 => 170,  573 => 167,  559 => 164,  554 => 161,  540 => 158,  535 => 155,  521 => 152,  516 => 149,  502 => 146,  497 => 143,  483 => 140,  478 => 137,  464 => 134,  459 => 131,  445 => 128,  440 => 125,  426 => 122,  421 => 119,  407 => 116,  402 => 113,  388 => 110,  383 => 107,  369 => 104,  364 => 101,  350 => 98,  345 => 95,  331 => 92,  326 => 89,  312 => 86,  307 => 83,  293 => 80,  288 => 77,  274 => 74,  269 => 71,  255 => 68,  250 => 65,  236 => 62,  231 => 59,  217 => 56,  212 => 53,  198 => 50,  193 => 47,  179 => 44,  174 => 41,  160 => 38,  155 => 35,  141 => 32,  136 => 29,  122 => 26,  117 => 23,  103 => 20,  98 => 17,  84 => 14,  79 => 11,  65 => 8,  57 => 3,  51 => 1,);
    }

    public function getSourceContext(): Source
    {
        return new Source("<section {{ attributes }}>

    <h2 class=\"block-title block-title-medium\">{{ 'homepage.demo'|trans }}</h2>
    <div class=\"list cards-list media-list inset margin-vertical-half\">
        <ul class=\"row align-items-stretch justify-content-flex-start\" style=\"column-gap: var(--f7-grid-gap);\">

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_installation')), title: 'Installation', description: 'Using the beforeinstallprompt event, a native dialog can be displayed to install a web app' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:install-mobile', class: 'icon size-32 color-white', alt: 'Install' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_offline_support')), title: 'Offline support', description: 'The Service Worker enables web apps to work offline' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:download-for-offline', class: 'icon size-32 color-white', alt: 'Offline support' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_notifications')), title: 'Notifications', description: 'The Notifications API enables web apps to display notifications, even when the app is not active.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:notifications-outline', class: 'icon size-32 color-white', alt: 'Notifications' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_shortcuts')), title: 'Shortcuts', description: 'Shortcuts provide quick access to pages in your app from the app icon.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'tdesign:mobile-shortcut-filled', class: 'icon size-32 color-white', alt: 'Shortcuts' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_view_transition')), title: 'View Transitions', description: 'The View Transitions API enables app-like transitions between pages.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:auto-awesome-motion', class: 'icon size-32 color-white', alt: 'View Transitions' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_geolocation')), title: 'Geolocation', description: 'The Geolocation API enables users to share their location with web apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-gps-fixed', class: 'icon size-32 color-white', alt: 'Geolocation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_media_capture')), title: 'Media capture', description: 'Media capture allows web apps to use the camera and microphone of a device' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:videocam', class: 'icon size-32 color-white', alt: 'Media capture' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-deeporange\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_picture_in_picture')), title: 'Picture-in-picture', description: 'The Document Picture-in-Picture API makes it possible to open an always-on-top window that can be populated with arbitrary HTML content.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:picture-in-picture', class: 'icon size-32 color-white', alt: 'Picture-in-picture' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_file_system')), title: 'File System', description: 'Access to the file system of the user\\'s device' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-insert-drive-file', class: 'icon size-32 color-white', alt: 'File System' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_authentication')), title: 'Authentication', description: 'Web Authentication API (WebAuthn) enables passwordless authentication through your device\\'s fingerprint reader or an external USB Security Key.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-fingerprint', class: 'icon size-32 color-white', alt: 'Authentication' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_protocol_handling')), title: 'Protocol Handling', description: 'Protocol handling enables web apps to register their ability to open links with particular URL schemes.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:language', class: 'icon size-32 color-white', alt: 'Protocol Handling' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_file_handling')), title: 'File Handling API', description: 'The File Handling API enables web apps to register as file handlers with the operating system' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:folder-open', class: 'icon size-32 color-white', alt: 'File Handling API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { link: (path('app_feature_contact_picker')), title: 'Contact picker', description: 'The Contact Picker API allows web apps to select the user\\'s contacts after permission has been granted.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:account-box', class: 'icon size-32 color-white', alt: 'Contact picker' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_web_share')), title: 'Web share', description: 'The Web Share API invokes the native share mechanism of the device and allows users to share text, URLs or files.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:share', class: 'icon size-32 color-white', alt: 'Web share' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { link: (path('app_feature_barcode_detection')), title: 'Barcode detection', description: 'The Barcode Detection API detects barcodes and QR codes in images.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:qr-code-scanner', class: 'icon size-32 color-white', alt: 'Barcode detection' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { link: (path('app_feature_face_detection')), title: 'Face detection', description: 'The Shape Detection API detects faces in images.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:face', class: 'icon size-32 color-white', alt: 'Face detection' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_vibration')), title: 'Vibration', description: 'The Vibration API enables web apps to make a mobile device vibrate.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:vibration', class: 'icon size-32 color-white', alt: 'Vibration' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_audio_recording')), title: 'Audio recording', description: 'Record audio using MediaRecorder and visualize audio using Web Audio API.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:mic', class: 'icon size-32 color-white', alt: 'Audio recording' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_audio')), title: 'Audio', description: 'The Media Session API allows web apps to display controls for media playback on a device\\'s lock screen.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:round-play-circle-filled', class: 'icon size-32 color-white', alt: 'Audio' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { link: (path('app_feature_audio_session')), title: 'Audio Session API', description: 'The Audio Session API configures how audio from web apps should mix with audio from native apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:tune', class: 'icon size-32 color-white', alt: 'Audio Session API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_screen_capture')), title: 'Screen Capturing', description: 'Capture Handle and Captured Surface Control enable screen capturing web apps to remotely control captured web apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-share', class: 'icon size-32 color-white', alt: 'Screen Capturing' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_element_capture')), title: 'Element Capture', description: 'Element Capture enables screen capturing web apps to record specific HTML elements.' } %}
                    {% block content %}<img src=\"{{ asset('images/element-capture.svg') }}\" alt=\"Element capture\" />
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { link: (path('app_feature_background_sync')), title: 'Background Sync API', description: 'The Background Sync API enables web apps to defer tasks when it\\'s offline so they can be run when the network connection is restored.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:sync', class: 'icon size-32 color-white', alt: 'Background Sync API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { link: (path('app_feature_background_fetch')), title: 'Background Fetch API', description: 'The Background Fetch API enables web apps to download large files in the background even when the app is not running.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:downloading', class: 'icon size-32 color-white', alt: 'Background Fetch API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_storage')), title: 'Storage API', description: 'The Storage API enables web apps to persist structured data in the user\\'s browser.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:inventory', class: 'icon size-32 color-white', alt: 'Storage API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_bluetooth')), title: 'Bluetooth', description: 'The Web Bluetooth API enables web apps to connect to Bluetooth Low Energy (BLE) devices and read values from or write values to it.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:bluetooth', class: 'icon size-32 color-white', alt: 'Bluetooth' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_nfc')), title: 'NFC', description: 'The Web NFC API enables web apps to read and write to NFC tags.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:nfc', class: 'icon size-32 color-white', alt: 'NFC' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { link: (path('app_feature_ar_vr')), title: 'AR/VR', description: 'Augmented reality enables web apps to place virtual objects in reality.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:layers', class: 'icon size-32 color-white', alt: 'AR/VR' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { link: (path('app_feature_payment')), title: 'Payment', description: 'The Payment Request API provides a browser-based method to enable users to make payments on the web, using a credit card, Apple Pay or Google Pay.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:credit-card', class: 'icon size-32 color-white', alt: 'Payment' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_wake_lock')), title: 'Wake lock', description: 'The Screen Wake Lock API enables web apps to prevent devices from dimming or locking the screen when the app needs to keep running.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-lock-portrait', class: 'icon size-32 color-white', alt: 'Wake lock' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_orientation')), title: 'Orientation', description: 'The DeviceOrientationEvent gives information about the physical orientation of the user\\'s device.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-rotation', class: 'icon size-32 color-white', alt: 'Orientation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_device_motion')), title: 'Motion', description: 'The DeviceMotionEvent gives information about the speed of changes for the position and orientation of the user\\'s device.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:3d-rotation', class: 'icon size-32 color-white', alt: 'Motion' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_network_info')), title: 'Network info', description: 'The NetworkInformation API provides information about the connection of a device, allowing web apps to adapt functionality based on network quality.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:network-check', class: 'icon size-32 color-white', alt: 'Network info' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_speech_synthesis')), title: 'Speech synthesis', description: 'Speech synthesis provides text-to-speech and allows programs to read out their text content.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:record-voice-over', class: 'icon size-32 color-white', alt: 'Speech synthesis' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_speech_recognition')), title: 'Speech recognition', description: 'Speech recognition is part of the Web Speech API and provides the ability to recognize voice context from an audio input.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:hearing', class: 'icon size-32 color-white', alt: 'Speech recognition' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_multi_touch')), title: 'Multi touch', description: 'Touch events enable web apps to capture complex touch behaviour.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:touch-app', class: 'icon size-32 color-white', alt: 'Multi touch' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_i18n')), title: 'i18n', description: 'Internationalization (i18n) enables web apps to adapt to different languages and regions.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'fluent-mdl2:locale-language', class: 'icon size-32 color-white', alt: 'i18n' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_presentation')), title: 'Presentation', description: 'The Presentation API enables web apps to display content on external screens.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ri:presentation-fill', class: 'icon size-32 color-white', alt: 'presentation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

        </ul>
    </div>

</section>", "components/Features.html.twig", "/Users/praveenmujawdiya/Documents/survos/pwa-f7/templates/components/Features.html.twig");
    }
}


/* components/Features.html.twig */
class __TwigTemplate_1fb5cbdf94a162448bd258deeed21be9___437747571 extends Template
{
    private Source $source;
    /**
     * @var array<string, Template>
     */
    private array $macros = [];

    public function __construct(Environment $env)
    {
        parent::__construct($env);

        $this->source = $this->getSourceContext();

        $this->blocks = [
            'outer__block_fallback' => [$this, 'block_outer__block_fallback'],
            'content' => [$this, 'block_content'],
        ];
    }

    protected function doGetParent(array $context): bool|string|Template|TemplateWrapper
    {
        // line 164
        return $this->loadTemplate((isset($context["__parent__"]) || array_key_exists("__parent__", $context) ? $context["__parent__"] : (function () { throw new RuntimeError('Variable "__parent__" does not exist.', 164, $this->source); })()), "components/Features.html.twig", 164);
    }

    protected function doDisplay(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        yield from $this->getParent($context)->unwrap()->yield($context, array_merge($this->blocks, $blocks));
        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

    }

    /**
     * @return iterable<null|scalar|\Stringable>
     */
    public function block_outer__block_fallback(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        yield from [];
    }

    // line 165
    /**
     * @return iterable<null|scalar|\Stringable>
     */
    public function block_content(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        yield $this->env->getRuntime('Symfony\UX\TwigComponent\Twig\ComponentRuntime')->render("ux:icon", ["name" => "material-symbols:nfc", "class" => "icon size-32 color-white", "alt" => "NFC"]);
        yield "
                ";
        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        yield from [];
    }

    /**
     * @codeCoverageIgnore
     */
    public function getTemplateName(): string
    {
        return "components/Features.html.twig";
    }

    /**
     * @codeCoverageIgnore
     */
    public function isTraitable(): bool
    {
        return false;
    }

    /**
     * @codeCoverageIgnore
     */
    public function getDebugInfo(): array
    {
        return array (  10950 => 165,  10895 => 164,  10573 => 159,  10518 => 158,  10196 => 153,  10141 => 152,  9819 => 147,  9764 => 146,  9442 => 141,  9387 => 140,  9064 => 135,  9009 => 134,  8687 => 129,  8632 => 128,  8310 => 123,  8255 => 122,  7933 => 117,  7878 => 116,  7556 => 111,  7501 => 110,  7179 => 105,  7124 => 104,  6802 => 99,  6747 => 98,  6425 => 93,  6370 => 92,  6048 => 87,  5993 => 86,  5671 => 81,  5616 => 80,  5294 => 75,  5239 => 74,  4917 => 69,  4862 => 68,  4540 => 63,  4485 => 62,  4163 => 57,  4108 => 56,  3786 => 51,  3731 => 50,  3409 => 45,  3354 => 44,  3032 => 39,  2977 => 38,  2655 => 33,  2600 => 32,  2278 => 27,  2223 => 26,  1901 => 21,  1846 => 20,  1524 => 15,  1469 => 14,  1147 => 9,  1092 => 8,  782 => 233,  768 => 230,  763 => 227,  749 => 224,  744 => 221,  730 => 218,  725 => 215,  711 => 212,  706 => 209,  692 => 206,  687 => 203,  673 => 200,  668 => 197,  654 => 194,  649 => 191,  635 => 188,  630 => 185,  616 => 182,  611 => 179,  597 => 176,  592 => 173,  578 => 170,  573 => 167,  559 => 164,  554 => 161,  540 => 158,  535 => 155,  521 => 152,  516 => 149,  502 => 146,  497 => 143,  483 => 140,  478 => 137,  464 => 134,  459 => 131,  445 => 128,  440 => 125,  426 => 122,  421 => 119,  407 => 116,  402 => 113,  388 => 110,  383 => 107,  369 => 104,  364 => 101,  350 => 98,  345 => 95,  331 => 92,  326 => 89,  312 => 86,  307 => 83,  293 => 80,  288 => 77,  274 => 74,  269 => 71,  255 => 68,  250 => 65,  236 => 62,  231 => 59,  217 => 56,  212 => 53,  198 => 50,  193 => 47,  179 => 44,  174 => 41,  160 => 38,  155 => 35,  141 => 32,  136 => 29,  122 => 26,  117 => 23,  103 => 20,  98 => 17,  84 => 14,  79 => 11,  65 => 8,  57 => 3,  51 => 1,);
    }

    public function getSourceContext(): Source
    {
        return new Source("<section {{ attributes }}>

    <h2 class=\"block-title block-title-medium\">{{ 'homepage.demo'|trans }}</h2>
    <div class=\"list cards-list media-list inset margin-vertical-half\">
        <ul class=\"row align-items-stretch justify-content-flex-start\" style=\"column-gap: var(--f7-grid-gap);\">

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_installation')), title: 'Installation', description: 'Using the beforeinstallprompt event, a native dialog can be displayed to install a web app' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:install-mobile', class: 'icon size-32 color-white', alt: 'Install' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_offline_support')), title: 'Offline support', description: 'The Service Worker enables web apps to work offline' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:download-for-offline', class: 'icon size-32 color-white', alt: 'Offline support' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_notifications')), title: 'Notifications', description: 'The Notifications API enables web apps to display notifications, even when the app is not active.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:notifications-outline', class: 'icon size-32 color-white', alt: 'Notifications' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_shortcuts')), title: 'Shortcuts', description: 'Shortcuts provide quick access to pages in your app from the app icon.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'tdesign:mobile-shortcut-filled', class: 'icon size-32 color-white', alt: 'Shortcuts' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_view_transition')), title: 'View Transitions', description: 'The View Transitions API enables app-like transitions between pages.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:auto-awesome-motion', class: 'icon size-32 color-white', alt: 'View Transitions' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_geolocation')), title: 'Geolocation', description: 'The Geolocation API enables users to share their location with web apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-gps-fixed', class: 'icon size-32 color-white', alt: 'Geolocation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_media_capture')), title: 'Media capture', description: 'Media capture allows web apps to use the camera and microphone of a device' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:videocam', class: 'icon size-32 color-white', alt: 'Media capture' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-deeporange\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_picture_in_picture')), title: 'Picture-in-picture', description: 'The Document Picture-in-Picture API makes it possible to open an always-on-top window that can be populated with arbitrary HTML content.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:picture-in-picture', class: 'icon size-32 color-white', alt: 'Picture-in-picture' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_file_system')), title: 'File System', description: 'Access to the file system of the user\\'s device' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-insert-drive-file', class: 'icon size-32 color-white', alt: 'File System' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_authentication')), title: 'Authentication', description: 'Web Authentication API (WebAuthn) enables passwordless authentication through your device\\'s fingerprint reader or an external USB Security Key.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-fingerprint', class: 'icon size-32 color-white', alt: 'Authentication' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_protocol_handling')), title: 'Protocol Handling', description: 'Protocol handling enables web apps to register their ability to open links with particular URL schemes.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:language', class: 'icon size-32 color-white', alt: 'Protocol Handling' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_file_handling')), title: 'File Handling API', description: 'The File Handling API enables web apps to register as file handlers with the operating system' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:folder-open', class: 'icon size-32 color-white', alt: 'File Handling API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { link: (path('app_feature_contact_picker')), title: 'Contact picker', description: 'The Contact Picker API allows web apps to select the user\\'s contacts after permission has been granted.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:account-box', class: 'icon size-32 color-white', alt: 'Contact picker' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_web_share')), title: 'Web share', description: 'The Web Share API invokes the native share mechanism of the device and allows users to share text, URLs or files.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:share', class: 'icon size-32 color-white', alt: 'Web share' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { link: (path('app_feature_barcode_detection')), title: 'Barcode detection', description: 'The Barcode Detection API detects barcodes and QR codes in images.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:qr-code-scanner', class: 'icon size-32 color-white', alt: 'Barcode detection' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { link: (path('app_feature_face_detection')), title: 'Face detection', description: 'The Shape Detection API detects faces in images.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:face', class: 'icon size-32 color-white', alt: 'Face detection' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_vibration')), title: 'Vibration', description: 'The Vibration API enables web apps to make a mobile device vibrate.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:vibration', class: 'icon size-32 color-white', alt: 'Vibration' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_audio_recording')), title: 'Audio recording', description: 'Record audio using MediaRecorder and visualize audio using Web Audio API.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:mic', class: 'icon size-32 color-white', alt: 'Audio recording' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_audio')), title: 'Audio', description: 'The Media Session API allows web apps to display controls for media playback on a device\\'s lock screen.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:round-play-circle-filled', class: 'icon size-32 color-white', alt: 'Audio' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { link: (path('app_feature_audio_session')), title: 'Audio Session API', description: 'The Audio Session API configures how audio from web apps should mix with audio from native apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:tune', class: 'icon size-32 color-white', alt: 'Audio Session API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_screen_capture')), title: 'Screen Capturing', description: 'Capture Handle and Captured Surface Control enable screen capturing web apps to remotely control captured web apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-share', class: 'icon size-32 color-white', alt: 'Screen Capturing' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_element_capture')), title: 'Element Capture', description: 'Element Capture enables screen capturing web apps to record specific HTML elements.' } %}
                    {% block content %}<img src=\"{{ asset('images/element-capture.svg') }}\" alt=\"Element capture\" />
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { link: (path('app_feature_background_sync')), title: 'Background Sync API', description: 'The Background Sync API enables web apps to defer tasks when it\\'s offline so they can be run when the network connection is restored.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:sync', class: 'icon size-32 color-white', alt: 'Background Sync API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { link: (path('app_feature_background_fetch')), title: 'Background Fetch API', description: 'The Background Fetch API enables web apps to download large files in the background even when the app is not running.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:downloading', class: 'icon size-32 color-white', alt: 'Background Fetch API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_storage')), title: 'Storage API', description: 'The Storage API enables web apps to persist structured data in the user\\'s browser.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:inventory', class: 'icon size-32 color-white', alt: 'Storage API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_bluetooth')), title: 'Bluetooth', description: 'The Web Bluetooth API enables web apps to connect to Bluetooth Low Energy (BLE) devices and read values from or write values to it.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:bluetooth', class: 'icon size-32 color-white', alt: 'Bluetooth' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_nfc')), title: 'NFC', description: 'The Web NFC API enables web apps to read and write to NFC tags.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:nfc', class: 'icon size-32 color-white', alt: 'NFC' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { link: (path('app_feature_ar_vr')), title: 'AR/VR', description: 'Augmented reality enables web apps to place virtual objects in reality.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:layers', class: 'icon size-32 color-white', alt: 'AR/VR' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { link: (path('app_feature_payment')), title: 'Payment', description: 'The Payment Request API provides a browser-based method to enable users to make payments on the web, using a credit card, Apple Pay or Google Pay.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:credit-card', class: 'icon size-32 color-white', alt: 'Payment' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_wake_lock')), title: 'Wake lock', description: 'The Screen Wake Lock API enables web apps to prevent devices from dimming or locking the screen when the app needs to keep running.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-lock-portrait', class: 'icon size-32 color-white', alt: 'Wake lock' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_orientation')), title: 'Orientation', description: 'The DeviceOrientationEvent gives information about the physical orientation of the user\\'s device.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-rotation', class: 'icon size-32 color-white', alt: 'Orientation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_device_motion')), title: 'Motion', description: 'The DeviceMotionEvent gives information about the speed of changes for the position and orientation of the user\\'s device.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:3d-rotation', class: 'icon size-32 color-white', alt: 'Motion' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_network_info')), title: 'Network info', description: 'The NetworkInformation API provides information about the connection of a device, allowing web apps to adapt functionality based on network quality.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:network-check', class: 'icon size-32 color-white', alt: 'Network info' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_speech_synthesis')), title: 'Speech synthesis', description: 'Speech synthesis provides text-to-speech and allows programs to read out their text content.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:record-voice-over', class: 'icon size-32 color-white', alt: 'Speech synthesis' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_speech_recognition')), title: 'Speech recognition', description: 'Speech recognition is part of the Web Speech API and provides the ability to recognize voice context from an audio input.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:hearing', class: 'icon size-32 color-white', alt: 'Speech recognition' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_multi_touch')), title: 'Multi touch', description: 'Touch events enable web apps to capture complex touch behaviour.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:touch-app', class: 'icon size-32 color-white', alt: 'Multi touch' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_i18n')), title: 'i18n', description: 'Internationalization (i18n) enables web apps to adapt to different languages and regions.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'fluent-mdl2:locale-language', class: 'icon size-32 color-white', alt: 'i18n' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_presentation')), title: 'Presentation', description: 'The Presentation API enables web apps to display content on external screens.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ri:presentation-fill', class: 'icon size-32 color-white', alt: 'presentation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

        </ul>
    </div>

</section>", "components/Features.html.twig", "/Users/praveenmujawdiya/Documents/survos/pwa-f7/templates/components/Features.html.twig");
    }
}


/* components/Features.html.twig */
class __TwigTemplate_1fb5cbdf94a162448bd258deeed21be9___4852957411 extends Template
{
    private Source $source;
    /**
     * @var array<string, Template>
     */
    private array $macros = [];

    public function __construct(Environment $env)
    {
        parent::__construct($env);

        $this->source = $this->getSourceContext();

        $this->blocks = [
            'outer__block_fallback' => [$this, 'block_outer__block_fallback'],
            'content' => [$this, 'block_content'],
        ];
    }

    protected function doGetParent(array $context): bool|string|Template|TemplateWrapper
    {
        // line 170
        return $this->loadTemplate((isset($context["__parent__"]) || array_key_exists("__parent__", $context) ? $context["__parent__"] : (function () { throw new RuntimeError('Variable "__parent__" does not exist.', 170, $this->source); })()), "components/Features.html.twig", 170);
    }

    protected function doDisplay(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        yield from $this->getParent($context)->unwrap()->yield($context, array_merge($this->blocks, $blocks));
        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

    }

    /**
     * @return iterable<null|scalar|\Stringable>
     */
    public function block_outer__block_fallback(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        yield from [];
    }

    // line 171
    /**
     * @return iterable<null|scalar|\Stringable>
     */
    public function block_content(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        yield $this->env->getRuntime('Symfony\UX\TwigComponent\Twig\ComponentRuntime')->render("ux:icon", ["name" => "material-symbols:layers", "class" => "icon size-32 color-white", "alt" => "AR/VR"]);
        yield "
                ";
        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        yield from [];
    }

    /**
     * @codeCoverageIgnore
     */
    public function getTemplateName(): string
    {
        return "components/Features.html.twig";
    }

    /**
     * @codeCoverageIgnore
     */
    public function isTraitable(): bool
    {
        return false;
    }

    /**
     * @codeCoverageIgnore
     */
    public function getDebugInfo(): array
    {
        return array (  11327 => 171,  11272 => 170,  10950 => 165,  10895 => 164,  10573 => 159,  10518 => 158,  10196 => 153,  10141 => 152,  9819 => 147,  9764 => 146,  9442 => 141,  9387 => 140,  9064 => 135,  9009 => 134,  8687 => 129,  8632 => 128,  8310 => 123,  8255 => 122,  7933 => 117,  7878 => 116,  7556 => 111,  7501 => 110,  7179 => 105,  7124 => 104,  6802 => 99,  6747 => 98,  6425 => 93,  6370 => 92,  6048 => 87,  5993 => 86,  5671 => 81,  5616 => 80,  5294 => 75,  5239 => 74,  4917 => 69,  4862 => 68,  4540 => 63,  4485 => 62,  4163 => 57,  4108 => 56,  3786 => 51,  3731 => 50,  3409 => 45,  3354 => 44,  3032 => 39,  2977 => 38,  2655 => 33,  2600 => 32,  2278 => 27,  2223 => 26,  1901 => 21,  1846 => 20,  1524 => 15,  1469 => 14,  1147 => 9,  1092 => 8,  782 => 233,  768 => 230,  763 => 227,  749 => 224,  744 => 221,  730 => 218,  725 => 215,  711 => 212,  706 => 209,  692 => 206,  687 => 203,  673 => 200,  668 => 197,  654 => 194,  649 => 191,  635 => 188,  630 => 185,  616 => 182,  611 => 179,  597 => 176,  592 => 173,  578 => 170,  573 => 167,  559 => 164,  554 => 161,  540 => 158,  535 => 155,  521 => 152,  516 => 149,  502 => 146,  497 => 143,  483 => 140,  478 => 137,  464 => 134,  459 => 131,  445 => 128,  440 => 125,  426 => 122,  421 => 119,  407 => 116,  402 => 113,  388 => 110,  383 => 107,  369 => 104,  364 => 101,  350 => 98,  345 => 95,  331 => 92,  326 => 89,  312 => 86,  307 => 83,  293 => 80,  288 => 77,  274 => 74,  269 => 71,  255 => 68,  250 => 65,  236 => 62,  231 => 59,  217 => 56,  212 => 53,  198 => 50,  193 => 47,  179 => 44,  174 => 41,  160 => 38,  155 => 35,  141 => 32,  136 => 29,  122 => 26,  117 => 23,  103 => 20,  98 => 17,  84 => 14,  79 => 11,  65 => 8,  57 => 3,  51 => 1,);
    }

    public function getSourceContext(): Source
    {
        return new Source("<section {{ attributes }}>

    <h2 class=\"block-title block-title-medium\">{{ 'homepage.demo'|trans }}</h2>
    <div class=\"list cards-list media-list inset margin-vertical-half\">
        <ul class=\"row align-items-stretch justify-content-flex-start\" style=\"column-gap: var(--f7-grid-gap);\">

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_installation')), title: 'Installation', description: 'Using the beforeinstallprompt event, a native dialog can be displayed to install a web app' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:install-mobile', class: 'icon size-32 color-white', alt: 'Install' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_offline_support')), title: 'Offline support', description: 'The Service Worker enables web apps to work offline' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:download-for-offline', class: 'icon size-32 color-white', alt: 'Offline support' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_notifications')), title: 'Notifications', description: 'The Notifications API enables web apps to display notifications, even when the app is not active.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:notifications-outline', class: 'icon size-32 color-white', alt: 'Notifications' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_shortcuts')), title: 'Shortcuts', description: 'Shortcuts provide quick access to pages in your app from the app icon.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'tdesign:mobile-shortcut-filled', class: 'icon size-32 color-white', alt: 'Shortcuts' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_view_transition')), title: 'View Transitions', description: 'The View Transitions API enables app-like transitions between pages.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:auto-awesome-motion', class: 'icon size-32 color-white', alt: 'View Transitions' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_geolocation')), title: 'Geolocation', description: 'The Geolocation API enables users to share their location with web apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-gps-fixed', class: 'icon size-32 color-white', alt: 'Geolocation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_media_capture')), title: 'Media capture', description: 'Media capture allows web apps to use the camera and microphone of a device' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:videocam', class: 'icon size-32 color-white', alt: 'Media capture' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-deeporange\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_picture_in_picture')), title: 'Picture-in-picture', description: 'The Document Picture-in-Picture API makes it possible to open an always-on-top window that can be populated with arbitrary HTML content.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:picture-in-picture', class: 'icon size-32 color-white', alt: 'Picture-in-picture' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_file_system')), title: 'File System', description: 'Access to the file system of the user\\'s device' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-insert-drive-file', class: 'icon size-32 color-white', alt: 'File System' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_authentication')), title: 'Authentication', description: 'Web Authentication API (WebAuthn) enables passwordless authentication through your device\\'s fingerprint reader or an external USB Security Key.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-fingerprint', class: 'icon size-32 color-white', alt: 'Authentication' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_protocol_handling')), title: 'Protocol Handling', description: 'Protocol handling enables web apps to register their ability to open links with particular URL schemes.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:language', class: 'icon size-32 color-white', alt: 'Protocol Handling' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_file_handling')), title: 'File Handling API', description: 'The File Handling API enables web apps to register as file handlers with the operating system' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:folder-open', class: 'icon size-32 color-white', alt: 'File Handling API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { link: (path('app_feature_contact_picker')), title: 'Contact picker', description: 'The Contact Picker API allows web apps to select the user\\'s contacts after permission has been granted.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:account-box', class: 'icon size-32 color-white', alt: 'Contact picker' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_web_share')), title: 'Web share', description: 'The Web Share API invokes the native share mechanism of the device and allows users to share text, URLs or files.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:share', class: 'icon size-32 color-white', alt: 'Web share' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { link: (path('app_feature_barcode_detection')), title: 'Barcode detection', description: 'The Barcode Detection API detects barcodes and QR codes in images.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:qr-code-scanner', class: 'icon size-32 color-white', alt: 'Barcode detection' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { link: (path('app_feature_face_detection')), title: 'Face detection', description: 'The Shape Detection API detects faces in images.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:face', class: 'icon size-32 color-white', alt: 'Face detection' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_vibration')), title: 'Vibration', description: 'The Vibration API enables web apps to make a mobile device vibrate.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:vibration', class: 'icon size-32 color-white', alt: 'Vibration' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_audio_recording')), title: 'Audio recording', description: 'Record audio using MediaRecorder and visualize audio using Web Audio API.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:mic', class: 'icon size-32 color-white', alt: 'Audio recording' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_audio')), title: 'Audio', description: 'The Media Session API allows web apps to display controls for media playback on a device\\'s lock screen.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:round-play-circle-filled', class: 'icon size-32 color-white', alt: 'Audio' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { link: (path('app_feature_audio_session')), title: 'Audio Session API', description: 'The Audio Session API configures how audio from web apps should mix with audio from native apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:tune', class: 'icon size-32 color-white', alt: 'Audio Session API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_screen_capture')), title: 'Screen Capturing', description: 'Capture Handle and Captured Surface Control enable screen capturing web apps to remotely control captured web apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-share', class: 'icon size-32 color-white', alt: 'Screen Capturing' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_element_capture')), title: 'Element Capture', description: 'Element Capture enables screen capturing web apps to record specific HTML elements.' } %}
                    {% block content %}<img src=\"{{ asset('images/element-capture.svg') }}\" alt=\"Element capture\" />
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { link: (path('app_feature_background_sync')), title: 'Background Sync API', description: 'The Background Sync API enables web apps to defer tasks when it\\'s offline so they can be run when the network connection is restored.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:sync', class: 'icon size-32 color-white', alt: 'Background Sync API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { link: (path('app_feature_background_fetch')), title: 'Background Fetch API', description: 'The Background Fetch API enables web apps to download large files in the background even when the app is not running.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:downloading', class: 'icon size-32 color-white', alt: 'Background Fetch API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_storage')), title: 'Storage API', description: 'The Storage API enables web apps to persist structured data in the user\\'s browser.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:inventory', class: 'icon size-32 color-white', alt: 'Storage API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_bluetooth')), title: 'Bluetooth', description: 'The Web Bluetooth API enables web apps to connect to Bluetooth Low Energy (BLE) devices and read values from or write values to it.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:bluetooth', class: 'icon size-32 color-white', alt: 'Bluetooth' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_nfc')), title: 'NFC', description: 'The Web NFC API enables web apps to read and write to NFC tags.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:nfc', class: 'icon size-32 color-white', alt: 'NFC' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { link: (path('app_feature_ar_vr')), title: 'AR/VR', description: 'Augmented reality enables web apps to place virtual objects in reality.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:layers', class: 'icon size-32 color-white', alt: 'AR/VR' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { link: (path('app_feature_payment')), title: 'Payment', description: 'The Payment Request API provides a browser-based method to enable users to make payments on the web, using a credit card, Apple Pay or Google Pay.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:credit-card', class: 'icon size-32 color-white', alt: 'Payment' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_wake_lock')), title: 'Wake lock', description: 'The Screen Wake Lock API enables web apps to prevent devices from dimming or locking the screen when the app needs to keep running.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-lock-portrait', class: 'icon size-32 color-white', alt: 'Wake lock' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_orientation')), title: 'Orientation', description: 'The DeviceOrientationEvent gives information about the physical orientation of the user\\'s device.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-rotation', class: 'icon size-32 color-white', alt: 'Orientation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_device_motion')), title: 'Motion', description: 'The DeviceMotionEvent gives information about the speed of changes for the position and orientation of the user\\'s device.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:3d-rotation', class: 'icon size-32 color-white', alt: 'Motion' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_network_info')), title: 'Network info', description: 'The NetworkInformation API provides information about the connection of a device, allowing web apps to adapt functionality based on network quality.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:network-check', class: 'icon size-32 color-white', alt: 'Network info' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_speech_synthesis')), title: 'Speech synthesis', description: 'Speech synthesis provides text-to-speech and allows programs to read out their text content.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:record-voice-over', class: 'icon size-32 color-white', alt: 'Speech synthesis' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_speech_recognition')), title: 'Speech recognition', description: 'Speech recognition is part of the Web Speech API and provides the ability to recognize voice context from an audio input.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:hearing', class: 'icon size-32 color-white', alt: 'Speech recognition' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_multi_touch')), title: 'Multi touch', description: 'Touch events enable web apps to capture complex touch behaviour.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:touch-app', class: 'icon size-32 color-white', alt: 'Multi touch' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_i18n')), title: 'i18n', description: 'Internationalization (i18n) enables web apps to adapt to different languages and regions.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'fluent-mdl2:locale-language', class: 'icon size-32 color-white', alt: 'i18n' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_presentation')), title: 'Presentation', description: 'The Presentation API enables web apps to display content on external screens.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ri:presentation-fill', class: 'icon size-32 color-white', alt: 'presentation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

        </ul>
    </div>

</section>", "components/Features.html.twig", "/Users/praveenmujawdiya/Documents/survos/pwa-f7/templates/components/Features.html.twig");
    }
}


/* components/Features.html.twig */
class __TwigTemplate_1fb5cbdf94a162448bd258deeed21be9___41197658321 extends Template
{
    private Source $source;
    /**
     * @var array<string, Template>
     */
    private array $macros = [];

    public function __construct(Environment $env)
    {
        parent::__construct($env);

        $this->source = $this->getSourceContext();

        $this->blocks = [
            'outer__block_fallback' => [$this, 'block_outer__block_fallback'],
            'content' => [$this, 'block_content'],
        ];
    }

    protected function doGetParent(array $context): bool|string|Template|TemplateWrapper
    {
        // line 176
        return $this->loadTemplate((isset($context["__parent__"]) || array_key_exists("__parent__", $context) ? $context["__parent__"] : (function () { throw new RuntimeError('Variable "__parent__" does not exist.', 176, $this->source); })()), "components/Features.html.twig", 176);
    }

    protected function doDisplay(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        yield from $this->getParent($context)->unwrap()->yield($context, array_merge($this->blocks, $blocks));
        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

    }

    /**
     * @return iterable<null|scalar|\Stringable>
     */
    public function block_outer__block_fallback(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        yield from [];
    }

    // line 177
    /**
     * @return iterable<null|scalar|\Stringable>
     */
    public function block_content(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        yield $this->env->getRuntime('Symfony\UX\TwigComponent\Twig\ComponentRuntime')->render("ux:icon", ["name" => "material-symbols:credit-card", "class" => "icon size-32 color-white", "alt" => "Payment"]);
        yield "
                ";
        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        yield from [];
    }

    /**
     * @codeCoverageIgnore
     */
    public function getTemplateName(): string
    {
        return "components/Features.html.twig";
    }

    /**
     * @codeCoverageIgnore
     */
    public function isTraitable(): bool
    {
        return false;
    }

    /**
     * @codeCoverageIgnore
     */
    public function getDebugInfo(): array
    {
        return array (  11704 => 177,  11649 => 176,  11327 => 171,  11272 => 170,  10950 => 165,  10895 => 164,  10573 => 159,  10518 => 158,  10196 => 153,  10141 => 152,  9819 => 147,  9764 => 146,  9442 => 141,  9387 => 140,  9064 => 135,  9009 => 134,  8687 => 129,  8632 => 128,  8310 => 123,  8255 => 122,  7933 => 117,  7878 => 116,  7556 => 111,  7501 => 110,  7179 => 105,  7124 => 104,  6802 => 99,  6747 => 98,  6425 => 93,  6370 => 92,  6048 => 87,  5993 => 86,  5671 => 81,  5616 => 80,  5294 => 75,  5239 => 74,  4917 => 69,  4862 => 68,  4540 => 63,  4485 => 62,  4163 => 57,  4108 => 56,  3786 => 51,  3731 => 50,  3409 => 45,  3354 => 44,  3032 => 39,  2977 => 38,  2655 => 33,  2600 => 32,  2278 => 27,  2223 => 26,  1901 => 21,  1846 => 20,  1524 => 15,  1469 => 14,  1147 => 9,  1092 => 8,  782 => 233,  768 => 230,  763 => 227,  749 => 224,  744 => 221,  730 => 218,  725 => 215,  711 => 212,  706 => 209,  692 => 206,  687 => 203,  673 => 200,  668 => 197,  654 => 194,  649 => 191,  635 => 188,  630 => 185,  616 => 182,  611 => 179,  597 => 176,  592 => 173,  578 => 170,  573 => 167,  559 => 164,  554 => 161,  540 => 158,  535 => 155,  521 => 152,  516 => 149,  502 => 146,  497 => 143,  483 => 140,  478 => 137,  464 => 134,  459 => 131,  445 => 128,  440 => 125,  426 => 122,  421 => 119,  407 => 116,  402 => 113,  388 => 110,  383 => 107,  369 => 104,  364 => 101,  350 => 98,  345 => 95,  331 => 92,  326 => 89,  312 => 86,  307 => 83,  293 => 80,  288 => 77,  274 => 74,  269 => 71,  255 => 68,  250 => 65,  236 => 62,  231 => 59,  217 => 56,  212 => 53,  198 => 50,  193 => 47,  179 => 44,  174 => 41,  160 => 38,  155 => 35,  141 => 32,  136 => 29,  122 => 26,  117 => 23,  103 => 20,  98 => 17,  84 => 14,  79 => 11,  65 => 8,  57 => 3,  51 => 1,);
    }

    public function getSourceContext(): Source
    {
        return new Source("<section {{ attributes }}>

    <h2 class=\"block-title block-title-medium\">{{ 'homepage.demo'|trans }}</h2>
    <div class=\"list cards-list media-list inset margin-vertical-half\">
        <ul class=\"row align-items-stretch justify-content-flex-start\" style=\"column-gap: var(--f7-grid-gap);\">

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_installation')), title: 'Installation', description: 'Using the beforeinstallprompt event, a native dialog can be displayed to install a web app' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:install-mobile', class: 'icon size-32 color-white', alt: 'Install' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_offline_support')), title: 'Offline support', description: 'The Service Worker enables web apps to work offline' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:download-for-offline', class: 'icon size-32 color-white', alt: 'Offline support' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_notifications')), title: 'Notifications', description: 'The Notifications API enables web apps to display notifications, even when the app is not active.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:notifications-outline', class: 'icon size-32 color-white', alt: 'Notifications' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_shortcuts')), title: 'Shortcuts', description: 'Shortcuts provide quick access to pages in your app from the app icon.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'tdesign:mobile-shortcut-filled', class: 'icon size-32 color-white', alt: 'Shortcuts' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_view_transition')), title: 'View Transitions', description: 'The View Transitions API enables app-like transitions between pages.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:auto-awesome-motion', class: 'icon size-32 color-white', alt: 'View Transitions' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_geolocation')), title: 'Geolocation', description: 'The Geolocation API enables users to share their location with web apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-gps-fixed', class: 'icon size-32 color-white', alt: 'Geolocation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_media_capture')), title: 'Media capture', description: 'Media capture allows web apps to use the camera and microphone of a device' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:videocam', class: 'icon size-32 color-white', alt: 'Media capture' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-deeporange\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_picture_in_picture')), title: 'Picture-in-picture', description: 'The Document Picture-in-Picture API makes it possible to open an always-on-top window that can be populated with arbitrary HTML content.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:picture-in-picture', class: 'icon size-32 color-white', alt: 'Picture-in-picture' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_file_system')), title: 'File System', description: 'Access to the file system of the user\\'s device' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-insert-drive-file', class: 'icon size-32 color-white', alt: 'File System' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_authentication')), title: 'Authentication', description: 'Web Authentication API (WebAuthn) enables passwordless authentication through your device\\'s fingerprint reader or an external USB Security Key.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-fingerprint', class: 'icon size-32 color-white', alt: 'Authentication' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_protocol_handling')), title: 'Protocol Handling', description: 'Protocol handling enables web apps to register their ability to open links with particular URL schemes.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:language', class: 'icon size-32 color-white', alt: 'Protocol Handling' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_file_handling')), title: 'File Handling API', description: 'The File Handling API enables web apps to register as file handlers with the operating system' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:folder-open', class: 'icon size-32 color-white', alt: 'File Handling API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { link: (path('app_feature_contact_picker')), title: 'Contact picker', description: 'The Contact Picker API allows web apps to select the user\\'s contacts after permission has been granted.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:account-box', class: 'icon size-32 color-white', alt: 'Contact picker' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_web_share')), title: 'Web share', description: 'The Web Share API invokes the native share mechanism of the device and allows users to share text, URLs or files.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:share', class: 'icon size-32 color-white', alt: 'Web share' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { link: (path('app_feature_barcode_detection')), title: 'Barcode detection', description: 'The Barcode Detection API detects barcodes and QR codes in images.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:qr-code-scanner', class: 'icon size-32 color-white', alt: 'Barcode detection' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { link: (path('app_feature_face_detection')), title: 'Face detection', description: 'The Shape Detection API detects faces in images.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:face', class: 'icon size-32 color-white', alt: 'Face detection' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_vibration')), title: 'Vibration', description: 'The Vibration API enables web apps to make a mobile device vibrate.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:vibration', class: 'icon size-32 color-white', alt: 'Vibration' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_audio_recording')), title: 'Audio recording', description: 'Record audio using MediaRecorder and visualize audio using Web Audio API.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:mic', class: 'icon size-32 color-white', alt: 'Audio recording' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_audio')), title: 'Audio', description: 'The Media Session API allows web apps to display controls for media playback on a device\\'s lock screen.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:round-play-circle-filled', class: 'icon size-32 color-white', alt: 'Audio' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { link: (path('app_feature_audio_session')), title: 'Audio Session API', description: 'The Audio Session API configures how audio from web apps should mix with audio from native apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:tune', class: 'icon size-32 color-white', alt: 'Audio Session API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_screen_capture')), title: 'Screen Capturing', description: 'Capture Handle and Captured Surface Control enable screen capturing web apps to remotely control captured web apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-share', class: 'icon size-32 color-white', alt: 'Screen Capturing' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_element_capture')), title: 'Element Capture', description: 'Element Capture enables screen capturing web apps to record specific HTML elements.' } %}
                    {% block content %}<img src=\"{{ asset('images/element-capture.svg') }}\" alt=\"Element capture\" />
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { link: (path('app_feature_background_sync')), title: 'Background Sync API', description: 'The Background Sync API enables web apps to defer tasks when it\\'s offline so they can be run when the network connection is restored.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:sync', class: 'icon size-32 color-white', alt: 'Background Sync API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { link: (path('app_feature_background_fetch')), title: 'Background Fetch API', description: 'The Background Fetch API enables web apps to download large files in the background even when the app is not running.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:downloading', class: 'icon size-32 color-white', alt: 'Background Fetch API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_storage')), title: 'Storage API', description: 'The Storage API enables web apps to persist structured data in the user\\'s browser.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:inventory', class: 'icon size-32 color-white', alt: 'Storage API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_bluetooth')), title: 'Bluetooth', description: 'The Web Bluetooth API enables web apps to connect to Bluetooth Low Energy (BLE) devices and read values from or write values to it.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:bluetooth', class: 'icon size-32 color-white', alt: 'Bluetooth' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_nfc')), title: 'NFC', description: 'The Web NFC API enables web apps to read and write to NFC tags.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:nfc', class: 'icon size-32 color-white', alt: 'NFC' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { link: (path('app_feature_ar_vr')), title: 'AR/VR', description: 'Augmented reality enables web apps to place virtual objects in reality.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:layers', class: 'icon size-32 color-white', alt: 'AR/VR' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { link: (path('app_feature_payment')), title: 'Payment', description: 'The Payment Request API provides a browser-based method to enable users to make payments on the web, using a credit card, Apple Pay or Google Pay.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:credit-card', class: 'icon size-32 color-white', alt: 'Payment' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_wake_lock')), title: 'Wake lock', description: 'The Screen Wake Lock API enables web apps to prevent devices from dimming or locking the screen when the app needs to keep running.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-lock-portrait', class: 'icon size-32 color-white', alt: 'Wake lock' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_orientation')), title: 'Orientation', description: 'The DeviceOrientationEvent gives information about the physical orientation of the user\\'s device.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-rotation', class: 'icon size-32 color-white', alt: 'Orientation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_device_motion')), title: 'Motion', description: 'The DeviceMotionEvent gives information about the speed of changes for the position and orientation of the user\\'s device.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:3d-rotation', class: 'icon size-32 color-white', alt: 'Motion' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_network_info')), title: 'Network info', description: 'The NetworkInformation API provides information about the connection of a device, allowing web apps to adapt functionality based on network quality.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:network-check', class: 'icon size-32 color-white', alt: 'Network info' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_speech_synthesis')), title: 'Speech synthesis', description: 'Speech synthesis provides text-to-speech and allows programs to read out their text content.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:record-voice-over', class: 'icon size-32 color-white', alt: 'Speech synthesis' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_speech_recognition')), title: 'Speech recognition', description: 'Speech recognition is part of the Web Speech API and provides the ability to recognize voice context from an audio input.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:hearing', class: 'icon size-32 color-white', alt: 'Speech recognition' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_multi_touch')), title: 'Multi touch', description: 'Touch events enable web apps to capture complex touch behaviour.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:touch-app', class: 'icon size-32 color-white', alt: 'Multi touch' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_i18n')), title: 'i18n', description: 'Internationalization (i18n) enables web apps to adapt to different languages and regions.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'fluent-mdl2:locale-language', class: 'icon size-32 color-white', alt: 'i18n' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_presentation')), title: 'Presentation', description: 'The Presentation API enables web apps to display content on external screens.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ri:presentation-fill', class: 'icon size-32 color-white', alt: 'presentation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

        </ul>
    </div>

</section>", "components/Features.html.twig", "/Users/praveenmujawdiya/Documents/survos/pwa-f7/templates/components/Features.html.twig");
    }
}


/* components/Features.html.twig */
class __TwigTemplate_1fb5cbdf94a162448bd258deeed21be9___19710268461 extends Template
{
    private Source $source;
    /**
     * @var array<string, Template>
     */
    private array $macros = [];

    public function __construct(Environment $env)
    {
        parent::__construct($env);

        $this->source = $this->getSourceContext();

        $this->blocks = [
            'outer__block_fallback' => [$this, 'block_outer__block_fallback'],
            'content' => [$this, 'block_content'],
        ];
    }

    protected function doGetParent(array $context): bool|string|Template|TemplateWrapper
    {
        // line 182
        return $this->loadTemplate((isset($context["__parent__"]) || array_key_exists("__parent__", $context) ? $context["__parent__"] : (function () { throw new RuntimeError('Variable "__parent__" does not exist.', 182, $this->source); })()), "components/Features.html.twig", 182);
    }

    protected function doDisplay(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        yield from $this->getParent($context)->unwrap()->yield($context, array_merge($this->blocks, $blocks));
        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

    }

    /**
     * @return iterable<null|scalar|\Stringable>
     */
    public function block_outer__block_fallback(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        yield from [];
    }

    // line 183
    /**
     * @return iterable<null|scalar|\Stringable>
     */
    public function block_content(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        yield $this->env->getRuntime('Symfony\UX\TwigComponent\Twig\ComponentRuntime')->render("ux:icon", ["name" => "material-symbols:screen-lock-portrait", "class" => "icon size-32 color-white", "alt" => "Wake lock"]);
        yield "
                ";
        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        yield from [];
    }

    /**
     * @codeCoverageIgnore
     */
    public function getTemplateName(): string
    {
        return "components/Features.html.twig";
    }

    /**
     * @codeCoverageIgnore
     */
    public function isTraitable(): bool
    {
        return false;
    }

    /**
     * @codeCoverageIgnore
     */
    public function getDebugInfo(): array
    {
        return array (  12081 => 183,  12026 => 182,  11704 => 177,  11649 => 176,  11327 => 171,  11272 => 170,  10950 => 165,  10895 => 164,  10573 => 159,  10518 => 158,  10196 => 153,  10141 => 152,  9819 => 147,  9764 => 146,  9442 => 141,  9387 => 140,  9064 => 135,  9009 => 134,  8687 => 129,  8632 => 128,  8310 => 123,  8255 => 122,  7933 => 117,  7878 => 116,  7556 => 111,  7501 => 110,  7179 => 105,  7124 => 104,  6802 => 99,  6747 => 98,  6425 => 93,  6370 => 92,  6048 => 87,  5993 => 86,  5671 => 81,  5616 => 80,  5294 => 75,  5239 => 74,  4917 => 69,  4862 => 68,  4540 => 63,  4485 => 62,  4163 => 57,  4108 => 56,  3786 => 51,  3731 => 50,  3409 => 45,  3354 => 44,  3032 => 39,  2977 => 38,  2655 => 33,  2600 => 32,  2278 => 27,  2223 => 26,  1901 => 21,  1846 => 20,  1524 => 15,  1469 => 14,  1147 => 9,  1092 => 8,  782 => 233,  768 => 230,  763 => 227,  749 => 224,  744 => 221,  730 => 218,  725 => 215,  711 => 212,  706 => 209,  692 => 206,  687 => 203,  673 => 200,  668 => 197,  654 => 194,  649 => 191,  635 => 188,  630 => 185,  616 => 182,  611 => 179,  597 => 176,  592 => 173,  578 => 170,  573 => 167,  559 => 164,  554 => 161,  540 => 158,  535 => 155,  521 => 152,  516 => 149,  502 => 146,  497 => 143,  483 => 140,  478 => 137,  464 => 134,  459 => 131,  445 => 128,  440 => 125,  426 => 122,  421 => 119,  407 => 116,  402 => 113,  388 => 110,  383 => 107,  369 => 104,  364 => 101,  350 => 98,  345 => 95,  331 => 92,  326 => 89,  312 => 86,  307 => 83,  293 => 80,  288 => 77,  274 => 74,  269 => 71,  255 => 68,  250 => 65,  236 => 62,  231 => 59,  217 => 56,  212 => 53,  198 => 50,  193 => 47,  179 => 44,  174 => 41,  160 => 38,  155 => 35,  141 => 32,  136 => 29,  122 => 26,  117 => 23,  103 => 20,  98 => 17,  84 => 14,  79 => 11,  65 => 8,  57 => 3,  51 => 1,);
    }

    public function getSourceContext(): Source
    {
        return new Source("<section {{ attributes }}>

    <h2 class=\"block-title block-title-medium\">{{ 'homepage.demo'|trans }}</h2>
    <div class=\"list cards-list media-list inset margin-vertical-half\">
        <ul class=\"row align-items-stretch justify-content-flex-start\" style=\"column-gap: var(--f7-grid-gap);\">

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_installation')), title: 'Installation', description: 'Using the beforeinstallprompt event, a native dialog can be displayed to install a web app' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:install-mobile', class: 'icon size-32 color-white', alt: 'Install' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_offline_support')), title: 'Offline support', description: 'The Service Worker enables web apps to work offline' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:download-for-offline', class: 'icon size-32 color-white', alt: 'Offline support' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_notifications')), title: 'Notifications', description: 'The Notifications API enables web apps to display notifications, even when the app is not active.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:notifications-outline', class: 'icon size-32 color-white', alt: 'Notifications' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_shortcuts')), title: 'Shortcuts', description: 'Shortcuts provide quick access to pages in your app from the app icon.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'tdesign:mobile-shortcut-filled', class: 'icon size-32 color-white', alt: 'Shortcuts' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_view_transition')), title: 'View Transitions', description: 'The View Transitions API enables app-like transitions between pages.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:auto-awesome-motion', class: 'icon size-32 color-white', alt: 'View Transitions' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_geolocation')), title: 'Geolocation', description: 'The Geolocation API enables users to share their location with web apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-gps-fixed', class: 'icon size-32 color-white', alt: 'Geolocation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_media_capture')), title: 'Media capture', description: 'Media capture allows web apps to use the camera and microphone of a device' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:videocam', class: 'icon size-32 color-white', alt: 'Media capture' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-deeporange\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_picture_in_picture')), title: 'Picture-in-picture', description: 'The Document Picture-in-Picture API makes it possible to open an always-on-top window that can be populated with arbitrary HTML content.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:picture-in-picture', class: 'icon size-32 color-white', alt: 'Picture-in-picture' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_file_system')), title: 'File System', description: 'Access to the file system of the user\\'s device' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-insert-drive-file', class: 'icon size-32 color-white', alt: 'File System' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_authentication')), title: 'Authentication', description: 'Web Authentication API (WebAuthn) enables passwordless authentication through your device\\'s fingerprint reader or an external USB Security Key.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-fingerprint', class: 'icon size-32 color-white', alt: 'Authentication' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_protocol_handling')), title: 'Protocol Handling', description: 'Protocol handling enables web apps to register their ability to open links with particular URL schemes.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:language', class: 'icon size-32 color-white', alt: 'Protocol Handling' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_file_handling')), title: 'File Handling API', description: 'The File Handling API enables web apps to register as file handlers with the operating system' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:folder-open', class: 'icon size-32 color-white', alt: 'File Handling API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { link: (path('app_feature_contact_picker')), title: 'Contact picker', description: 'The Contact Picker API allows web apps to select the user\\'s contacts after permission has been granted.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:account-box', class: 'icon size-32 color-white', alt: 'Contact picker' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_web_share')), title: 'Web share', description: 'The Web Share API invokes the native share mechanism of the device and allows users to share text, URLs or files.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:share', class: 'icon size-32 color-white', alt: 'Web share' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { link: (path('app_feature_barcode_detection')), title: 'Barcode detection', description: 'The Barcode Detection API detects barcodes and QR codes in images.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:qr-code-scanner', class: 'icon size-32 color-white', alt: 'Barcode detection' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { link: (path('app_feature_face_detection')), title: 'Face detection', description: 'The Shape Detection API detects faces in images.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:face', class: 'icon size-32 color-white', alt: 'Face detection' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_vibration')), title: 'Vibration', description: 'The Vibration API enables web apps to make a mobile device vibrate.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:vibration', class: 'icon size-32 color-white', alt: 'Vibration' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_audio_recording')), title: 'Audio recording', description: 'Record audio using MediaRecorder and visualize audio using Web Audio API.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:mic', class: 'icon size-32 color-white', alt: 'Audio recording' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_audio')), title: 'Audio', description: 'The Media Session API allows web apps to display controls for media playback on a device\\'s lock screen.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:round-play-circle-filled', class: 'icon size-32 color-white', alt: 'Audio' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { link: (path('app_feature_audio_session')), title: 'Audio Session API', description: 'The Audio Session API configures how audio from web apps should mix with audio from native apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:tune', class: 'icon size-32 color-white', alt: 'Audio Session API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_screen_capture')), title: 'Screen Capturing', description: 'Capture Handle and Captured Surface Control enable screen capturing web apps to remotely control captured web apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-share', class: 'icon size-32 color-white', alt: 'Screen Capturing' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_element_capture')), title: 'Element Capture', description: 'Element Capture enables screen capturing web apps to record specific HTML elements.' } %}
                    {% block content %}<img src=\"{{ asset('images/element-capture.svg') }}\" alt=\"Element capture\" />
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { link: (path('app_feature_background_sync')), title: 'Background Sync API', description: 'The Background Sync API enables web apps to defer tasks when it\\'s offline so they can be run when the network connection is restored.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:sync', class: 'icon size-32 color-white', alt: 'Background Sync API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { link: (path('app_feature_background_fetch')), title: 'Background Fetch API', description: 'The Background Fetch API enables web apps to download large files in the background even when the app is not running.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:downloading', class: 'icon size-32 color-white', alt: 'Background Fetch API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_storage')), title: 'Storage API', description: 'The Storage API enables web apps to persist structured data in the user\\'s browser.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:inventory', class: 'icon size-32 color-white', alt: 'Storage API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_bluetooth')), title: 'Bluetooth', description: 'The Web Bluetooth API enables web apps to connect to Bluetooth Low Energy (BLE) devices and read values from or write values to it.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:bluetooth', class: 'icon size-32 color-white', alt: 'Bluetooth' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_nfc')), title: 'NFC', description: 'The Web NFC API enables web apps to read and write to NFC tags.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:nfc', class: 'icon size-32 color-white', alt: 'NFC' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { link: (path('app_feature_ar_vr')), title: 'AR/VR', description: 'Augmented reality enables web apps to place virtual objects in reality.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:layers', class: 'icon size-32 color-white', alt: 'AR/VR' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { link: (path('app_feature_payment')), title: 'Payment', description: 'The Payment Request API provides a browser-based method to enable users to make payments on the web, using a credit card, Apple Pay or Google Pay.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:credit-card', class: 'icon size-32 color-white', alt: 'Payment' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_wake_lock')), title: 'Wake lock', description: 'The Screen Wake Lock API enables web apps to prevent devices from dimming or locking the screen when the app needs to keep running.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-lock-portrait', class: 'icon size-32 color-white', alt: 'Wake lock' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_orientation')), title: 'Orientation', description: 'The DeviceOrientationEvent gives information about the physical orientation of the user\\'s device.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-rotation', class: 'icon size-32 color-white', alt: 'Orientation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_device_motion')), title: 'Motion', description: 'The DeviceMotionEvent gives information about the speed of changes for the position and orientation of the user\\'s device.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:3d-rotation', class: 'icon size-32 color-white', alt: 'Motion' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_network_info')), title: 'Network info', description: 'The NetworkInformation API provides information about the connection of a device, allowing web apps to adapt functionality based on network quality.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:network-check', class: 'icon size-32 color-white', alt: 'Network info' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_speech_synthesis')), title: 'Speech synthesis', description: 'Speech synthesis provides text-to-speech and allows programs to read out their text content.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:record-voice-over', class: 'icon size-32 color-white', alt: 'Speech synthesis' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_speech_recognition')), title: 'Speech recognition', description: 'Speech recognition is part of the Web Speech API and provides the ability to recognize voice context from an audio input.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:hearing', class: 'icon size-32 color-white', alt: 'Speech recognition' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_multi_touch')), title: 'Multi touch', description: 'Touch events enable web apps to capture complex touch behaviour.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:touch-app', class: 'icon size-32 color-white', alt: 'Multi touch' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_i18n')), title: 'i18n', description: 'Internationalization (i18n) enables web apps to adapt to different languages and regions.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'fluent-mdl2:locale-language', class: 'icon size-32 color-white', alt: 'i18n' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_presentation')), title: 'Presentation', description: 'The Presentation API enables web apps to display content on external screens.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ri:presentation-fill', class: 'icon size-32 color-white', alt: 'presentation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

        </ul>
    </div>

</section>", "components/Features.html.twig", "/Users/praveenmujawdiya/Documents/survos/pwa-f7/templates/components/Features.html.twig");
    }
}


/* components/Features.html.twig */
class __TwigTemplate_1fb5cbdf94a162448bd258deeed21be9___25112459521 extends Template
{
    private Source $source;
    /**
     * @var array<string, Template>
     */
    private array $macros = [];

    public function __construct(Environment $env)
    {
        parent::__construct($env);

        $this->source = $this->getSourceContext();

        $this->blocks = [
            'outer__block_fallback' => [$this, 'block_outer__block_fallback'],
            'content' => [$this, 'block_content'],
        ];
    }

    protected function doGetParent(array $context): bool|string|Template|TemplateWrapper
    {
        // line 188
        return $this->loadTemplate((isset($context["__parent__"]) || array_key_exists("__parent__", $context) ? $context["__parent__"] : (function () { throw new RuntimeError('Variable "__parent__" does not exist.', 188, $this->source); })()), "components/Features.html.twig", 188);
    }

    protected function doDisplay(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        yield from $this->getParent($context)->unwrap()->yield($context, array_merge($this->blocks, $blocks));
        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

    }

    /**
     * @return iterable<null|scalar|\Stringable>
     */
    public function block_outer__block_fallback(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        yield from [];
    }

    // line 189
    /**
     * @return iterable<null|scalar|\Stringable>
     */
    public function block_content(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        yield $this->env->getRuntime('Symfony\UX\TwigComponent\Twig\ComponentRuntime')->render("ux:icon", ["name" => "material-symbols:screen-rotation", "class" => "icon size-32 color-white", "alt" => "Orientation"]);
        yield "
                ";
        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        yield from [];
    }

    /**
     * @codeCoverageIgnore
     */
    public function getTemplateName(): string
    {
        return "components/Features.html.twig";
    }

    /**
     * @codeCoverageIgnore
     */
    public function isTraitable(): bool
    {
        return false;
    }

    /**
     * @codeCoverageIgnore
     */
    public function getDebugInfo(): array
    {
        return array (  12458 => 189,  12403 => 188,  12081 => 183,  12026 => 182,  11704 => 177,  11649 => 176,  11327 => 171,  11272 => 170,  10950 => 165,  10895 => 164,  10573 => 159,  10518 => 158,  10196 => 153,  10141 => 152,  9819 => 147,  9764 => 146,  9442 => 141,  9387 => 140,  9064 => 135,  9009 => 134,  8687 => 129,  8632 => 128,  8310 => 123,  8255 => 122,  7933 => 117,  7878 => 116,  7556 => 111,  7501 => 110,  7179 => 105,  7124 => 104,  6802 => 99,  6747 => 98,  6425 => 93,  6370 => 92,  6048 => 87,  5993 => 86,  5671 => 81,  5616 => 80,  5294 => 75,  5239 => 74,  4917 => 69,  4862 => 68,  4540 => 63,  4485 => 62,  4163 => 57,  4108 => 56,  3786 => 51,  3731 => 50,  3409 => 45,  3354 => 44,  3032 => 39,  2977 => 38,  2655 => 33,  2600 => 32,  2278 => 27,  2223 => 26,  1901 => 21,  1846 => 20,  1524 => 15,  1469 => 14,  1147 => 9,  1092 => 8,  782 => 233,  768 => 230,  763 => 227,  749 => 224,  744 => 221,  730 => 218,  725 => 215,  711 => 212,  706 => 209,  692 => 206,  687 => 203,  673 => 200,  668 => 197,  654 => 194,  649 => 191,  635 => 188,  630 => 185,  616 => 182,  611 => 179,  597 => 176,  592 => 173,  578 => 170,  573 => 167,  559 => 164,  554 => 161,  540 => 158,  535 => 155,  521 => 152,  516 => 149,  502 => 146,  497 => 143,  483 => 140,  478 => 137,  464 => 134,  459 => 131,  445 => 128,  440 => 125,  426 => 122,  421 => 119,  407 => 116,  402 => 113,  388 => 110,  383 => 107,  369 => 104,  364 => 101,  350 => 98,  345 => 95,  331 => 92,  326 => 89,  312 => 86,  307 => 83,  293 => 80,  288 => 77,  274 => 74,  269 => 71,  255 => 68,  250 => 65,  236 => 62,  231 => 59,  217 => 56,  212 => 53,  198 => 50,  193 => 47,  179 => 44,  174 => 41,  160 => 38,  155 => 35,  141 => 32,  136 => 29,  122 => 26,  117 => 23,  103 => 20,  98 => 17,  84 => 14,  79 => 11,  65 => 8,  57 => 3,  51 => 1,);
    }

    public function getSourceContext(): Source
    {
        return new Source("<section {{ attributes }}>

    <h2 class=\"block-title block-title-medium\">{{ 'homepage.demo'|trans }}</h2>
    <div class=\"list cards-list media-list inset margin-vertical-half\">
        <ul class=\"row align-items-stretch justify-content-flex-start\" style=\"column-gap: var(--f7-grid-gap);\">

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_installation')), title: 'Installation', description: 'Using the beforeinstallprompt event, a native dialog can be displayed to install a web app' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:install-mobile', class: 'icon size-32 color-white', alt: 'Install' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_offline_support')), title: 'Offline support', description: 'The Service Worker enables web apps to work offline' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:download-for-offline', class: 'icon size-32 color-white', alt: 'Offline support' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_notifications')), title: 'Notifications', description: 'The Notifications API enables web apps to display notifications, even when the app is not active.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:notifications-outline', class: 'icon size-32 color-white', alt: 'Notifications' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_shortcuts')), title: 'Shortcuts', description: 'Shortcuts provide quick access to pages in your app from the app icon.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'tdesign:mobile-shortcut-filled', class: 'icon size-32 color-white', alt: 'Shortcuts' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_view_transition')), title: 'View Transitions', description: 'The View Transitions API enables app-like transitions between pages.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:auto-awesome-motion', class: 'icon size-32 color-white', alt: 'View Transitions' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_geolocation')), title: 'Geolocation', description: 'The Geolocation API enables users to share their location with web apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-gps-fixed', class: 'icon size-32 color-white', alt: 'Geolocation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_media_capture')), title: 'Media capture', description: 'Media capture allows web apps to use the camera and microphone of a device' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:videocam', class: 'icon size-32 color-white', alt: 'Media capture' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-deeporange\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_picture_in_picture')), title: 'Picture-in-picture', description: 'The Document Picture-in-Picture API makes it possible to open an always-on-top window that can be populated with arbitrary HTML content.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:picture-in-picture', class: 'icon size-32 color-white', alt: 'Picture-in-picture' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_file_system')), title: 'File System', description: 'Access to the file system of the user\\'s device' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-insert-drive-file', class: 'icon size-32 color-white', alt: 'File System' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_authentication')), title: 'Authentication', description: 'Web Authentication API (WebAuthn) enables passwordless authentication through your device\\'s fingerprint reader or an external USB Security Key.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-fingerprint', class: 'icon size-32 color-white', alt: 'Authentication' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_protocol_handling')), title: 'Protocol Handling', description: 'Protocol handling enables web apps to register their ability to open links with particular URL schemes.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:language', class: 'icon size-32 color-white', alt: 'Protocol Handling' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_file_handling')), title: 'File Handling API', description: 'The File Handling API enables web apps to register as file handlers with the operating system' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:folder-open', class: 'icon size-32 color-white', alt: 'File Handling API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { link: (path('app_feature_contact_picker')), title: 'Contact picker', description: 'The Contact Picker API allows web apps to select the user\\'s contacts after permission has been granted.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:account-box', class: 'icon size-32 color-white', alt: 'Contact picker' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_web_share')), title: 'Web share', description: 'The Web Share API invokes the native share mechanism of the device and allows users to share text, URLs or files.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:share', class: 'icon size-32 color-white', alt: 'Web share' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { link: (path('app_feature_barcode_detection')), title: 'Barcode detection', description: 'The Barcode Detection API detects barcodes and QR codes in images.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:qr-code-scanner', class: 'icon size-32 color-white', alt: 'Barcode detection' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { link: (path('app_feature_face_detection')), title: 'Face detection', description: 'The Shape Detection API detects faces in images.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:face', class: 'icon size-32 color-white', alt: 'Face detection' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_vibration')), title: 'Vibration', description: 'The Vibration API enables web apps to make a mobile device vibrate.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:vibration', class: 'icon size-32 color-white', alt: 'Vibration' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_audio_recording')), title: 'Audio recording', description: 'Record audio using MediaRecorder and visualize audio using Web Audio API.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:mic', class: 'icon size-32 color-white', alt: 'Audio recording' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_audio')), title: 'Audio', description: 'The Media Session API allows web apps to display controls for media playback on a device\\'s lock screen.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:round-play-circle-filled', class: 'icon size-32 color-white', alt: 'Audio' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { link: (path('app_feature_audio_session')), title: 'Audio Session API', description: 'The Audio Session API configures how audio from web apps should mix with audio from native apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:tune', class: 'icon size-32 color-white', alt: 'Audio Session API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_screen_capture')), title: 'Screen Capturing', description: 'Capture Handle and Captured Surface Control enable screen capturing web apps to remotely control captured web apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-share', class: 'icon size-32 color-white', alt: 'Screen Capturing' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_element_capture')), title: 'Element Capture', description: 'Element Capture enables screen capturing web apps to record specific HTML elements.' } %}
                    {% block content %}<img src=\"{{ asset('images/element-capture.svg') }}\" alt=\"Element capture\" />
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { link: (path('app_feature_background_sync')), title: 'Background Sync API', description: 'The Background Sync API enables web apps to defer tasks when it\\'s offline so they can be run when the network connection is restored.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:sync', class: 'icon size-32 color-white', alt: 'Background Sync API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { link: (path('app_feature_background_fetch')), title: 'Background Fetch API', description: 'The Background Fetch API enables web apps to download large files in the background even when the app is not running.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:downloading', class: 'icon size-32 color-white', alt: 'Background Fetch API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_storage')), title: 'Storage API', description: 'The Storage API enables web apps to persist structured data in the user\\'s browser.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:inventory', class: 'icon size-32 color-white', alt: 'Storage API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_bluetooth')), title: 'Bluetooth', description: 'The Web Bluetooth API enables web apps to connect to Bluetooth Low Energy (BLE) devices and read values from or write values to it.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:bluetooth', class: 'icon size-32 color-white', alt: 'Bluetooth' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_nfc')), title: 'NFC', description: 'The Web NFC API enables web apps to read and write to NFC tags.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:nfc', class: 'icon size-32 color-white', alt: 'NFC' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { link: (path('app_feature_ar_vr')), title: 'AR/VR', description: 'Augmented reality enables web apps to place virtual objects in reality.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:layers', class: 'icon size-32 color-white', alt: 'AR/VR' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { link: (path('app_feature_payment')), title: 'Payment', description: 'The Payment Request API provides a browser-based method to enable users to make payments on the web, using a credit card, Apple Pay or Google Pay.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:credit-card', class: 'icon size-32 color-white', alt: 'Payment' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_wake_lock')), title: 'Wake lock', description: 'The Screen Wake Lock API enables web apps to prevent devices from dimming or locking the screen when the app needs to keep running.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-lock-portrait', class: 'icon size-32 color-white', alt: 'Wake lock' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_orientation')), title: 'Orientation', description: 'The DeviceOrientationEvent gives information about the physical orientation of the user\\'s device.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-rotation', class: 'icon size-32 color-white', alt: 'Orientation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_device_motion')), title: 'Motion', description: 'The DeviceMotionEvent gives information about the speed of changes for the position and orientation of the user\\'s device.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:3d-rotation', class: 'icon size-32 color-white', alt: 'Motion' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_network_info')), title: 'Network info', description: 'The NetworkInformation API provides information about the connection of a device, allowing web apps to adapt functionality based on network quality.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:network-check', class: 'icon size-32 color-white', alt: 'Network info' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_speech_synthesis')), title: 'Speech synthesis', description: 'Speech synthesis provides text-to-speech and allows programs to read out their text content.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:record-voice-over', class: 'icon size-32 color-white', alt: 'Speech synthesis' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_speech_recognition')), title: 'Speech recognition', description: 'Speech recognition is part of the Web Speech API and provides the ability to recognize voice context from an audio input.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:hearing', class: 'icon size-32 color-white', alt: 'Speech recognition' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_multi_touch')), title: 'Multi touch', description: 'Touch events enable web apps to capture complex touch behaviour.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:touch-app', class: 'icon size-32 color-white', alt: 'Multi touch' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_i18n')), title: 'i18n', description: 'Internationalization (i18n) enables web apps to adapt to different languages and regions.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'fluent-mdl2:locale-language', class: 'icon size-32 color-white', alt: 'i18n' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_presentation')), title: 'Presentation', description: 'The Presentation API enables web apps to display content on external screens.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ri:presentation-fill', class: 'icon size-32 color-white', alt: 'presentation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

        </ul>
    </div>

</section>", "components/Features.html.twig", "/Users/praveenmujawdiya/Documents/survos/pwa-f7/templates/components/Features.html.twig");
    }
}


/* components/Features.html.twig */
class __TwigTemplate_1fb5cbdf94a162448bd258deeed21be9___22316277541 extends Template
{
    private Source $source;
    /**
     * @var array<string, Template>
     */
    private array $macros = [];

    public function __construct(Environment $env)
    {
        parent::__construct($env);

        $this->source = $this->getSourceContext();

        $this->blocks = [
            'outer__block_fallback' => [$this, 'block_outer__block_fallback'],
            'content' => [$this, 'block_content'],
        ];
    }

    protected function doGetParent(array $context): bool|string|Template|TemplateWrapper
    {
        // line 194
        return $this->loadTemplate((isset($context["__parent__"]) || array_key_exists("__parent__", $context) ? $context["__parent__"] : (function () { throw new RuntimeError('Variable "__parent__" does not exist.', 194, $this->source); })()), "components/Features.html.twig", 194);
    }

    protected function doDisplay(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        yield from $this->getParent($context)->unwrap()->yield($context, array_merge($this->blocks, $blocks));
        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

    }

    /**
     * @return iterable<null|scalar|\Stringable>
     */
    public function block_outer__block_fallback(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        yield from [];
    }

    // line 195
    /**
     * @return iterable<null|scalar|\Stringable>
     */
    public function block_content(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        yield $this->env->getRuntime('Symfony\UX\TwigComponent\Twig\ComponentRuntime')->render("ux:icon", ["name" => "material-symbols:3d-rotation", "class" => "icon size-32 color-white", "alt" => "Motion"]);
        yield "
                ";
        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        yield from [];
    }

    /**
     * @codeCoverageIgnore
     */
    public function getTemplateName(): string
    {
        return "components/Features.html.twig";
    }

    /**
     * @codeCoverageIgnore
     */
    public function isTraitable(): bool
    {
        return false;
    }

    /**
     * @codeCoverageIgnore
     */
    public function getDebugInfo(): array
    {
        return array (  12835 => 195,  12780 => 194,  12458 => 189,  12403 => 188,  12081 => 183,  12026 => 182,  11704 => 177,  11649 => 176,  11327 => 171,  11272 => 170,  10950 => 165,  10895 => 164,  10573 => 159,  10518 => 158,  10196 => 153,  10141 => 152,  9819 => 147,  9764 => 146,  9442 => 141,  9387 => 140,  9064 => 135,  9009 => 134,  8687 => 129,  8632 => 128,  8310 => 123,  8255 => 122,  7933 => 117,  7878 => 116,  7556 => 111,  7501 => 110,  7179 => 105,  7124 => 104,  6802 => 99,  6747 => 98,  6425 => 93,  6370 => 92,  6048 => 87,  5993 => 86,  5671 => 81,  5616 => 80,  5294 => 75,  5239 => 74,  4917 => 69,  4862 => 68,  4540 => 63,  4485 => 62,  4163 => 57,  4108 => 56,  3786 => 51,  3731 => 50,  3409 => 45,  3354 => 44,  3032 => 39,  2977 => 38,  2655 => 33,  2600 => 32,  2278 => 27,  2223 => 26,  1901 => 21,  1846 => 20,  1524 => 15,  1469 => 14,  1147 => 9,  1092 => 8,  782 => 233,  768 => 230,  763 => 227,  749 => 224,  744 => 221,  730 => 218,  725 => 215,  711 => 212,  706 => 209,  692 => 206,  687 => 203,  673 => 200,  668 => 197,  654 => 194,  649 => 191,  635 => 188,  630 => 185,  616 => 182,  611 => 179,  597 => 176,  592 => 173,  578 => 170,  573 => 167,  559 => 164,  554 => 161,  540 => 158,  535 => 155,  521 => 152,  516 => 149,  502 => 146,  497 => 143,  483 => 140,  478 => 137,  464 => 134,  459 => 131,  445 => 128,  440 => 125,  426 => 122,  421 => 119,  407 => 116,  402 => 113,  388 => 110,  383 => 107,  369 => 104,  364 => 101,  350 => 98,  345 => 95,  331 => 92,  326 => 89,  312 => 86,  307 => 83,  293 => 80,  288 => 77,  274 => 74,  269 => 71,  255 => 68,  250 => 65,  236 => 62,  231 => 59,  217 => 56,  212 => 53,  198 => 50,  193 => 47,  179 => 44,  174 => 41,  160 => 38,  155 => 35,  141 => 32,  136 => 29,  122 => 26,  117 => 23,  103 => 20,  98 => 17,  84 => 14,  79 => 11,  65 => 8,  57 => 3,  51 => 1,);
    }

    public function getSourceContext(): Source
    {
        return new Source("<section {{ attributes }}>

    <h2 class=\"block-title block-title-medium\">{{ 'homepage.demo'|trans }}</h2>
    <div class=\"list cards-list media-list inset margin-vertical-half\">
        <ul class=\"row align-items-stretch justify-content-flex-start\" style=\"column-gap: var(--f7-grid-gap);\">

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_installation')), title: 'Installation', description: 'Using the beforeinstallprompt event, a native dialog can be displayed to install a web app' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:install-mobile', class: 'icon size-32 color-white', alt: 'Install' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_offline_support')), title: 'Offline support', description: 'The Service Worker enables web apps to work offline' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:download-for-offline', class: 'icon size-32 color-white', alt: 'Offline support' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_notifications')), title: 'Notifications', description: 'The Notifications API enables web apps to display notifications, even when the app is not active.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:notifications-outline', class: 'icon size-32 color-white', alt: 'Notifications' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_shortcuts')), title: 'Shortcuts', description: 'Shortcuts provide quick access to pages in your app from the app icon.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'tdesign:mobile-shortcut-filled', class: 'icon size-32 color-white', alt: 'Shortcuts' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_view_transition')), title: 'View Transitions', description: 'The View Transitions API enables app-like transitions between pages.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:auto-awesome-motion', class: 'icon size-32 color-white', alt: 'View Transitions' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_geolocation')), title: 'Geolocation', description: 'The Geolocation API enables users to share their location with web apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-gps-fixed', class: 'icon size-32 color-white', alt: 'Geolocation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_media_capture')), title: 'Media capture', description: 'Media capture allows web apps to use the camera and microphone of a device' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:videocam', class: 'icon size-32 color-white', alt: 'Media capture' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-deeporange\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_picture_in_picture')), title: 'Picture-in-picture', description: 'The Document Picture-in-Picture API makes it possible to open an always-on-top window that can be populated with arbitrary HTML content.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:picture-in-picture', class: 'icon size-32 color-white', alt: 'Picture-in-picture' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_file_system')), title: 'File System', description: 'Access to the file system of the user\\'s device' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-insert-drive-file', class: 'icon size-32 color-white', alt: 'File System' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_authentication')), title: 'Authentication', description: 'Web Authentication API (WebAuthn) enables passwordless authentication through your device\\'s fingerprint reader or an external USB Security Key.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-fingerprint', class: 'icon size-32 color-white', alt: 'Authentication' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_protocol_handling')), title: 'Protocol Handling', description: 'Protocol handling enables web apps to register their ability to open links with particular URL schemes.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:language', class: 'icon size-32 color-white', alt: 'Protocol Handling' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_file_handling')), title: 'File Handling API', description: 'The File Handling API enables web apps to register as file handlers with the operating system' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:folder-open', class: 'icon size-32 color-white', alt: 'File Handling API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { link: (path('app_feature_contact_picker')), title: 'Contact picker', description: 'The Contact Picker API allows web apps to select the user\\'s contacts after permission has been granted.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:account-box', class: 'icon size-32 color-white', alt: 'Contact picker' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_web_share')), title: 'Web share', description: 'The Web Share API invokes the native share mechanism of the device and allows users to share text, URLs or files.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:share', class: 'icon size-32 color-white', alt: 'Web share' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { link: (path('app_feature_barcode_detection')), title: 'Barcode detection', description: 'The Barcode Detection API detects barcodes and QR codes in images.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:qr-code-scanner', class: 'icon size-32 color-white', alt: 'Barcode detection' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { link: (path('app_feature_face_detection')), title: 'Face detection', description: 'The Shape Detection API detects faces in images.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:face', class: 'icon size-32 color-white', alt: 'Face detection' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_vibration')), title: 'Vibration', description: 'The Vibration API enables web apps to make a mobile device vibrate.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:vibration', class: 'icon size-32 color-white', alt: 'Vibration' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_audio_recording')), title: 'Audio recording', description: 'Record audio using MediaRecorder and visualize audio using Web Audio API.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:mic', class: 'icon size-32 color-white', alt: 'Audio recording' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_audio')), title: 'Audio', description: 'The Media Session API allows web apps to display controls for media playback on a device\\'s lock screen.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:round-play-circle-filled', class: 'icon size-32 color-white', alt: 'Audio' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { link: (path('app_feature_audio_session')), title: 'Audio Session API', description: 'The Audio Session API configures how audio from web apps should mix with audio from native apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:tune', class: 'icon size-32 color-white', alt: 'Audio Session API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_screen_capture')), title: 'Screen Capturing', description: 'Capture Handle and Captured Surface Control enable screen capturing web apps to remotely control captured web apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-share', class: 'icon size-32 color-white', alt: 'Screen Capturing' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_element_capture')), title: 'Element Capture', description: 'Element Capture enables screen capturing web apps to record specific HTML elements.' } %}
                    {% block content %}<img src=\"{{ asset('images/element-capture.svg') }}\" alt=\"Element capture\" />
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { link: (path('app_feature_background_sync')), title: 'Background Sync API', description: 'The Background Sync API enables web apps to defer tasks when it\\'s offline so they can be run when the network connection is restored.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:sync', class: 'icon size-32 color-white', alt: 'Background Sync API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { link: (path('app_feature_background_fetch')), title: 'Background Fetch API', description: 'The Background Fetch API enables web apps to download large files in the background even when the app is not running.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:downloading', class: 'icon size-32 color-white', alt: 'Background Fetch API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_storage')), title: 'Storage API', description: 'The Storage API enables web apps to persist structured data in the user\\'s browser.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:inventory', class: 'icon size-32 color-white', alt: 'Storage API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_bluetooth')), title: 'Bluetooth', description: 'The Web Bluetooth API enables web apps to connect to Bluetooth Low Energy (BLE) devices and read values from or write values to it.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:bluetooth', class: 'icon size-32 color-white', alt: 'Bluetooth' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_nfc')), title: 'NFC', description: 'The Web NFC API enables web apps to read and write to NFC tags.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:nfc', class: 'icon size-32 color-white', alt: 'NFC' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { link: (path('app_feature_ar_vr')), title: 'AR/VR', description: 'Augmented reality enables web apps to place virtual objects in reality.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:layers', class: 'icon size-32 color-white', alt: 'AR/VR' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { link: (path('app_feature_payment')), title: 'Payment', description: 'The Payment Request API provides a browser-based method to enable users to make payments on the web, using a credit card, Apple Pay or Google Pay.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:credit-card', class: 'icon size-32 color-white', alt: 'Payment' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_wake_lock')), title: 'Wake lock', description: 'The Screen Wake Lock API enables web apps to prevent devices from dimming or locking the screen when the app needs to keep running.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-lock-portrait', class: 'icon size-32 color-white', alt: 'Wake lock' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_orientation')), title: 'Orientation', description: 'The DeviceOrientationEvent gives information about the physical orientation of the user\\'s device.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-rotation', class: 'icon size-32 color-white', alt: 'Orientation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_device_motion')), title: 'Motion', description: 'The DeviceMotionEvent gives information about the speed of changes for the position and orientation of the user\\'s device.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:3d-rotation', class: 'icon size-32 color-white', alt: 'Motion' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_network_info')), title: 'Network info', description: 'The NetworkInformation API provides information about the connection of a device, allowing web apps to adapt functionality based on network quality.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:network-check', class: 'icon size-32 color-white', alt: 'Network info' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_speech_synthesis')), title: 'Speech synthesis', description: 'Speech synthesis provides text-to-speech and allows programs to read out their text content.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:record-voice-over', class: 'icon size-32 color-white', alt: 'Speech synthesis' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_speech_recognition')), title: 'Speech recognition', description: 'Speech recognition is part of the Web Speech API and provides the ability to recognize voice context from an audio input.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:hearing', class: 'icon size-32 color-white', alt: 'Speech recognition' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_multi_touch')), title: 'Multi touch', description: 'Touch events enable web apps to capture complex touch behaviour.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:touch-app', class: 'icon size-32 color-white', alt: 'Multi touch' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_i18n')), title: 'i18n', description: 'Internationalization (i18n) enables web apps to adapt to different languages and regions.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'fluent-mdl2:locale-language', class: 'icon size-32 color-white', alt: 'i18n' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_presentation')), title: 'Presentation', description: 'The Presentation API enables web apps to display content on external screens.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ri:presentation-fill', class: 'icon size-32 color-white', alt: 'presentation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

        </ul>
    </div>

</section>", "components/Features.html.twig", "/Users/praveenmujawdiya/Documents/survos/pwa-f7/templates/components/Features.html.twig");
    }
}


/* components/Features.html.twig */
class __TwigTemplate_1fb5cbdf94a162448bd258deeed21be9___13743019231 extends Template
{
    private Source $source;
    /**
     * @var array<string, Template>
     */
    private array $macros = [];

    public function __construct(Environment $env)
    {
        parent::__construct($env);

        $this->source = $this->getSourceContext();

        $this->blocks = [
            'outer__block_fallback' => [$this, 'block_outer__block_fallback'],
            'content' => [$this, 'block_content'],
        ];
    }

    protected function doGetParent(array $context): bool|string|Template|TemplateWrapper
    {
        // line 200
        return $this->loadTemplate((isset($context["__parent__"]) || array_key_exists("__parent__", $context) ? $context["__parent__"] : (function () { throw new RuntimeError('Variable "__parent__" does not exist.', 200, $this->source); })()), "components/Features.html.twig", 200);
    }

    protected function doDisplay(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        yield from $this->getParent($context)->unwrap()->yield($context, array_merge($this->blocks, $blocks));
        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

    }

    /**
     * @return iterable<null|scalar|\Stringable>
     */
    public function block_outer__block_fallback(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        yield from [];
    }

    // line 201
    /**
     * @return iterable<null|scalar|\Stringable>
     */
    public function block_content(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        yield $this->env->getRuntime('Symfony\UX\TwigComponent\Twig\ComponentRuntime')->render("ux:icon", ["name" => "material-symbols:network-check", "class" => "icon size-32 color-white", "alt" => "Network info"]);
        yield "
                ";
        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        yield from [];
    }

    /**
     * @codeCoverageIgnore
     */
    public function getTemplateName(): string
    {
        return "components/Features.html.twig";
    }

    /**
     * @codeCoverageIgnore
     */
    public function isTraitable(): bool
    {
        return false;
    }

    /**
     * @codeCoverageIgnore
     */
    public function getDebugInfo(): array
    {
        return array (  13212 => 201,  13157 => 200,  12835 => 195,  12780 => 194,  12458 => 189,  12403 => 188,  12081 => 183,  12026 => 182,  11704 => 177,  11649 => 176,  11327 => 171,  11272 => 170,  10950 => 165,  10895 => 164,  10573 => 159,  10518 => 158,  10196 => 153,  10141 => 152,  9819 => 147,  9764 => 146,  9442 => 141,  9387 => 140,  9064 => 135,  9009 => 134,  8687 => 129,  8632 => 128,  8310 => 123,  8255 => 122,  7933 => 117,  7878 => 116,  7556 => 111,  7501 => 110,  7179 => 105,  7124 => 104,  6802 => 99,  6747 => 98,  6425 => 93,  6370 => 92,  6048 => 87,  5993 => 86,  5671 => 81,  5616 => 80,  5294 => 75,  5239 => 74,  4917 => 69,  4862 => 68,  4540 => 63,  4485 => 62,  4163 => 57,  4108 => 56,  3786 => 51,  3731 => 50,  3409 => 45,  3354 => 44,  3032 => 39,  2977 => 38,  2655 => 33,  2600 => 32,  2278 => 27,  2223 => 26,  1901 => 21,  1846 => 20,  1524 => 15,  1469 => 14,  1147 => 9,  1092 => 8,  782 => 233,  768 => 230,  763 => 227,  749 => 224,  744 => 221,  730 => 218,  725 => 215,  711 => 212,  706 => 209,  692 => 206,  687 => 203,  673 => 200,  668 => 197,  654 => 194,  649 => 191,  635 => 188,  630 => 185,  616 => 182,  611 => 179,  597 => 176,  592 => 173,  578 => 170,  573 => 167,  559 => 164,  554 => 161,  540 => 158,  535 => 155,  521 => 152,  516 => 149,  502 => 146,  497 => 143,  483 => 140,  478 => 137,  464 => 134,  459 => 131,  445 => 128,  440 => 125,  426 => 122,  421 => 119,  407 => 116,  402 => 113,  388 => 110,  383 => 107,  369 => 104,  364 => 101,  350 => 98,  345 => 95,  331 => 92,  326 => 89,  312 => 86,  307 => 83,  293 => 80,  288 => 77,  274 => 74,  269 => 71,  255 => 68,  250 => 65,  236 => 62,  231 => 59,  217 => 56,  212 => 53,  198 => 50,  193 => 47,  179 => 44,  174 => 41,  160 => 38,  155 => 35,  141 => 32,  136 => 29,  122 => 26,  117 => 23,  103 => 20,  98 => 17,  84 => 14,  79 => 11,  65 => 8,  57 => 3,  51 => 1,);
    }

    public function getSourceContext(): Source
    {
        return new Source("<section {{ attributes }}>

    <h2 class=\"block-title block-title-medium\">{{ 'homepage.demo'|trans }}</h2>
    <div class=\"list cards-list media-list inset margin-vertical-half\">
        <ul class=\"row align-items-stretch justify-content-flex-start\" style=\"column-gap: var(--f7-grid-gap);\">

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_installation')), title: 'Installation', description: 'Using the beforeinstallprompt event, a native dialog can be displayed to install a web app' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:install-mobile', class: 'icon size-32 color-white', alt: 'Install' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_offline_support')), title: 'Offline support', description: 'The Service Worker enables web apps to work offline' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:download-for-offline', class: 'icon size-32 color-white', alt: 'Offline support' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_notifications')), title: 'Notifications', description: 'The Notifications API enables web apps to display notifications, even when the app is not active.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:notifications-outline', class: 'icon size-32 color-white', alt: 'Notifications' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_shortcuts')), title: 'Shortcuts', description: 'Shortcuts provide quick access to pages in your app from the app icon.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'tdesign:mobile-shortcut-filled', class: 'icon size-32 color-white', alt: 'Shortcuts' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_view_transition')), title: 'View Transitions', description: 'The View Transitions API enables app-like transitions between pages.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:auto-awesome-motion', class: 'icon size-32 color-white', alt: 'View Transitions' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_geolocation')), title: 'Geolocation', description: 'The Geolocation API enables users to share their location with web apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-gps-fixed', class: 'icon size-32 color-white', alt: 'Geolocation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_media_capture')), title: 'Media capture', description: 'Media capture allows web apps to use the camera and microphone of a device' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:videocam', class: 'icon size-32 color-white', alt: 'Media capture' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-deeporange\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_picture_in_picture')), title: 'Picture-in-picture', description: 'The Document Picture-in-Picture API makes it possible to open an always-on-top window that can be populated with arbitrary HTML content.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:picture-in-picture', class: 'icon size-32 color-white', alt: 'Picture-in-picture' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_file_system')), title: 'File System', description: 'Access to the file system of the user\\'s device' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-insert-drive-file', class: 'icon size-32 color-white', alt: 'File System' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_authentication')), title: 'Authentication', description: 'Web Authentication API (WebAuthn) enables passwordless authentication through your device\\'s fingerprint reader or an external USB Security Key.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-fingerprint', class: 'icon size-32 color-white', alt: 'Authentication' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_protocol_handling')), title: 'Protocol Handling', description: 'Protocol handling enables web apps to register their ability to open links with particular URL schemes.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:language', class: 'icon size-32 color-white', alt: 'Protocol Handling' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_file_handling')), title: 'File Handling API', description: 'The File Handling API enables web apps to register as file handlers with the operating system' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:folder-open', class: 'icon size-32 color-white', alt: 'File Handling API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { link: (path('app_feature_contact_picker')), title: 'Contact picker', description: 'The Contact Picker API allows web apps to select the user\\'s contacts after permission has been granted.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:account-box', class: 'icon size-32 color-white', alt: 'Contact picker' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_web_share')), title: 'Web share', description: 'The Web Share API invokes the native share mechanism of the device and allows users to share text, URLs or files.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:share', class: 'icon size-32 color-white', alt: 'Web share' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { link: (path('app_feature_barcode_detection')), title: 'Barcode detection', description: 'The Barcode Detection API detects barcodes and QR codes in images.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:qr-code-scanner', class: 'icon size-32 color-white', alt: 'Barcode detection' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { link: (path('app_feature_face_detection')), title: 'Face detection', description: 'The Shape Detection API detects faces in images.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:face', class: 'icon size-32 color-white', alt: 'Face detection' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_vibration')), title: 'Vibration', description: 'The Vibration API enables web apps to make a mobile device vibrate.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:vibration', class: 'icon size-32 color-white', alt: 'Vibration' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_audio_recording')), title: 'Audio recording', description: 'Record audio using MediaRecorder and visualize audio using Web Audio API.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:mic', class: 'icon size-32 color-white', alt: 'Audio recording' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_audio')), title: 'Audio', description: 'The Media Session API allows web apps to display controls for media playback on a device\\'s lock screen.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:round-play-circle-filled', class: 'icon size-32 color-white', alt: 'Audio' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { link: (path('app_feature_audio_session')), title: 'Audio Session API', description: 'The Audio Session API configures how audio from web apps should mix with audio from native apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:tune', class: 'icon size-32 color-white', alt: 'Audio Session API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_screen_capture')), title: 'Screen Capturing', description: 'Capture Handle and Captured Surface Control enable screen capturing web apps to remotely control captured web apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-share', class: 'icon size-32 color-white', alt: 'Screen Capturing' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_element_capture')), title: 'Element Capture', description: 'Element Capture enables screen capturing web apps to record specific HTML elements.' } %}
                    {% block content %}<img src=\"{{ asset('images/element-capture.svg') }}\" alt=\"Element capture\" />
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { link: (path('app_feature_background_sync')), title: 'Background Sync API', description: 'The Background Sync API enables web apps to defer tasks when it\\'s offline so they can be run when the network connection is restored.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:sync', class: 'icon size-32 color-white', alt: 'Background Sync API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { link: (path('app_feature_background_fetch')), title: 'Background Fetch API', description: 'The Background Fetch API enables web apps to download large files in the background even when the app is not running.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:downloading', class: 'icon size-32 color-white', alt: 'Background Fetch API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_storage')), title: 'Storage API', description: 'The Storage API enables web apps to persist structured data in the user\\'s browser.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:inventory', class: 'icon size-32 color-white', alt: 'Storage API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_bluetooth')), title: 'Bluetooth', description: 'The Web Bluetooth API enables web apps to connect to Bluetooth Low Energy (BLE) devices and read values from or write values to it.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:bluetooth', class: 'icon size-32 color-white', alt: 'Bluetooth' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_nfc')), title: 'NFC', description: 'The Web NFC API enables web apps to read and write to NFC tags.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:nfc', class: 'icon size-32 color-white', alt: 'NFC' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { link: (path('app_feature_ar_vr')), title: 'AR/VR', description: 'Augmented reality enables web apps to place virtual objects in reality.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:layers', class: 'icon size-32 color-white', alt: 'AR/VR' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { link: (path('app_feature_payment')), title: 'Payment', description: 'The Payment Request API provides a browser-based method to enable users to make payments on the web, using a credit card, Apple Pay or Google Pay.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:credit-card', class: 'icon size-32 color-white', alt: 'Payment' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_wake_lock')), title: 'Wake lock', description: 'The Screen Wake Lock API enables web apps to prevent devices from dimming or locking the screen when the app needs to keep running.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-lock-portrait', class: 'icon size-32 color-white', alt: 'Wake lock' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_orientation')), title: 'Orientation', description: 'The DeviceOrientationEvent gives information about the physical orientation of the user\\'s device.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-rotation', class: 'icon size-32 color-white', alt: 'Orientation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_device_motion')), title: 'Motion', description: 'The DeviceMotionEvent gives information about the speed of changes for the position and orientation of the user\\'s device.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:3d-rotation', class: 'icon size-32 color-white', alt: 'Motion' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_network_info')), title: 'Network info', description: 'The NetworkInformation API provides information about the connection of a device, allowing web apps to adapt functionality based on network quality.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:network-check', class: 'icon size-32 color-white', alt: 'Network info' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_speech_synthesis')), title: 'Speech synthesis', description: 'Speech synthesis provides text-to-speech and allows programs to read out their text content.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:record-voice-over', class: 'icon size-32 color-white', alt: 'Speech synthesis' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_speech_recognition')), title: 'Speech recognition', description: 'Speech recognition is part of the Web Speech API and provides the ability to recognize voice context from an audio input.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:hearing', class: 'icon size-32 color-white', alt: 'Speech recognition' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_multi_touch')), title: 'Multi touch', description: 'Touch events enable web apps to capture complex touch behaviour.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:touch-app', class: 'icon size-32 color-white', alt: 'Multi touch' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_i18n')), title: 'i18n', description: 'Internationalization (i18n) enables web apps to adapt to different languages and regions.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'fluent-mdl2:locale-language', class: 'icon size-32 color-white', alt: 'i18n' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_presentation')), title: 'Presentation', description: 'The Presentation API enables web apps to display content on external screens.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ri:presentation-fill', class: 'icon size-32 color-white', alt: 'presentation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

        </ul>
    </div>

</section>", "components/Features.html.twig", "/Users/praveenmujawdiya/Documents/survos/pwa-f7/templates/components/Features.html.twig");
    }
}


/* components/Features.html.twig */
class __TwigTemplate_1fb5cbdf94a162448bd258deeed21be9___30960219741 extends Template
{
    private Source $source;
    /**
     * @var array<string, Template>
     */
    private array $macros = [];

    public function __construct(Environment $env)
    {
        parent::__construct($env);

        $this->source = $this->getSourceContext();

        $this->blocks = [
            'outer__block_fallback' => [$this, 'block_outer__block_fallback'],
            'content' => [$this, 'block_content'],
        ];
    }

    protected function doGetParent(array $context): bool|string|Template|TemplateWrapper
    {
        // line 206
        return $this->loadTemplate((isset($context["__parent__"]) || array_key_exists("__parent__", $context) ? $context["__parent__"] : (function () { throw new RuntimeError('Variable "__parent__" does not exist.', 206, $this->source); })()), "components/Features.html.twig", 206);
    }

    protected function doDisplay(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        yield from $this->getParent($context)->unwrap()->yield($context, array_merge($this->blocks, $blocks));
        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

    }

    /**
     * @return iterable<null|scalar|\Stringable>
     */
    public function block_outer__block_fallback(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        yield from [];
    }

    // line 207
    /**
     * @return iterable<null|scalar|\Stringable>
     */
    public function block_content(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        yield $this->env->getRuntime('Symfony\UX\TwigComponent\Twig\ComponentRuntime')->render("ux:icon", ["name" => "material-symbols:record-voice-over", "class" => "icon size-32 color-white", "alt" => "Speech synthesis"]);
        yield "
                ";
        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        yield from [];
    }

    /**
     * @codeCoverageIgnore
     */
    public function getTemplateName(): string
    {
        return "components/Features.html.twig";
    }

    /**
     * @codeCoverageIgnore
     */
    public function isTraitable(): bool
    {
        return false;
    }

    /**
     * @codeCoverageIgnore
     */
    public function getDebugInfo(): array
    {
        return array (  13589 => 207,  13534 => 206,  13212 => 201,  13157 => 200,  12835 => 195,  12780 => 194,  12458 => 189,  12403 => 188,  12081 => 183,  12026 => 182,  11704 => 177,  11649 => 176,  11327 => 171,  11272 => 170,  10950 => 165,  10895 => 164,  10573 => 159,  10518 => 158,  10196 => 153,  10141 => 152,  9819 => 147,  9764 => 146,  9442 => 141,  9387 => 140,  9064 => 135,  9009 => 134,  8687 => 129,  8632 => 128,  8310 => 123,  8255 => 122,  7933 => 117,  7878 => 116,  7556 => 111,  7501 => 110,  7179 => 105,  7124 => 104,  6802 => 99,  6747 => 98,  6425 => 93,  6370 => 92,  6048 => 87,  5993 => 86,  5671 => 81,  5616 => 80,  5294 => 75,  5239 => 74,  4917 => 69,  4862 => 68,  4540 => 63,  4485 => 62,  4163 => 57,  4108 => 56,  3786 => 51,  3731 => 50,  3409 => 45,  3354 => 44,  3032 => 39,  2977 => 38,  2655 => 33,  2600 => 32,  2278 => 27,  2223 => 26,  1901 => 21,  1846 => 20,  1524 => 15,  1469 => 14,  1147 => 9,  1092 => 8,  782 => 233,  768 => 230,  763 => 227,  749 => 224,  744 => 221,  730 => 218,  725 => 215,  711 => 212,  706 => 209,  692 => 206,  687 => 203,  673 => 200,  668 => 197,  654 => 194,  649 => 191,  635 => 188,  630 => 185,  616 => 182,  611 => 179,  597 => 176,  592 => 173,  578 => 170,  573 => 167,  559 => 164,  554 => 161,  540 => 158,  535 => 155,  521 => 152,  516 => 149,  502 => 146,  497 => 143,  483 => 140,  478 => 137,  464 => 134,  459 => 131,  445 => 128,  440 => 125,  426 => 122,  421 => 119,  407 => 116,  402 => 113,  388 => 110,  383 => 107,  369 => 104,  364 => 101,  350 => 98,  345 => 95,  331 => 92,  326 => 89,  312 => 86,  307 => 83,  293 => 80,  288 => 77,  274 => 74,  269 => 71,  255 => 68,  250 => 65,  236 => 62,  231 => 59,  217 => 56,  212 => 53,  198 => 50,  193 => 47,  179 => 44,  174 => 41,  160 => 38,  155 => 35,  141 => 32,  136 => 29,  122 => 26,  117 => 23,  103 => 20,  98 => 17,  84 => 14,  79 => 11,  65 => 8,  57 => 3,  51 => 1,);
    }

    public function getSourceContext(): Source
    {
        return new Source("<section {{ attributes }}>

    <h2 class=\"block-title block-title-medium\">{{ 'homepage.demo'|trans }}</h2>
    <div class=\"list cards-list media-list inset margin-vertical-half\">
        <ul class=\"row align-items-stretch justify-content-flex-start\" style=\"column-gap: var(--f7-grid-gap);\">

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_installation')), title: 'Installation', description: 'Using the beforeinstallprompt event, a native dialog can be displayed to install a web app' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:install-mobile', class: 'icon size-32 color-white', alt: 'Install' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_offline_support')), title: 'Offline support', description: 'The Service Worker enables web apps to work offline' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:download-for-offline', class: 'icon size-32 color-white', alt: 'Offline support' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_notifications')), title: 'Notifications', description: 'The Notifications API enables web apps to display notifications, even when the app is not active.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:notifications-outline', class: 'icon size-32 color-white', alt: 'Notifications' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_shortcuts')), title: 'Shortcuts', description: 'Shortcuts provide quick access to pages in your app from the app icon.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'tdesign:mobile-shortcut-filled', class: 'icon size-32 color-white', alt: 'Shortcuts' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_view_transition')), title: 'View Transitions', description: 'The View Transitions API enables app-like transitions between pages.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:auto-awesome-motion', class: 'icon size-32 color-white', alt: 'View Transitions' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_geolocation')), title: 'Geolocation', description: 'The Geolocation API enables users to share their location with web apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-gps-fixed', class: 'icon size-32 color-white', alt: 'Geolocation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_media_capture')), title: 'Media capture', description: 'Media capture allows web apps to use the camera and microphone of a device' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:videocam', class: 'icon size-32 color-white', alt: 'Media capture' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-deeporange\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_picture_in_picture')), title: 'Picture-in-picture', description: 'The Document Picture-in-Picture API makes it possible to open an always-on-top window that can be populated with arbitrary HTML content.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:picture-in-picture', class: 'icon size-32 color-white', alt: 'Picture-in-picture' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_file_system')), title: 'File System', description: 'Access to the file system of the user\\'s device' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-insert-drive-file', class: 'icon size-32 color-white', alt: 'File System' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_authentication')), title: 'Authentication', description: 'Web Authentication API (WebAuthn) enables passwordless authentication through your device\\'s fingerprint reader or an external USB Security Key.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-fingerprint', class: 'icon size-32 color-white', alt: 'Authentication' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_protocol_handling')), title: 'Protocol Handling', description: 'Protocol handling enables web apps to register their ability to open links with particular URL schemes.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:language', class: 'icon size-32 color-white', alt: 'Protocol Handling' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_file_handling')), title: 'File Handling API', description: 'The File Handling API enables web apps to register as file handlers with the operating system' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:folder-open', class: 'icon size-32 color-white', alt: 'File Handling API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { link: (path('app_feature_contact_picker')), title: 'Contact picker', description: 'The Contact Picker API allows web apps to select the user\\'s contacts after permission has been granted.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:account-box', class: 'icon size-32 color-white', alt: 'Contact picker' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_web_share')), title: 'Web share', description: 'The Web Share API invokes the native share mechanism of the device and allows users to share text, URLs or files.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:share', class: 'icon size-32 color-white', alt: 'Web share' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { link: (path('app_feature_barcode_detection')), title: 'Barcode detection', description: 'The Barcode Detection API detects barcodes and QR codes in images.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:qr-code-scanner', class: 'icon size-32 color-white', alt: 'Barcode detection' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { link: (path('app_feature_face_detection')), title: 'Face detection', description: 'The Shape Detection API detects faces in images.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:face', class: 'icon size-32 color-white', alt: 'Face detection' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_vibration')), title: 'Vibration', description: 'The Vibration API enables web apps to make a mobile device vibrate.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:vibration', class: 'icon size-32 color-white', alt: 'Vibration' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_audio_recording')), title: 'Audio recording', description: 'Record audio using MediaRecorder and visualize audio using Web Audio API.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:mic', class: 'icon size-32 color-white', alt: 'Audio recording' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_audio')), title: 'Audio', description: 'The Media Session API allows web apps to display controls for media playback on a device\\'s lock screen.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:round-play-circle-filled', class: 'icon size-32 color-white', alt: 'Audio' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { link: (path('app_feature_audio_session')), title: 'Audio Session API', description: 'The Audio Session API configures how audio from web apps should mix with audio from native apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:tune', class: 'icon size-32 color-white', alt: 'Audio Session API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_screen_capture')), title: 'Screen Capturing', description: 'Capture Handle and Captured Surface Control enable screen capturing web apps to remotely control captured web apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-share', class: 'icon size-32 color-white', alt: 'Screen Capturing' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_element_capture')), title: 'Element Capture', description: 'Element Capture enables screen capturing web apps to record specific HTML elements.' } %}
                    {% block content %}<img src=\"{{ asset('images/element-capture.svg') }}\" alt=\"Element capture\" />
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { link: (path('app_feature_background_sync')), title: 'Background Sync API', description: 'The Background Sync API enables web apps to defer tasks when it\\'s offline so they can be run when the network connection is restored.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:sync', class: 'icon size-32 color-white', alt: 'Background Sync API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { link: (path('app_feature_background_fetch')), title: 'Background Fetch API', description: 'The Background Fetch API enables web apps to download large files in the background even when the app is not running.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:downloading', class: 'icon size-32 color-white', alt: 'Background Fetch API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_storage')), title: 'Storage API', description: 'The Storage API enables web apps to persist structured data in the user\\'s browser.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:inventory', class: 'icon size-32 color-white', alt: 'Storage API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_bluetooth')), title: 'Bluetooth', description: 'The Web Bluetooth API enables web apps to connect to Bluetooth Low Energy (BLE) devices and read values from or write values to it.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:bluetooth', class: 'icon size-32 color-white', alt: 'Bluetooth' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_nfc')), title: 'NFC', description: 'The Web NFC API enables web apps to read and write to NFC tags.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:nfc', class: 'icon size-32 color-white', alt: 'NFC' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { link: (path('app_feature_ar_vr')), title: 'AR/VR', description: 'Augmented reality enables web apps to place virtual objects in reality.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:layers', class: 'icon size-32 color-white', alt: 'AR/VR' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { link: (path('app_feature_payment')), title: 'Payment', description: 'The Payment Request API provides a browser-based method to enable users to make payments on the web, using a credit card, Apple Pay or Google Pay.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:credit-card', class: 'icon size-32 color-white', alt: 'Payment' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_wake_lock')), title: 'Wake lock', description: 'The Screen Wake Lock API enables web apps to prevent devices from dimming or locking the screen when the app needs to keep running.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-lock-portrait', class: 'icon size-32 color-white', alt: 'Wake lock' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_orientation')), title: 'Orientation', description: 'The DeviceOrientationEvent gives information about the physical orientation of the user\\'s device.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-rotation', class: 'icon size-32 color-white', alt: 'Orientation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_device_motion')), title: 'Motion', description: 'The DeviceMotionEvent gives information about the speed of changes for the position and orientation of the user\\'s device.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:3d-rotation', class: 'icon size-32 color-white', alt: 'Motion' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_network_info')), title: 'Network info', description: 'The NetworkInformation API provides information about the connection of a device, allowing web apps to adapt functionality based on network quality.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:network-check', class: 'icon size-32 color-white', alt: 'Network info' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_speech_synthesis')), title: 'Speech synthesis', description: 'Speech synthesis provides text-to-speech and allows programs to read out their text content.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:record-voice-over', class: 'icon size-32 color-white', alt: 'Speech synthesis' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_speech_recognition')), title: 'Speech recognition', description: 'Speech recognition is part of the Web Speech API and provides the ability to recognize voice context from an audio input.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:hearing', class: 'icon size-32 color-white', alt: 'Speech recognition' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_multi_touch')), title: 'Multi touch', description: 'Touch events enable web apps to capture complex touch behaviour.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:touch-app', class: 'icon size-32 color-white', alt: 'Multi touch' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_i18n')), title: 'i18n', description: 'Internationalization (i18n) enables web apps to adapt to different languages and regions.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'fluent-mdl2:locale-language', class: 'icon size-32 color-white', alt: 'i18n' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_presentation')), title: 'Presentation', description: 'The Presentation API enables web apps to display content on external screens.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ri:presentation-fill', class: 'icon size-32 color-white', alt: 'presentation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

        </ul>
    </div>

</section>", "components/Features.html.twig", "/Users/praveenmujawdiya/Documents/survos/pwa-f7/templates/components/Features.html.twig");
    }
}


/* components/Features.html.twig */
class __TwigTemplate_1fb5cbdf94a162448bd258deeed21be9___28017619341 extends Template
{
    private Source $source;
    /**
     * @var array<string, Template>
     */
    private array $macros = [];

    public function __construct(Environment $env)
    {
        parent::__construct($env);

        $this->source = $this->getSourceContext();

        $this->blocks = [
            'outer__block_fallback' => [$this, 'block_outer__block_fallback'],
            'content' => [$this, 'block_content'],
        ];
    }

    protected function doGetParent(array $context): bool|string|Template|TemplateWrapper
    {
        // line 212
        return $this->loadTemplate((isset($context["__parent__"]) || array_key_exists("__parent__", $context) ? $context["__parent__"] : (function () { throw new RuntimeError('Variable "__parent__" does not exist.', 212, $this->source); })()), "components/Features.html.twig", 212);
    }

    protected function doDisplay(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        yield from $this->getParent($context)->unwrap()->yield($context, array_merge($this->blocks, $blocks));
        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

    }

    /**
     * @return iterable<null|scalar|\Stringable>
     */
    public function block_outer__block_fallback(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        yield from [];
    }

    // line 213
    /**
     * @return iterable<null|scalar|\Stringable>
     */
    public function block_content(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        yield $this->env->getRuntime('Symfony\UX\TwigComponent\Twig\ComponentRuntime')->render("ux:icon", ["name" => "material-symbols:hearing", "class" => "icon size-32 color-white", "alt" => "Speech recognition"]);
        yield "
                ";
        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        yield from [];
    }

    /**
     * @codeCoverageIgnore
     */
    public function getTemplateName(): string
    {
        return "components/Features.html.twig";
    }

    /**
     * @codeCoverageIgnore
     */
    public function isTraitable(): bool
    {
        return false;
    }

    /**
     * @codeCoverageIgnore
     */
    public function getDebugInfo(): array
    {
        return array (  13966 => 213,  13911 => 212,  13589 => 207,  13534 => 206,  13212 => 201,  13157 => 200,  12835 => 195,  12780 => 194,  12458 => 189,  12403 => 188,  12081 => 183,  12026 => 182,  11704 => 177,  11649 => 176,  11327 => 171,  11272 => 170,  10950 => 165,  10895 => 164,  10573 => 159,  10518 => 158,  10196 => 153,  10141 => 152,  9819 => 147,  9764 => 146,  9442 => 141,  9387 => 140,  9064 => 135,  9009 => 134,  8687 => 129,  8632 => 128,  8310 => 123,  8255 => 122,  7933 => 117,  7878 => 116,  7556 => 111,  7501 => 110,  7179 => 105,  7124 => 104,  6802 => 99,  6747 => 98,  6425 => 93,  6370 => 92,  6048 => 87,  5993 => 86,  5671 => 81,  5616 => 80,  5294 => 75,  5239 => 74,  4917 => 69,  4862 => 68,  4540 => 63,  4485 => 62,  4163 => 57,  4108 => 56,  3786 => 51,  3731 => 50,  3409 => 45,  3354 => 44,  3032 => 39,  2977 => 38,  2655 => 33,  2600 => 32,  2278 => 27,  2223 => 26,  1901 => 21,  1846 => 20,  1524 => 15,  1469 => 14,  1147 => 9,  1092 => 8,  782 => 233,  768 => 230,  763 => 227,  749 => 224,  744 => 221,  730 => 218,  725 => 215,  711 => 212,  706 => 209,  692 => 206,  687 => 203,  673 => 200,  668 => 197,  654 => 194,  649 => 191,  635 => 188,  630 => 185,  616 => 182,  611 => 179,  597 => 176,  592 => 173,  578 => 170,  573 => 167,  559 => 164,  554 => 161,  540 => 158,  535 => 155,  521 => 152,  516 => 149,  502 => 146,  497 => 143,  483 => 140,  478 => 137,  464 => 134,  459 => 131,  445 => 128,  440 => 125,  426 => 122,  421 => 119,  407 => 116,  402 => 113,  388 => 110,  383 => 107,  369 => 104,  364 => 101,  350 => 98,  345 => 95,  331 => 92,  326 => 89,  312 => 86,  307 => 83,  293 => 80,  288 => 77,  274 => 74,  269 => 71,  255 => 68,  250 => 65,  236 => 62,  231 => 59,  217 => 56,  212 => 53,  198 => 50,  193 => 47,  179 => 44,  174 => 41,  160 => 38,  155 => 35,  141 => 32,  136 => 29,  122 => 26,  117 => 23,  103 => 20,  98 => 17,  84 => 14,  79 => 11,  65 => 8,  57 => 3,  51 => 1,);
    }

    public function getSourceContext(): Source
    {
        return new Source("<section {{ attributes }}>

    <h2 class=\"block-title block-title-medium\">{{ 'homepage.demo'|trans }}</h2>
    <div class=\"list cards-list media-list inset margin-vertical-half\">
        <ul class=\"row align-items-stretch justify-content-flex-start\" style=\"column-gap: var(--f7-grid-gap);\">

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_installation')), title: 'Installation', description: 'Using the beforeinstallprompt event, a native dialog can be displayed to install a web app' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:install-mobile', class: 'icon size-32 color-white', alt: 'Install' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_offline_support')), title: 'Offline support', description: 'The Service Worker enables web apps to work offline' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:download-for-offline', class: 'icon size-32 color-white', alt: 'Offline support' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_notifications')), title: 'Notifications', description: 'The Notifications API enables web apps to display notifications, even when the app is not active.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:notifications-outline', class: 'icon size-32 color-white', alt: 'Notifications' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_shortcuts')), title: 'Shortcuts', description: 'Shortcuts provide quick access to pages in your app from the app icon.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'tdesign:mobile-shortcut-filled', class: 'icon size-32 color-white', alt: 'Shortcuts' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_view_transition')), title: 'View Transitions', description: 'The View Transitions API enables app-like transitions between pages.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:auto-awesome-motion', class: 'icon size-32 color-white', alt: 'View Transitions' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_geolocation')), title: 'Geolocation', description: 'The Geolocation API enables users to share their location with web apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-gps-fixed', class: 'icon size-32 color-white', alt: 'Geolocation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_media_capture')), title: 'Media capture', description: 'Media capture allows web apps to use the camera and microphone of a device' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:videocam', class: 'icon size-32 color-white', alt: 'Media capture' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-deeporange\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_picture_in_picture')), title: 'Picture-in-picture', description: 'The Document Picture-in-Picture API makes it possible to open an always-on-top window that can be populated with arbitrary HTML content.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:picture-in-picture', class: 'icon size-32 color-white', alt: 'Picture-in-picture' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_file_system')), title: 'File System', description: 'Access to the file system of the user\\'s device' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-insert-drive-file', class: 'icon size-32 color-white', alt: 'File System' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_authentication')), title: 'Authentication', description: 'Web Authentication API (WebAuthn) enables passwordless authentication through your device\\'s fingerprint reader or an external USB Security Key.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-fingerprint', class: 'icon size-32 color-white', alt: 'Authentication' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_protocol_handling')), title: 'Protocol Handling', description: 'Protocol handling enables web apps to register their ability to open links with particular URL schemes.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:language', class: 'icon size-32 color-white', alt: 'Protocol Handling' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_file_handling')), title: 'File Handling API', description: 'The File Handling API enables web apps to register as file handlers with the operating system' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:folder-open', class: 'icon size-32 color-white', alt: 'File Handling API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { link: (path('app_feature_contact_picker')), title: 'Contact picker', description: 'The Contact Picker API allows web apps to select the user\\'s contacts after permission has been granted.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:account-box', class: 'icon size-32 color-white', alt: 'Contact picker' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_web_share')), title: 'Web share', description: 'The Web Share API invokes the native share mechanism of the device and allows users to share text, URLs or files.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:share', class: 'icon size-32 color-white', alt: 'Web share' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { link: (path('app_feature_barcode_detection')), title: 'Barcode detection', description: 'The Barcode Detection API detects barcodes and QR codes in images.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:qr-code-scanner', class: 'icon size-32 color-white', alt: 'Barcode detection' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { link: (path('app_feature_face_detection')), title: 'Face detection', description: 'The Shape Detection API detects faces in images.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:face', class: 'icon size-32 color-white', alt: 'Face detection' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_vibration')), title: 'Vibration', description: 'The Vibration API enables web apps to make a mobile device vibrate.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:vibration', class: 'icon size-32 color-white', alt: 'Vibration' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_audio_recording')), title: 'Audio recording', description: 'Record audio using MediaRecorder and visualize audio using Web Audio API.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:mic', class: 'icon size-32 color-white', alt: 'Audio recording' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_audio')), title: 'Audio', description: 'The Media Session API allows web apps to display controls for media playback on a device\\'s lock screen.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:round-play-circle-filled', class: 'icon size-32 color-white', alt: 'Audio' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { link: (path('app_feature_audio_session')), title: 'Audio Session API', description: 'The Audio Session API configures how audio from web apps should mix with audio from native apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:tune', class: 'icon size-32 color-white', alt: 'Audio Session API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_screen_capture')), title: 'Screen Capturing', description: 'Capture Handle and Captured Surface Control enable screen capturing web apps to remotely control captured web apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-share', class: 'icon size-32 color-white', alt: 'Screen Capturing' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_element_capture')), title: 'Element Capture', description: 'Element Capture enables screen capturing web apps to record specific HTML elements.' } %}
                    {% block content %}<img src=\"{{ asset('images/element-capture.svg') }}\" alt=\"Element capture\" />
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { link: (path('app_feature_background_sync')), title: 'Background Sync API', description: 'The Background Sync API enables web apps to defer tasks when it\\'s offline so they can be run when the network connection is restored.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:sync', class: 'icon size-32 color-white', alt: 'Background Sync API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { link: (path('app_feature_background_fetch')), title: 'Background Fetch API', description: 'The Background Fetch API enables web apps to download large files in the background even when the app is not running.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:downloading', class: 'icon size-32 color-white', alt: 'Background Fetch API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_storage')), title: 'Storage API', description: 'The Storage API enables web apps to persist structured data in the user\\'s browser.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:inventory', class: 'icon size-32 color-white', alt: 'Storage API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_bluetooth')), title: 'Bluetooth', description: 'The Web Bluetooth API enables web apps to connect to Bluetooth Low Energy (BLE) devices and read values from or write values to it.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:bluetooth', class: 'icon size-32 color-white', alt: 'Bluetooth' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_nfc')), title: 'NFC', description: 'The Web NFC API enables web apps to read and write to NFC tags.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:nfc', class: 'icon size-32 color-white', alt: 'NFC' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { link: (path('app_feature_ar_vr')), title: 'AR/VR', description: 'Augmented reality enables web apps to place virtual objects in reality.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:layers', class: 'icon size-32 color-white', alt: 'AR/VR' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { link: (path('app_feature_payment')), title: 'Payment', description: 'The Payment Request API provides a browser-based method to enable users to make payments on the web, using a credit card, Apple Pay or Google Pay.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:credit-card', class: 'icon size-32 color-white', alt: 'Payment' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_wake_lock')), title: 'Wake lock', description: 'The Screen Wake Lock API enables web apps to prevent devices from dimming or locking the screen when the app needs to keep running.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-lock-portrait', class: 'icon size-32 color-white', alt: 'Wake lock' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_orientation')), title: 'Orientation', description: 'The DeviceOrientationEvent gives information about the physical orientation of the user\\'s device.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-rotation', class: 'icon size-32 color-white', alt: 'Orientation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_device_motion')), title: 'Motion', description: 'The DeviceMotionEvent gives information about the speed of changes for the position and orientation of the user\\'s device.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:3d-rotation', class: 'icon size-32 color-white', alt: 'Motion' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_network_info')), title: 'Network info', description: 'The NetworkInformation API provides information about the connection of a device, allowing web apps to adapt functionality based on network quality.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:network-check', class: 'icon size-32 color-white', alt: 'Network info' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_speech_synthesis')), title: 'Speech synthesis', description: 'Speech synthesis provides text-to-speech and allows programs to read out their text content.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:record-voice-over', class: 'icon size-32 color-white', alt: 'Speech synthesis' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_speech_recognition')), title: 'Speech recognition', description: 'Speech recognition is part of the Web Speech API and provides the ability to recognize voice context from an audio input.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:hearing', class: 'icon size-32 color-white', alt: 'Speech recognition' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_multi_touch')), title: 'Multi touch', description: 'Touch events enable web apps to capture complex touch behaviour.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:touch-app', class: 'icon size-32 color-white', alt: 'Multi touch' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_i18n')), title: 'i18n', description: 'Internationalization (i18n) enables web apps to adapt to different languages and regions.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'fluent-mdl2:locale-language', class: 'icon size-32 color-white', alt: 'i18n' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_presentation')), title: 'Presentation', description: 'The Presentation API enables web apps to display content on external screens.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ri:presentation-fill', class: 'icon size-32 color-white', alt: 'presentation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

        </ul>
    </div>

</section>", "components/Features.html.twig", "/Users/praveenmujawdiya/Documents/survos/pwa-f7/templates/components/Features.html.twig");
    }
}


/* components/Features.html.twig */
class __TwigTemplate_1fb5cbdf94a162448bd258deeed21be9___11771964321 extends Template
{
    private Source $source;
    /**
     * @var array<string, Template>
     */
    private array $macros = [];

    public function __construct(Environment $env)
    {
        parent::__construct($env);

        $this->source = $this->getSourceContext();

        $this->blocks = [
            'outer__block_fallback' => [$this, 'block_outer__block_fallback'],
            'content' => [$this, 'block_content'],
        ];
    }

    protected function doGetParent(array $context): bool|string|Template|TemplateWrapper
    {
        // line 218
        return $this->loadTemplate((isset($context["__parent__"]) || array_key_exists("__parent__", $context) ? $context["__parent__"] : (function () { throw new RuntimeError('Variable "__parent__" does not exist.', 218, $this->source); })()), "components/Features.html.twig", 218);
    }

    protected function doDisplay(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        yield from $this->getParent($context)->unwrap()->yield($context, array_merge($this->blocks, $blocks));
        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

    }

    /**
     * @return iterable<null|scalar|\Stringable>
     */
    public function block_outer__block_fallback(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        yield from [];
    }

    // line 219
    /**
     * @return iterable<null|scalar|\Stringable>
     */
    public function block_content(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        yield $this->env->getRuntime('Symfony\UX\TwigComponent\Twig\ComponentRuntime')->render("ux:icon", ["name" => "material-symbols:touch-app", "class" => "icon size-32 color-white", "alt" => "Multi touch"]);
        yield "
                ";
        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        yield from [];
    }

    /**
     * @codeCoverageIgnore
     */
    public function getTemplateName(): string
    {
        return "components/Features.html.twig";
    }

    /**
     * @codeCoverageIgnore
     */
    public function isTraitable(): bool
    {
        return false;
    }

    /**
     * @codeCoverageIgnore
     */
    public function getDebugInfo(): array
    {
        return array (  14343 => 219,  14288 => 218,  13966 => 213,  13911 => 212,  13589 => 207,  13534 => 206,  13212 => 201,  13157 => 200,  12835 => 195,  12780 => 194,  12458 => 189,  12403 => 188,  12081 => 183,  12026 => 182,  11704 => 177,  11649 => 176,  11327 => 171,  11272 => 170,  10950 => 165,  10895 => 164,  10573 => 159,  10518 => 158,  10196 => 153,  10141 => 152,  9819 => 147,  9764 => 146,  9442 => 141,  9387 => 140,  9064 => 135,  9009 => 134,  8687 => 129,  8632 => 128,  8310 => 123,  8255 => 122,  7933 => 117,  7878 => 116,  7556 => 111,  7501 => 110,  7179 => 105,  7124 => 104,  6802 => 99,  6747 => 98,  6425 => 93,  6370 => 92,  6048 => 87,  5993 => 86,  5671 => 81,  5616 => 80,  5294 => 75,  5239 => 74,  4917 => 69,  4862 => 68,  4540 => 63,  4485 => 62,  4163 => 57,  4108 => 56,  3786 => 51,  3731 => 50,  3409 => 45,  3354 => 44,  3032 => 39,  2977 => 38,  2655 => 33,  2600 => 32,  2278 => 27,  2223 => 26,  1901 => 21,  1846 => 20,  1524 => 15,  1469 => 14,  1147 => 9,  1092 => 8,  782 => 233,  768 => 230,  763 => 227,  749 => 224,  744 => 221,  730 => 218,  725 => 215,  711 => 212,  706 => 209,  692 => 206,  687 => 203,  673 => 200,  668 => 197,  654 => 194,  649 => 191,  635 => 188,  630 => 185,  616 => 182,  611 => 179,  597 => 176,  592 => 173,  578 => 170,  573 => 167,  559 => 164,  554 => 161,  540 => 158,  535 => 155,  521 => 152,  516 => 149,  502 => 146,  497 => 143,  483 => 140,  478 => 137,  464 => 134,  459 => 131,  445 => 128,  440 => 125,  426 => 122,  421 => 119,  407 => 116,  402 => 113,  388 => 110,  383 => 107,  369 => 104,  364 => 101,  350 => 98,  345 => 95,  331 => 92,  326 => 89,  312 => 86,  307 => 83,  293 => 80,  288 => 77,  274 => 74,  269 => 71,  255 => 68,  250 => 65,  236 => 62,  231 => 59,  217 => 56,  212 => 53,  198 => 50,  193 => 47,  179 => 44,  174 => 41,  160 => 38,  155 => 35,  141 => 32,  136 => 29,  122 => 26,  117 => 23,  103 => 20,  98 => 17,  84 => 14,  79 => 11,  65 => 8,  57 => 3,  51 => 1,);
    }

    public function getSourceContext(): Source
    {
        return new Source("<section {{ attributes }}>

    <h2 class=\"block-title block-title-medium\">{{ 'homepage.demo'|trans }}</h2>
    <div class=\"list cards-list media-list inset margin-vertical-half\">
        <ul class=\"row align-items-stretch justify-content-flex-start\" style=\"column-gap: var(--f7-grid-gap);\">

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_installation')), title: 'Installation', description: 'Using the beforeinstallprompt event, a native dialog can be displayed to install a web app' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:install-mobile', class: 'icon size-32 color-white', alt: 'Install' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_offline_support')), title: 'Offline support', description: 'The Service Worker enables web apps to work offline' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:download-for-offline', class: 'icon size-32 color-white', alt: 'Offline support' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_notifications')), title: 'Notifications', description: 'The Notifications API enables web apps to display notifications, even when the app is not active.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:notifications-outline', class: 'icon size-32 color-white', alt: 'Notifications' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_shortcuts')), title: 'Shortcuts', description: 'Shortcuts provide quick access to pages in your app from the app icon.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'tdesign:mobile-shortcut-filled', class: 'icon size-32 color-white', alt: 'Shortcuts' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_view_transition')), title: 'View Transitions', description: 'The View Transitions API enables app-like transitions between pages.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:auto-awesome-motion', class: 'icon size-32 color-white', alt: 'View Transitions' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_geolocation')), title: 'Geolocation', description: 'The Geolocation API enables users to share their location with web apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-gps-fixed', class: 'icon size-32 color-white', alt: 'Geolocation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_media_capture')), title: 'Media capture', description: 'Media capture allows web apps to use the camera and microphone of a device' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:videocam', class: 'icon size-32 color-white', alt: 'Media capture' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-deeporange\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_picture_in_picture')), title: 'Picture-in-picture', description: 'The Document Picture-in-Picture API makes it possible to open an always-on-top window that can be populated with arbitrary HTML content.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:picture-in-picture', class: 'icon size-32 color-white', alt: 'Picture-in-picture' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_file_system')), title: 'File System', description: 'Access to the file system of the user\\'s device' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-insert-drive-file', class: 'icon size-32 color-white', alt: 'File System' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_authentication')), title: 'Authentication', description: 'Web Authentication API (WebAuthn) enables passwordless authentication through your device\\'s fingerprint reader or an external USB Security Key.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-fingerprint', class: 'icon size-32 color-white', alt: 'Authentication' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_protocol_handling')), title: 'Protocol Handling', description: 'Protocol handling enables web apps to register their ability to open links with particular URL schemes.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:language', class: 'icon size-32 color-white', alt: 'Protocol Handling' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_file_handling')), title: 'File Handling API', description: 'The File Handling API enables web apps to register as file handlers with the operating system' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:folder-open', class: 'icon size-32 color-white', alt: 'File Handling API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { link: (path('app_feature_contact_picker')), title: 'Contact picker', description: 'The Contact Picker API allows web apps to select the user\\'s contacts after permission has been granted.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:account-box', class: 'icon size-32 color-white', alt: 'Contact picker' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_web_share')), title: 'Web share', description: 'The Web Share API invokes the native share mechanism of the device and allows users to share text, URLs or files.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:share', class: 'icon size-32 color-white', alt: 'Web share' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { link: (path('app_feature_barcode_detection')), title: 'Barcode detection', description: 'The Barcode Detection API detects barcodes and QR codes in images.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:qr-code-scanner', class: 'icon size-32 color-white', alt: 'Barcode detection' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { link: (path('app_feature_face_detection')), title: 'Face detection', description: 'The Shape Detection API detects faces in images.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:face', class: 'icon size-32 color-white', alt: 'Face detection' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_vibration')), title: 'Vibration', description: 'The Vibration API enables web apps to make a mobile device vibrate.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:vibration', class: 'icon size-32 color-white', alt: 'Vibration' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_audio_recording')), title: 'Audio recording', description: 'Record audio using MediaRecorder and visualize audio using Web Audio API.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:mic', class: 'icon size-32 color-white', alt: 'Audio recording' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_audio')), title: 'Audio', description: 'The Media Session API allows web apps to display controls for media playback on a device\\'s lock screen.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:round-play-circle-filled', class: 'icon size-32 color-white', alt: 'Audio' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { link: (path('app_feature_audio_session')), title: 'Audio Session API', description: 'The Audio Session API configures how audio from web apps should mix with audio from native apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:tune', class: 'icon size-32 color-white', alt: 'Audio Session API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_screen_capture')), title: 'Screen Capturing', description: 'Capture Handle and Captured Surface Control enable screen capturing web apps to remotely control captured web apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-share', class: 'icon size-32 color-white', alt: 'Screen Capturing' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_element_capture')), title: 'Element Capture', description: 'Element Capture enables screen capturing web apps to record specific HTML elements.' } %}
                    {% block content %}<img src=\"{{ asset('images/element-capture.svg') }}\" alt=\"Element capture\" />
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { link: (path('app_feature_background_sync')), title: 'Background Sync API', description: 'The Background Sync API enables web apps to defer tasks when it\\'s offline so they can be run when the network connection is restored.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:sync', class: 'icon size-32 color-white', alt: 'Background Sync API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { link: (path('app_feature_background_fetch')), title: 'Background Fetch API', description: 'The Background Fetch API enables web apps to download large files in the background even when the app is not running.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:downloading', class: 'icon size-32 color-white', alt: 'Background Fetch API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_storage')), title: 'Storage API', description: 'The Storage API enables web apps to persist structured data in the user\\'s browser.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:inventory', class: 'icon size-32 color-white', alt: 'Storage API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_bluetooth')), title: 'Bluetooth', description: 'The Web Bluetooth API enables web apps to connect to Bluetooth Low Energy (BLE) devices and read values from or write values to it.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:bluetooth', class: 'icon size-32 color-white', alt: 'Bluetooth' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_nfc')), title: 'NFC', description: 'The Web NFC API enables web apps to read and write to NFC tags.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:nfc', class: 'icon size-32 color-white', alt: 'NFC' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { link: (path('app_feature_ar_vr')), title: 'AR/VR', description: 'Augmented reality enables web apps to place virtual objects in reality.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:layers', class: 'icon size-32 color-white', alt: 'AR/VR' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { link: (path('app_feature_payment')), title: 'Payment', description: 'The Payment Request API provides a browser-based method to enable users to make payments on the web, using a credit card, Apple Pay or Google Pay.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:credit-card', class: 'icon size-32 color-white', alt: 'Payment' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_wake_lock')), title: 'Wake lock', description: 'The Screen Wake Lock API enables web apps to prevent devices from dimming or locking the screen when the app needs to keep running.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-lock-portrait', class: 'icon size-32 color-white', alt: 'Wake lock' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_orientation')), title: 'Orientation', description: 'The DeviceOrientationEvent gives information about the physical orientation of the user\\'s device.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-rotation', class: 'icon size-32 color-white', alt: 'Orientation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_device_motion')), title: 'Motion', description: 'The DeviceMotionEvent gives information about the speed of changes for the position and orientation of the user\\'s device.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:3d-rotation', class: 'icon size-32 color-white', alt: 'Motion' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_network_info')), title: 'Network info', description: 'The NetworkInformation API provides information about the connection of a device, allowing web apps to adapt functionality based on network quality.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:network-check', class: 'icon size-32 color-white', alt: 'Network info' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_speech_synthesis')), title: 'Speech synthesis', description: 'Speech synthesis provides text-to-speech and allows programs to read out their text content.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:record-voice-over', class: 'icon size-32 color-white', alt: 'Speech synthesis' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_speech_recognition')), title: 'Speech recognition', description: 'Speech recognition is part of the Web Speech API and provides the ability to recognize voice context from an audio input.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:hearing', class: 'icon size-32 color-white', alt: 'Speech recognition' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_multi_touch')), title: 'Multi touch', description: 'Touch events enable web apps to capture complex touch behaviour.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:touch-app', class: 'icon size-32 color-white', alt: 'Multi touch' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_i18n')), title: 'i18n', description: 'Internationalization (i18n) enables web apps to adapt to different languages and regions.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'fluent-mdl2:locale-language', class: 'icon size-32 color-white', alt: 'i18n' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_presentation')), title: 'Presentation', description: 'The Presentation API enables web apps to display content on external screens.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ri:presentation-fill', class: 'icon size-32 color-white', alt: 'presentation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

        </ul>
    </div>

</section>", "components/Features.html.twig", "/Users/praveenmujawdiya/Documents/survos/pwa-f7/templates/components/Features.html.twig");
    }
}


/* components/Features.html.twig */
class __TwigTemplate_1fb5cbdf94a162448bd258deeed21be9___16893564081 extends Template
{
    private Source $source;
    /**
     * @var array<string, Template>
     */
    private array $macros = [];

    public function __construct(Environment $env)
    {
        parent::__construct($env);

        $this->source = $this->getSourceContext();

        $this->blocks = [
            'outer__block_fallback' => [$this, 'block_outer__block_fallback'],
            'content' => [$this, 'block_content'],
        ];
    }

    protected function doGetParent(array $context): bool|string|Template|TemplateWrapper
    {
        // line 224
        return $this->loadTemplate((isset($context["__parent__"]) || array_key_exists("__parent__", $context) ? $context["__parent__"] : (function () { throw new RuntimeError('Variable "__parent__" does not exist.', 224, $this->source); })()), "components/Features.html.twig", 224);
    }

    protected function doDisplay(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        yield from $this->getParent($context)->unwrap()->yield($context, array_merge($this->blocks, $blocks));
        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

    }

    /**
     * @return iterable<null|scalar|\Stringable>
     */
    public function block_outer__block_fallback(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        yield from [];
    }

    // line 225
    /**
     * @return iterable<null|scalar|\Stringable>
     */
    public function block_content(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        yield $this->env->getRuntime('Symfony\UX\TwigComponent\Twig\ComponentRuntime')->render("ux:icon", ["name" => "fluent-mdl2:locale-language", "class" => "icon size-32 color-white", "alt" => "i18n"]);
        yield "
                ";
        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        yield from [];
    }

    /**
     * @codeCoverageIgnore
     */
    public function getTemplateName(): string
    {
        return "components/Features.html.twig";
    }

    /**
     * @codeCoverageIgnore
     */
    public function isTraitable(): bool
    {
        return false;
    }

    /**
     * @codeCoverageIgnore
     */
    public function getDebugInfo(): array
    {
        return array (  14720 => 225,  14665 => 224,  14343 => 219,  14288 => 218,  13966 => 213,  13911 => 212,  13589 => 207,  13534 => 206,  13212 => 201,  13157 => 200,  12835 => 195,  12780 => 194,  12458 => 189,  12403 => 188,  12081 => 183,  12026 => 182,  11704 => 177,  11649 => 176,  11327 => 171,  11272 => 170,  10950 => 165,  10895 => 164,  10573 => 159,  10518 => 158,  10196 => 153,  10141 => 152,  9819 => 147,  9764 => 146,  9442 => 141,  9387 => 140,  9064 => 135,  9009 => 134,  8687 => 129,  8632 => 128,  8310 => 123,  8255 => 122,  7933 => 117,  7878 => 116,  7556 => 111,  7501 => 110,  7179 => 105,  7124 => 104,  6802 => 99,  6747 => 98,  6425 => 93,  6370 => 92,  6048 => 87,  5993 => 86,  5671 => 81,  5616 => 80,  5294 => 75,  5239 => 74,  4917 => 69,  4862 => 68,  4540 => 63,  4485 => 62,  4163 => 57,  4108 => 56,  3786 => 51,  3731 => 50,  3409 => 45,  3354 => 44,  3032 => 39,  2977 => 38,  2655 => 33,  2600 => 32,  2278 => 27,  2223 => 26,  1901 => 21,  1846 => 20,  1524 => 15,  1469 => 14,  1147 => 9,  1092 => 8,  782 => 233,  768 => 230,  763 => 227,  749 => 224,  744 => 221,  730 => 218,  725 => 215,  711 => 212,  706 => 209,  692 => 206,  687 => 203,  673 => 200,  668 => 197,  654 => 194,  649 => 191,  635 => 188,  630 => 185,  616 => 182,  611 => 179,  597 => 176,  592 => 173,  578 => 170,  573 => 167,  559 => 164,  554 => 161,  540 => 158,  535 => 155,  521 => 152,  516 => 149,  502 => 146,  497 => 143,  483 => 140,  478 => 137,  464 => 134,  459 => 131,  445 => 128,  440 => 125,  426 => 122,  421 => 119,  407 => 116,  402 => 113,  388 => 110,  383 => 107,  369 => 104,  364 => 101,  350 => 98,  345 => 95,  331 => 92,  326 => 89,  312 => 86,  307 => 83,  293 => 80,  288 => 77,  274 => 74,  269 => 71,  255 => 68,  250 => 65,  236 => 62,  231 => 59,  217 => 56,  212 => 53,  198 => 50,  193 => 47,  179 => 44,  174 => 41,  160 => 38,  155 => 35,  141 => 32,  136 => 29,  122 => 26,  117 => 23,  103 => 20,  98 => 17,  84 => 14,  79 => 11,  65 => 8,  57 => 3,  51 => 1,);
    }

    public function getSourceContext(): Source
    {
        return new Source("<section {{ attributes }}>

    <h2 class=\"block-title block-title-medium\">{{ 'homepage.demo'|trans }}</h2>
    <div class=\"list cards-list media-list inset margin-vertical-half\">
        <ul class=\"row align-items-stretch justify-content-flex-start\" style=\"column-gap: var(--f7-grid-gap);\">

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_installation')), title: 'Installation', description: 'Using the beforeinstallprompt event, a native dialog can be displayed to install a web app' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:install-mobile', class: 'icon size-32 color-white', alt: 'Install' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_offline_support')), title: 'Offline support', description: 'The Service Worker enables web apps to work offline' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:download-for-offline', class: 'icon size-32 color-white', alt: 'Offline support' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_notifications')), title: 'Notifications', description: 'The Notifications API enables web apps to display notifications, even when the app is not active.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:notifications-outline', class: 'icon size-32 color-white', alt: 'Notifications' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_shortcuts')), title: 'Shortcuts', description: 'Shortcuts provide quick access to pages in your app from the app icon.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'tdesign:mobile-shortcut-filled', class: 'icon size-32 color-white', alt: 'Shortcuts' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_view_transition')), title: 'View Transitions', description: 'The View Transitions API enables app-like transitions between pages.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:auto-awesome-motion', class: 'icon size-32 color-white', alt: 'View Transitions' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_geolocation')), title: 'Geolocation', description: 'The Geolocation API enables users to share their location with web apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-gps-fixed', class: 'icon size-32 color-white', alt: 'Geolocation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_media_capture')), title: 'Media capture', description: 'Media capture allows web apps to use the camera and microphone of a device' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:videocam', class: 'icon size-32 color-white', alt: 'Media capture' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-deeporange\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_picture_in_picture')), title: 'Picture-in-picture', description: 'The Document Picture-in-Picture API makes it possible to open an always-on-top window that can be populated with arbitrary HTML content.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:picture-in-picture', class: 'icon size-32 color-white', alt: 'Picture-in-picture' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_file_system')), title: 'File System', description: 'Access to the file system of the user\\'s device' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-insert-drive-file', class: 'icon size-32 color-white', alt: 'File System' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_authentication')), title: 'Authentication', description: 'Web Authentication API (WebAuthn) enables passwordless authentication through your device\\'s fingerprint reader or an external USB Security Key.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-fingerprint', class: 'icon size-32 color-white', alt: 'Authentication' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_protocol_handling')), title: 'Protocol Handling', description: 'Protocol handling enables web apps to register their ability to open links with particular URL schemes.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:language', class: 'icon size-32 color-white', alt: 'Protocol Handling' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_file_handling')), title: 'File Handling API', description: 'The File Handling API enables web apps to register as file handlers with the operating system' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:folder-open', class: 'icon size-32 color-white', alt: 'File Handling API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { link: (path('app_feature_contact_picker')), title: 'Contact picker', description: 'The Contact Picker API allows web apps to select the user\\'s contacts after permission has been granted.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:account-box', class: 'icon size-32 color-white', alt: 'Contact picker' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_web_share')), title: 'Web share', description: 'The Web Share API invokes the native share mechanism of the device and allows users to share text, URLs or files.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:share', class: 'icon size-32 color-white', alt: 'Web share' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { link: (path('app_feature_barcode_detection')), title: 'Barcode detection', description: 'The Barcode Detection API detects barcodes and QR codes in images.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:qr-code-scanner', class: 'icon size-32 color-white', alt: 'Barcode detection' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { link: (path('app_feature_face_detection')), title: 'Face detection', description: 'The Shape Detection API detects faces in images.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:face', class: 'icon size-32 color-white', alt: 'Face detection' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_vibration')), title: 'Vibration', description: 'The Vibration API enables web apps to make a mobile device vibrate.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:vibration', class: 'icon size-32 color-white', alt: 'Vibration' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_audio_recording')), title: 'Audio recording', description: 'Record audio using MediaRecorder and visualize audio using Web Audio API.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:mic', class: 'icon size-32 color-white', alt: 'Audio recording' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_audio')), title: 'Audio', description: 'The Media Session API allows web apps to display controls for media playback on a device\\'s lock screen.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:round-play-circle-filled', class: 'icon size-32 color-white', alt: 'Audio' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { link: (path('app_feature_audio_session')), title: 'Audio Session API', description: 'The Audio Session API configures how audio from web apps should mix with audio from native apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:tune', class: 'icon size-32 color-white', alt: 'Audio Session API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_screen_capture')), title: 'Screen Capturing', description: 'Capture Handle and Captured Surface Control enable screen capturing web apps to remotely control captured web apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-share', class: 'icon size-32 color-white', alt: 'Screen Capturing' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_element_capture')), title: 'Element Capture', description: 'Element Capture enables screen capturing web apps to record specific HTML elements.' } %}
                    {% block content %}<img src=\"{{ asset('images/element-capture.svg') }}\" alt=\"Element capture\" />
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { link: (path('app_feature_background_sync')), title: 'Background Sync API', description: 'The Background Sync API enables web apps to defer tasks when it\\'s offline so they can be run when the network connection is restored.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:sync', class: 'icon size-32 color-white', alt: 'Background Sync API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { link: (path('app_feature_background_fetch')), title: 'Background Fetch API', description: 'The Background Fetch API enables web apps to download large files in the background even when the app is not running.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:downloading', class: 'icon size-32 color-white', alt: 'Background Fetch API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_storage')), title: 'Storage API', description: 'The Storage API enables web apps to persist structured data in the user\\'s browser.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:inventory', class: 'icon size-32 color-white', alt: 'Storage API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_bluetooth')), title: 'Bluetooth', description: 'The Web Bluetooth API enables web apps to connect to Bluetooth Low Energy (BLE) devices and read values from or write values to it.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:bluetooth', class: 'icon size-32 color-white', alt: 'Bluetooth' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_nfc')), title: 'NFC', description: 'The Web NFC API enables web apps to read and write to NFC tags.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:nfc', class: 'icon size-32 color-white', alt: 'NFC' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { link: (path('app_feature_ar_vr')), title: 'AR/VR', description: 'Augmented reality enables web apps to place virtual objects in reality.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:layers', class: 'icon size-32 color-white', alt: 'AR/VR' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { link: (path('app_feature_payment')), title: 'Payment', description: 'The Payment Request API provides a browser-based method to enable users to make payments on the web, using a credit card, Apple Pay or Google Pay.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:credit-card', class: 'icon size-32 color-white', alt: 'Payment' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_wake_lock')), title: 'Wake lock', description: 'The Screen Wake Lock API enables web apps to prevent devices from dimming or locking the screen when the app needs to keep running.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-lock-portrait', class: 'icon size-32 color-white', alt: 'Wake lock' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_orientation')), title: 'Orientation', description: 'The DeviceOrientationEvent gives information about the physical orientation of the user\\'s device.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-rotation', class: 'icon size-32 color-white', alt: 'Orientation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_device_motion')), title: 'Motion', description: 'The DeviceMotionEvent gives information about the speed of changes for the position and orientation of the user\\'s device.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:3d-rotation', class: 'icon size-32 color-white', alt: 'Motion' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_network_info')), title: 'Network info', description: 'The NetworkInformation API provides information about the connection of a device, allowing web apps to adapt functionality based on network quality.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:network-check', class: 'icon size-32 color-white', alt: 'Network info' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_speech_synthesis')), title: 'Speech synthesis', description: 'Speech synthesis provides text-to-speech and allows programs to read out their text content.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:record-voice-over', class: 'icon size-32 color-white', alt: 'Speech synthesis' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_speech_recognition')), title: 'Speech recognition', description: 'Speech recognition is part of the Web Speech API and provides the ability to recognize voice context from an audio input.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:hearing', class: 'icon size-32 color-white', alt: 'Speech recognition' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_multi_touch')), title: 'Multi touch', description: 'Touch events enable web apps to capture complex touch behaviour.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:touch-app', class: 'icon size-32 color-white', alt: 'Multi touch' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_i18n')), title: 'i18n', description: 'Internationalization (i18n) enables web apps to adapt to different languages and regions.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'fluent-mdl2:locale-language', class: 'icon size-32 color-white', alt: 'i18n' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_presentation')), title: 'Presentation', description: 'The Presentation API enables web apps to display content on external screens.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ri:presentation-fill', class: 'icon size-32 color-white', alt: 'presentation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

        </ul>
    </div>

</section>", "components/Features.html.twig", "/Users/praveenmujawdiya/Documents/survos/pwa-f7/templates/components/Features.html.twig");
    }
}


/* components/Features.html.twig */
class __TwigTemplate_1fb5cbdf94a162448bd258deeed21be9___20598940481 extends Template
{
    private Source $source;
    /**
     * @var array<string, Template>
     */
    private array $macros = [];

    public function __construct(Environment $env)
    {
        parent::__construct($env);

        $this->source = $this->getSourceContext();

        $this->blocks = [
            'outer__block_fallback' => [$this, 'block_outer__block_fallback'],
            'content' => [$this, 'block_content'],
        ];
    }

    protected function doGetParent(array $context): bool|string|Template|TemplateWrapper
    {
        // line 230
        return $this->loadTemplate((isset($context["__parent__"]) || array_key_exists("__parent__", $context) ? $context["__parent__"] : (function () { throw new RuntimeError('Variable "__parent__" does not exist.', 230, $this->source); })()), "components/Features.html.twig", 230);
    }

    protected function doDisplay(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "components/Features.html.twig"));

        yield from $this->getParent($context)->unwrap()->yield($context, array_merge($this->blocks, $blocks));
        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

    }

    /**
     * @return iterable<null|scalar|\Stringable>
     */
    public function block_outer__block_fallback(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "outer__block_fallback"));

        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        yield from [];
    }

    // line 231
    /**
     * @return iterable<null|scalar|\Stringable>
     */
    public function block_content(array $context, array $blocks = []): iterable
    {
        $macros = $this->macros;
        $__internal_ba1c37b184061724dbe82aef62fe32a3 = $this->extensions["Inspector\\Symfony\\Bundle\\Twig\\TwigTracer"];
        $__internal_ba1c37b184061724dbe82aef62fe32a3->enter($__internal_ba1c37b184061724dbe82aef62fe32a3_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "content"));

        yield $this->env->getRuntime('Symfony\UX\TwigComponent\Twig\ComponentRuntime')->render("ux:icon", ["name" => "ri:presentation-fill", "class" => "icon size-32 color-white", "alt" => "presentation"]);
        yield "
                ";
        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_ba1c37b184061724dbe82aef62fe32a3->leave($__internal_ba1c37b184061724dbe82aef62fe32a3_prof);

        yield from [];
    }

    /**
     * @codeCoverageIgnore
     */
    public function getTemplateName(): string
    {
        return "components/Features.html.twig";
    }

    /**
     * @codeCoverageIgnore
     */
    public function isTraitable(): bool
    {
        return false;
    }

    /**
     * @codeCoverageIgnore
     */
    public function getDebugInfo(): array
    {
        return array (  15097 => 231,  15042 => 230,  14720 => 225,  14665 => 224,  14343 => 219,  14288 => 218,  13966 => 213,  13911 => 212,  13589 => 207,  13534 => 206,  13212 => 201,  13157 => 200,  12835 => 195,  12780 => 194,  12458 => 189,  12403 => 188,  12081 => 183,  12026 => 182,  11704 => 177,  11649 => 176,  11327 => 171,  11272 => 170,  10950 => 165,  10895 => 164,  10573 => 159,  10518 => 158,  10196 => 153,  10141 => 152,  9819 => 147,  9764 => 146,  9442 => 141,  9387 => 140,  9064 => 135,  9009 => 134,  8687 => 129,  8632 => 128,  8310 => 123,  8255 => 122,  7933 => 117,  7878 => 116,  7556 => 111,  7501 => 110,  7179 => 105,  7124 => 104,  6802 => 99,  6747 => 98,  6425 => 93,  6370 => 92,  6048 => 87,  5993 => 86,  5671 => 81,  5616 => 80,  5294 => 75,  5239 => 74,  4917 => 69,  4862 => 68,  4540 => 63,  4485 => 62,  4163 => 57,  4108 => 56,  3786 => 51,  3731 => 50,  3409 => 45,  3354 => 44,  3032 => 39,  2977 => 38,  2655 => 33,  2600 => 32,  2278 => 27,  2223 => 26,  1901 => 21,  1846 => 20,  1524 => 15,  1469 => 14,  1147 => 9,  1092 => 8,  782 => 233,  768 => 230,  763 => 227,  749 => 224,  744 => 221,  730 => 218,  725 => 215,  711 => 212,  706 => 209,  692 => 206,  687 => 203,  673 => 200,  668 => 197,  654 => 194,  649 => 191,  635 => 188,  630 => 185,  616 => 182,  611 => 179,  597 => 176,  592 => 173,  578 => 170,  573 => 167,  559 => 164,  554 => 161,  540 => 158,  535 => 155,  521 => 152,  516 => 149,  502 => 146,  497 => 143,  483 => 140,  478 => 137,  464 => 134,  459 => 131,  445 => 128,  440 => 125,  426 => 122,  421 => 119,  407 => 116,  402 => 113,  388 => 110,  383 => 107,  369 => 104,  364 => 101,  350 => 98,  345 => 95,  331 => 92,  326 => 89,  312 => 86,  307 => 83,  293 => 80,  288 => 77,  274 => 74,  269 => 71,  255 => 68,  250 => 65,  236 => 62,  231 => 59,  217 => 56,  212 => 53,  198 => 50,  193 => 47,  179 => 44,  174 => 41,  160 => 38,  155 => 35,  141 => 32,  136 => 29,  122 => 26,  117 => 23,  103 => 20,  98 => 17,  84 => 14,  79 => 11,  65 => 8,  57 => 3,  51 => 1,);
    }

    public function getSourceContext(): Source
    {
        return new Source("<section {{ attributes }}>

    <h2 class=\"block-title block-title-medium\">{{ 'homepage.demo'|trans }}</h2>
    <div class=\"list cards-list media-list inset margin-vertical-half\">
        <ul class=\"row align-items-stretch justify-content-flex-start\" style=\"column-gap: var(--f7-grid-gap);\">

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_installation')), title: 'Installation', description: 'Using the beforeinstallprompt event, a native dialog can be displayed to install a web app' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:install-mobile', class: 'icon size-32 color-white', alt: 'Install' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_offline_support')), title: 'Offline support', description: 'The Service Worker enables web apps to work offline' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:download-for-offline', class: 'icon size-32 color-white', alt: 'Offline support' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_notifications')), title: 'Notifications', description: 'The Notifications API enables web apps to display notifications, even when the app is not active.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:notifications-outline', class: 'icon size-32 color-white', alt: 'Notifications' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_shortcuts')), title: 'Shortcuts', description: 'Shortcuts provide quick access to pages in your app from the app icon.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'tdesign:mobile-shortcut-filled', class: 'icon size-32 color-white', alt: 'Shortcuts' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_view_transition')), title: 'View Transitions', description: 'The View Transitions API enables app-like transitions between pages.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:auto-awesome-motion', class: 'icon size-32 color-white', alt: 'View Transitions' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_geolocation')), title: 'Geolocation', description: 'The Geolocation API enables users to share their location with web apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-gps-fixed', class: 'icon size-32 color-white', alt: 'Geolocation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_media_capture')), title: 'Media capture', description: 'Media capture allows web apps to use the camera and microphone of a device' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:videocam', class: 'icon size-32 color-white', alt: 'Media capture' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-deeporange\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_picture_in_picture')), title: 'Picture-in-picture', description: 'The Document Picture-in-Picture API makes it possible to open an always-on-top window that can be populated with arbitrary HTML content.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:picture-in-picture', class: 'icon size-32 color-white', alt: 'Picture-in-picture' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_file_system')), title: 'File System', description: 'Access to the file system of the user\\'s device' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-insert-drive-file', class: 'icon size-32 color-white', alt: 'File System' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_authentication')), title: 'Authentication', description: 'Web Authentication API (WebAuthn) enables passwordless authentication through your device\\'s fingerprint reader or an external USB Security Key.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:baseline-fingerprint', class: 'icon size-32 color-white', alt: 'Authentication' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_protocol_handling')), title: 'Protocol Handling', description: 'Protocol handling enables web apps to register their ability to open links with particular URL schemes.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:language', class: 'icon size-32 color-white', alt: 'Protocol Handling' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_file_handling')), title: 'File Handling API', description: 'The File Handling API enables web apps to register as file handlers with the operating system' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:folder-open', class: 'icon size-32 color-white', alt: 'File Handling API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { link: (path('app_feature_contact_picker')), title: 'Contact picker', description: 'The Contact Picker API allows web apps to select the user\\'s contacts after permission has been granted.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:account-box', class: 'icon size-32 color-white', alt: 'Contact picker' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_web_share')), title: 'Web share', description: 'The Web Share API invokes the native share mechanism of the device and allows users to share text, URLs or files.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:share', class: 'icon size-32 color-white', alt: 'Web share' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { link: (path('app_feature_barcode_detection')), title: 'Barcode detection', description: 'The Barcode Detection API detects barcodes and QR codes in images.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:qr-code-scanner', class: 'icon size-32 color-white', alt: 'Barcode detection' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { link: (path('app_feature_face_detection')), title: 'Face detection', description: 'The Shape Detection API detects faces in images.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:face', class: 'icon size-32 color-white', alt: 'Face detection' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_vibration')), title: 'Vibration', description: 'The Vibration API enables web apps to make a mobile device vibrate.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:vibration', class: 'icon size-32 color-white', alt: 'Vibration' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_audio_recording')), title: 'Audio recording', description: 'Record audio using MediaRecorder and visualize audio using Web Audio API.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:mic', class: 'icon size-32 color-white', alt: 'Audio recording' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_audio')), title: 'Audio', description: 'The Media Session API allows web apps to display controls for media playback on a device\\'s lock screen.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ic:round-play-circle-filled', class: 'icon size-32 color-white', alt: 'Audio' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { link: (path('app_feature_audio_session')), title: 'Audio Session API', description: 'The Audio Session API configures how audio from web apps should mix with audio from native apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:tune', class: 'icon size-32 color-white', alt: 'Audio Session API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_screen_capture')), title: 'Screen Capturing', description: 'Capture Handle and Captured Surface Control enable screen capturing web apps to remotely control captured web apps.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-share', class: 'icon size-32 color-white', alt: 'Screen Capturing' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_element_capture')), title: 'Element Capture', description: 'Element Capture enables screen capturing web apps to record specific HTML elements.' } %}
                    {% block content %}<img src=\"{{ asset('images/element-capture.svg') }}\" alt=\"Element capture\" />
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { link: (path('app_feature_background_sync')), title: 'Background Sync API', description: 'The Background Sync API enables web apps to defer tasks when it\\'s offline so they can be run when the network connection is restored.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:sync', class: 'icon size-32 color-white', alt: 'Background Sync API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { link: (path('app_feature_background_fetch')), title: 'Background Fetch API', description: 'The Background Fetch API enables web apps to download large files in the background even when the app is not running.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:downloading', class: 'icon size-32 color-white', alt: 'Background Fetch API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { link: (path('app_feature_storage')), title: 'Storage API', description: 'The Storage API enables web apps to persist structured data in the user\\'s browser.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:inventory', class: 'icon size-32 color-white', alt: 'Storage API' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_bluetooth')), title: 'Bluetooth', description: 'The Web Bluetooth API enables web apps to connect to Bluetooth Low Energy (BLE) devices and read values from or write values to it.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:bluetooth', class: 'icon size-32 color-white', alt: 'Bluetooth' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_nfc')), title: 'NFC', description: 'The Web NFC API enables web apps to read and write to NFC tags.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:nfc', class: 'icon size-32 color-white', alt: 'NFC' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { link: (path('app_feature_ar_vr')), title: 'AR/VR', description: 'Augmented reality enables web apps to place virtual objects in reality.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:layers', class: 'icon size-32 color-white', alt: 'AR/VR' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { link: (path('app_feature_payment')), title: 'Payment', description: 'The Payment Request API provides a browser-based method to enable users to make payments on the web, using a credit card, Apple Pay or Google Pay.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:credit-card', class: 'icon size-32 color-white', alt: 'Payment' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_wake_lock')), title: 'Wake lock', description: 'The Screen Wake Lock API enables web apps to prevent devices from dimming or locking the screen when the app needs to keep running.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-lock-portrait', class: 'icon size-32 color-white', alt: 'Wake lock' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-teal\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_orientation')), title: 'Orientation', description: 'The DeviceOrientationEvent gives information about the physical orientation of the user\\'s device.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:screen-rotation', class: 'icon size-32 color-white', alt: 'Orientation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-orange\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_device_motion')), title: 'Motion', description: 'The DeviceMotionEvent gives information about the speed of changes for the position and orientation of the user\\'s device.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:3d-rotation', class: 'icon size-32 color-white', alt: 'Motion' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-blue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_network_info')), title: 'Network info', description: 'The NetworkInformation API provides information about the connection of a device, allowing web apps to adapt functionality based on network quality.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:network-check', class: 'icon size-32 color-white', alt: 'Network info' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-yellow\">
                {% component 'Feature' with { link: (path('app_feature_speech_synthesis')), title: 'Speech synthesis', description: 'Speech synthesis provides text-to-speech and allows programs to read out their text content.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:record-voice-over', class: 'icon size-32 color-white', alt: 'Speech synthesis' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lime\">
                {% component 'Feature' with { link: (path('app_feature_speech_recognition')), title: 'Speech recognition', description: 'Speech recognition is part of the Web Speech API and provides the ability to recognize voice context from an audio input.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:hearing', class: 'icon size-32 color-white', alt: 'Speech recognition' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-pink\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_multi_touch')), title: 'Multi touch', description: 'Touch events enable web apps to capture complex touch behaviour.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'material-symbols:touch-app', class: 'icon size-32 color-white', alt: 'Multi touch' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-lightblue\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_i18n')), title: 'i18n', description: 'Internationalization (i18n) enables web apps to adapt to different languages and regions.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'fluent-mdl2:locale-language', class: 'icon size-32 color-white', alt: 'i18n' }) }}
                {% endblock %}{% endcomponent %}
            </li>

            <li class=\"col-100 medium-50 large-33 theme-color-purple\">
                {% component 'Feature' with { available: 'true', link: (path('app_feature_presentation')), title: 'Presentation', description: 'The Presentation API enables web apps to display content on external screens.' } %}
                    {% block content %}{{ component('ux:icon', { name: 'ri:presentation-fill', class: 'icon size-32 color-white', alt: 'presentation' }) }}
                {% endblock %}{% endcomponent %}
            </li>

        </ul>
    </div>

</section>", "components/Features.html.twig", "/Users/praveenmujawdiya/Documents/survos/pwa-f7/templates/components/Features.html.twig");
    }
}

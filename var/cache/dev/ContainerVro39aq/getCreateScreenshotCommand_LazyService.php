<?php

namespace ContainerVro39aq;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getCreateScreenshotCommand_LazyService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private '.SpomkyLabs\PwaBundle\Command\CreateScreenshotCommand.lazy' shared service.
     *
     * @return \Symfony\Component\Console\Command\LazyCommand
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/LazyCommand.php';

        return $container->privates['.SpomkyLabs\\PwaBundle\\Command\\CreateScreenshotCommand.lazy'] = new \Symfony\Component\Console\Command\LazyCommand('pwa:create:screenshot', [], '[DEPRECATED] Take a screenshot of the application store it in your asset folder', false, #[\Closure(name: 'SpomkyLabs\\PwaBundle\\Command\\CreateScreenshotCommand')] fn (): \SpomkyLabs\PwaBundle\Command\CreateScreenshotCommand => ($container->privates['SpomkyLabs\\PwaBundle\\Command\\CreateScreenshotCommand'] ?? $container->load('getCreateScreenshotCommandService')));
    }
}
